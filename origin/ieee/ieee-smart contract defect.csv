"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Smart Contract Defect Detection Based on Parallel Symbolic Execution","Z. Tian","School of Computer Science and Technology, Beijing Institute of Technology,Beijing,China,100081","2019 3rd International Conference on Circuits, System and Simulation (ICCSS)","19 Dec 2019","2019","","","127","132","There are more than 1 million smart contracts in Ethereum and the number of ethers managed by smart contracts has exceeded 100 million, but the security vulnerabilities in smart contracts seriously jeopardize the financial security of Ethereum users. Existing method for defect detection of smart contract bytecode using symbolic execution does not take care of the accuracy and detection realtime at same time. In this paper a smart contract bytecode defect detection algorithm based on parallel symbolic execution is proposed. We split a smart contract in units of functions by analyzing the smart contract function selection process. A symbolic execution tree is constructed for each function to predict the function execution path. Then we partition the symbolic execution tree into multiple sub-trees evenly. Finally, a process pool is used to perform parallel symbolic execution on those sub-trees to reduce the analysis time of smart contract defect detection. Experimental data shows our method has a significant improvement in detection efficiency compared with existing symbolic execution method. The speedup ratio is up to 3.1x in a 4-core computer. Besides, it does not introduce false positives or false negatives.","","978-1-7281-3657-8","10.1109/CIRSYSSIM.2019.8935603","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8935603","parallel optimization;smart contract;symbolic execution;defect detection;constraint solving","Smart contracts;Flow graphs;Task analysis;Security;Blockchain;Tools","cryptocurrencies;data flow analysis;program diagnostics;program testing;program verification;symbol manipulation;trees (mathematics)","smart contract defect detection;parallel symbolic execution;defect detection algorithm;smart contract function selection process;symbolic execution tree","","","","19","","19 Dec 2019","","","IEEE","IEEE Conferences"
"DEFECTCHECKER: Automated Smart Contract Defect Detection by Analyzing EVM Bytecode","J. Chen; X. Xia; D. Lo; J. Grundy; X. Luo; T. Chen","Faculty of Information Technology, Monash University Faculty of Information Technology, 224480 Clayton, Victoria, Australia, 3168 (e-mail: Jiachi.Chen@monash.edu); Faculty of Information Technology, Monash University Faculty of Information Technology, 224480 Clayton, Victoria, Australia, 3800 (e-mail: xxia@zju.edu.cn); School of Information Systems, Singapore Management University, Singapore, Singapore, Singapore, 17890 (e-mail: davidlo@smu.edu.sg); Faculty of IT, Monash University, Clayton, Victoria, Australia, 3800 (e-mail: john.grundy@monash.edu); Department of Computing, The Hong Kong Polytechnic University, Hong Kong, Hong Kong, Hong Kong, (e-mail: csxluo@comp.polyu.edu.hk); Institute of Big Data Security, Big Data Research Center, University of Electronic Science and Technology of China, Chengdu, Sichuan, China, (e-mail: brokendragon@uestc.edu.cn)","IEEE Transactions on Software Engineering","","2021","PP","99","1","1","Smart contracts are Turing-complete programs running on the blockchain. They are immutable and cannot be modified, even when bugs are detected. Therefore, ensuring smart contracts are bug-free and well-designed before deploying them to the blockchain is extremely important. A contract defect is an error, flaw or fault in a smart contract that causes it to produce an incorrect or unexpected result, or to behave in unintended ways. Detecting and removing contract defects can avoid potential bugs and make programs more robust. Our previous work defined 20 contract defects for smart contracts and divided them into five impact levels. According to our classification, contract defects with seriousness level between 1-3 can lead to unwanted behaviors, e.g., a contract being controlled by attackers. In this paper, we propose DefectChecker, a symbolic execution-based approach and tool to detect eight contract defects that can cause unwanted behaviors of smart contracts on the Ethereum blockchain platform. DefectChecker can detect contract defects from smart contracts' bytecode. We compare DefectChecker with key previous works, including Oyente, Mythril and Securify by using an open-source dataset. Our experimental results show that DefectChecker performs much better than these tools in terms of both speed and accuracy. We also applied DefectChecker to 165,621 distinct smart contracts on the Ethereum platform. We found that 25,815 of these smart contracts contain at least one of the contract defects that belongs to impact level 1-3, including some real-world attacks.","1939-3520","","10.1109/TSE.2021.3054928","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9337195","Smart Contracts;Ethereum;Contract Defects Detection;Bytecode Analyze;Symbolic Execution","Smart contracts;Blockchain;Tools;Computer bugs;Computer hacking;Virtual machining;Organizations","","","","","","","IEEE","27 Jan 2021","","","IEEE","IEEE Early Access Articles"
"Summary of: A Federated Society of Bots for Smart Contract Testing","E. Viglianisi; M. Ceccato; P. Tonella","Fondazione Bruno Kessler,Trento,Italy; University of Verona,Verona,Italy; Università della Svizzera italiana,Lugano,Switzerland","2021 14th IEEE Conference on Software Testing, Verification and Validation (ICST)","24 May 2021","2021","","","282","283","The peculiar novelty of smart contracts is a computational model where irreversible transactions are stored in a distributed persistent data storage, namely the blockchain. The technical nature of this new type of software opens to new kinds of faults, which require specific test capabilities to be revealed. In this paper we present SOCRATES, an extensible and modular framework to automatically test smart contracts. The distinctive features of SOCRATES are: (1) a collection of composable behaviours that exercise smart contracts in the blockchain; (2) it deploys a society of bots, with the purpose of detecting defects arising from multi-user interactions, which are impossible to reveal when deploying a single bot. Our empirical investigation demonstrates that SOCRATES is able expose both known and previously unknown faults in smart contracts that are actively run in the official Ethereum blockchain. Moreover, we show that a society of multiple bots is more efficient in fault exposure than a single bot alone.","2159-4848","978-1-7281-6836-4","10.1109/ICST49551.2021.00040","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9438545","Smart contracts;Software testing;Ethereum","Software testing;Bot (Internet);Conferences;Smart contracts;Memory;Blockchain;Programming","contracts;formal specification;program testing;systems analysis","single bot;federated society;bots;smart contract testing;smart contracts;distributed persistent data storage;blockchain;specific test capabilities;SOCRATES","","","","4","","24 May 2021","","","IEEE","IEEE Conferences"
"Using Fault Injection to Assess Blockchain Systems in Presence of Faulty Smart Contracts","Á. Hajdu; N. Ivaki; I. Kocsis; A. Klenik; L. Gönczy; N. Laranjeiro; H. Madeira; A. Pataricza","Department of Measurement and Information Systems, Budapest University of Technology and Economics, Budapest, Hungary; Department of Informatics Engineering, University of Coimbra, Coimbra, CISUC, Portugal; Department of Measurement and Information Systems, Budapest University of Technology and Economics, Budapest, Hungary; Department of Measurement and Information Systems, Budapest University of Technology and Economics, Budapest, Hungary; Department of Measurement and Information Systems, Budapest University of Technology and Economics, Budapest, Hungary; Department of Informatics Engineering, University of Coimbra, Coimbra, CISUC, Portugal; Department of Informatics Engineering, University of Coimbra, Coimbra, CISUC, Portugal; Department of Measurement and Information Systems, Budapest University of Technology and Economics, Budapest, Hungary","IEEE Access","27 Oct 2020","2020","8","","190760","190783","Blockchain has become particularly popular due to its promise to support business-critical services in very different domains (e.g., retail, healthcare). Blockchain systems rely on complex middleware, like Ethereum or Hyperledger Fabric, that allow running smart contracts, which specify business logic in cooperative applications. The presence of software defects in these contracts has notably caused failures, including severe security problems. In this article, we use software-implemented fault injection (SWIFI) to assess the behavior of permissioned blockchain systems in the presence of faulty smart contracts. We emulate the occurrence of general software faults and also blockchain-specific software faults (e.g., missing require on transaction sender) in smart contracts code and observe the impact on the overall system dependability in terms of reliability and integrity. We also analyze the effectiveness of formal verification and runtime protection mechanisms in detecting the injected faults. Results indicate that formal verification and runtime protections have to complement built-in platform checks to guarantee proper dependability of blockchain systems. The work presented in this article allows smart contract developers to become aware of possible faults in smart contracts and to understand the impact of their presence. It also provides valuable information for middleware developers to improve the overall fault tolerance of their systems.","2169-3536","","10.1109/ACCESS.2020.3032239","Bi-Lateral FCT-NKFIH Program Portugal-Hungary, through the Project Advanced Analytics for Empirical Assessment of Cloud Resilience; European Union’s Horizon 2020 Research and Innovation Program through the Marie Sklodowska-Curie(grant numbers:823788); NRDI Fund Based on the Charter of Bolster Issued by the NRDI Office under the Auspices of the Ministry for Innovation and Technology; ÚNKP-19-3 New National Excellence Program of the Ministry for Innovation and Technology; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9229414","Blockchain systems;dependability;fault injection;formal verification;smart contracts","Smart contracts;Blockchain;Software;Distributed ledger;Fabrics;Computer bugs","business data processing;contracts;cryptography;distributed databases;middleware;program verification;software fault tolerance","fault detection;security problems;hyperledger fabric;Ethereum;permissioned blockchain systems;software-implemented fault injection;software defects;business logic;middleware;business-critical services;faulty smart contracts;fault tolerance;runtime protections;formal verification;system dependability;smart contracts code;blockchain-specific software faults","","1","","62","CCBY","19 Oct 2020","","","IEEE","IEEE Journals"
"Security Smells in Smart Contracts","M. Demir; M. Alalfi; O. Turetken; A. Ferworn",Ryerson University; Ryerson University; Ryerson University; Ryerson University,"2019 IEEE 19th International Conference on Software Quality, Reliability and Security Companion (QRS-C)","7 Oct 2019","2019","","","442","449","The popularity of blockchain technology encourages organizations to use more blockchain features in mission-critical processes such as trading, access control, and computational public safety. Automation of processes with smart contracts is one of these features that significantly enlarge the scope of a blockchain implementation. Smart contracts help automate business processes by modeling business activities on the distributed ledger. Smart contracts are significantly different from other programs from a defect fixing and security issue handling perspective. The opportunity of fixing such issues is only available in the narrow window before registering the contract on to the blockchain. After a smart contract becomes a part of the chain, it is not possible to update or fix any issues. This distinct nature of smart contracts makes it essential to detect the program issues early on by paying attention to security smells. Security smells are clues that point to a deeper problem in the programming space. In this study, we review the literature and identify vulnerabilities that programmers and beneficiaries of smart contracts must avoid. We explain these security smells and categorize them based on their nature. We also review the applications that detect these vulnerabilities and provide information about their approach and coverage. Our main contribution is the evaluation of smart contracts as a platform or aid for mission-critical applications such as access control platforms. We conducted this evaluation by identifying the issues related to smart contracts and informing the reader about the problem, challenges, and techniques. We conclude by defining future directions for our research.","","978-1-7281-3925-8","10.1109/QRS-C.2019.00086","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8859521","security smells, program analysis, blockchain, smart contracts","Smart contracts;Blockchain;Security;Tools;Programming","authorisation;business data processing;contracts;cryptography","security smells;smart contract;blockchain technology;mission-critical process;business process;access control platforms","","5","","29","","7 Oct 2019","","","IEEE","IEEE Conferences"
"A Critical-Path-Coverage-Based Vulnerability Detection Method for Smart Contracts","M. Fu; L. Wu; Z. Hong; F. Zhu; H. Sun; W. Feng","Command and Control Engineering College, Army Engineering University of PLA, Nanjing, China; School of Computer Science, Nanjing University of Posts and Telecommunications, Nanjing, China; Command and Control Engineering College, Army Engineering University of PLA, Nanjing, China; School of Computer Science, Nanjing University of Posts and Telecommunications, Nanjing, China; Command and Control Engineering College, Army Engineering University of PLA, Nanjing, China; Command and Control Engineering College, Army Engineering University of PLA, Nanjing, China","IEEE Access","21 Oct 2019","2019","7","","147327","147344","The second generation of blockchain represented by smart contracts has been developing vigorously in recent years. However, frequent smart contract vulnerability incidents pose a serious risk to blockchain ecosystem security. Since current symbol execution tools often fall into path explosion and thus lead to inefficient detection, this paper expands Mythril's framework to optimize its performance. Firstly, it finds out potential vulnerable code regions using static analysis and identifies critical paths that may have security defects. Then, aiming at the problem that traditional search algorithms cannot actively locate and explore critical paths, this paper presents a multi-objective oriented path search (MOPS) strategy based on path priority. This strategy guides dynamic symbolic execution to cover critical paths quickly, avoiding blind traversal of program execution paths. Finally, it describes security rules and proposes corresponding detection logics for different vulnerability categories. This paper analyzes over 1000 smart contracts extracted from Etherscan. Compared with existing tools based on symbolic execution, the proposed method can reduce time consumption by around 35% while ensuring the accuracy of vulnerability detection. Moreover, existing tools often issue warnings that do not actually cause financial losses. But the proposed method only concentrates on code regions related to transfer of funds, so it can reduce the false alarm rate to some extent.","2169-3536","","10.1109/ACCESS.2019.2947146","National Basic Research Program of China (973 Program)(grant numbers:2017YFB08029); Nanjing University of Posts and Telecommunications(grant numbers:NY219004); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8867880","Block chain security;smart contract;vulnerability mining","Smart contracts;Security;Tools;Semantics;Blockchain;Explosions","contracts;cryptocurrencies;program diagnostics;program testing;search problems","detection logics;ecosystem security;frequent smart contract vulnerability incidents;critical-path-coverage-based vulnerability detection method;vulnerability categories;program execution paths;dynamic symbolic execution;path priority;multiobjective oriented path search strategy;traditional search algorithms;security defects;critical paths;potential vulnerable code regions;path explosion;current symbol execution tools","","1","","42","CCBY","14 Oct 2019","","","IEEE","IEEE Journals"
"Defining Smart Contract Defects on Ethereum","J. Chen; X. Xia; D. Lo; J. Grundy; X. Luo; T. Chen","Faculty of Information Technology, Monash University Faculty of Information Technology, 224480 Clayton, Victoria Australia (e-mail: Jiachi.Chen@monash.edu); Faculty of Information Technology, Monash University Faculty of Information Technology, 224480 Clayton, Victoria Australia 3800 (e-mail: xxia@zju.edu.cn); School of Information Systems, Singapore Management University, Singapore, Singapore Singapore 17890 (e-mail: davidlo@smu.edu.sg); Faculty of IT, Monash University, Clayton, Victoria Australia 3800 (e-mail: john.grundy@monash.edu); Department of Computing, The Hong Kong Polytechnic University, Hong Kong, Hong Kong Hong Kong (e-mail: csxluo@comp.polyu.edu.hk); Institute of Big Data Security, Big Data Research Center, University of Electronic Science and Technology of China, Chengdu, Sichuan China (e-mail: brokendragon@uestc.edu.cn)","IEEE Transactions on Software Engineering","","2020","PP","99","1","1","Smart contracts are programs running on a blockchain. They are immutable to change, and hence can not be patched for bugs once deployed. Thus it is critical to ensure they are bug-free and well-designed before deployment. Code smells are symptoms in source code that possibly indicate e.g. security, architecture and/or usability problems. The detection of code smells is a method to avoid potential bugs and improve the design of existing code. However, traditional code smell patterns are designed for centralized OO programs, e.g., Java or C++. Smart contracts are however decentralized and contain numerous distinctive features, such as the gas system. To fill this gap, we collected smart-contract-related posts from Ethereum Stack Exchange, as well as real-world smart contracts. We manually analyzed these posts and used them to define 20 kinds of code smells for smart contracts. We categorized these into indicating potential security, architecture, and usability problems. To validate if practitioners consider these contract smells as harmful, we created an online survey and received 96 responses from 24 different countries. Feedback showed these code smells are harmful and removing them would improve the quality and robustness of smart contracts. We manually identified our defined code smells in 587 contract accounts and publicly released our dataset. Finally, we summarized 5 impacts caused by contract code smells. These help developers better understand the symptoms of the smells and removal priority.","1939-3520","","10.1109/TSE.2020.2989002","National Key RD Program of China(grant numbers:2018YFB0804100); ARC Laureate Fellowship(grant numbers:FL190100035); ARC Discovery Project(grant numbers:DP170101932); Hong Kong RGC Project(grant numbers:No. 152193/19E); National Natural Science Foundation of China(grant numbers:61872057); Australian Research Councils Discovery Early Career Researcher Award DECRA(grant numbers:DE200100021); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9072659","Empirical Study;Smart Contracts;Ethereum;Contract Defect","Contracts;Computer bugs;Robustness;Protocols;Bitcoin","","","","5","","","IEEE","20 Apr 2020","","","IEEE","IEEE Early Access Articles"
"Towards Eidetic Blockchain Systems with Enhanced Provenance","S. Linoy; S. Ray; N. Stakhanova","University of New Brunswick,Faculty of Computer Science,Fredericton,Canada; University of New Brunswick,Faculty of Computer Science,Fredericton,Canada; University of Saskatchewan,Department of Computer Science,Saskatoon,Canada","2020 IEEE 36th International Conference on Data Engineering Workshops (ICDEW)","15 May 2020","2020","","","7","10","Modern blockchain systems with smart contract support are continuing to be rapidly adopted across various industry sectors and are increasingly used to manage valuable assets. As the size and complexity of smart contract applications increases, so are the coding errors, exploit potential, and regulation requirements. For these reasons, it has become necessary to efficiently manage the system's historic execution information, or provenance, to enable efficient analysis. Existing approaches facilitate historic data access, however, they do not support tracking what initiated the changes or why the states mutated. To address this, we propose a system that enables efficient management of historic smart contracts calls, their parameters, and the blockchain state before and after a call. We further explore how querying this historic data in different granularity levels can facilitate the analysis of a use case example comprised of multiple smart contract calls across different entities.","2473-3490","978-1-7281-4266-1","10.1109/ICDEW49219.2020.00-14","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9094120","Blockchain;provenance;call graph;defect analysis;debugging;regulatory requirements;audit","Smart contracts;Blockchain;Debugging","contracts;data mining","valuable assets;smart contract applications;coding errors;historic data access;blockchain state;multiple smart contract;industry sectors;eidetic blockchain systems;historic smart contracts","","","","18","","15 May 2020","","","IEEE","IEEE Conferences"
"MuSC: A Tool for Mutation Testing of Ethereum Smart Contract","Z. Li; H. Wu; J. Xu; X. Wang; L. Zhang; Z. Chen",Nanjing University; Nanjing University; Nanjing University; Nanjing University; University of Texas at Dallas; Nanjing University,"2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE)","9 Jan 2020","2019","","","1198","1201","The smart contract cannot be modified when it has been deployed on a blockchain. Therefore, it must be given thorough test before its being deployed. Mutation testing is considered as a practical test methodology to evaluate the adequacy of software testing. In this paper, we introduce MuSC, a mutation testing tool for Ethereum Smart Contract (ESC). It can generate numerous mutants at a fast speed and supports the automatic operations such as creating test nets, deploying and executing tests. Specially, MuSC implements a set of novel mutation operators w.r.t ESC programming language, Solidity. Therefore, it can expose the defects of smart contracts to a certain degree. The demonstration video of MuSC is available at https: //youtu.be/3KBKXJPVjbQ, and the source code can be downloaded at https://github.com/belikout/MuSC-Tool-Demo-repo.","2643-1572","978-1-7281-2508-4","10.1109/ASE.2019.00136","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8952206","Blockchain;Ethereum-Smart-Contract;Mutation-Test;Mutation-Operator","Smart contracts;Blockchain;Tools;Cryptography;Software testing","contracts;program testing","novel mutation operators w.r.t;Ethereum Smart Contract;practical test methodology;software testing;mutation testing tool;test nets","","7","","20","","9 Jan 2020","","","IEEE","IEEE Conferences"
"Smart Contract-Based Agricultural Food Supply Chain Traceability","L. Wang; L. Xu; Z. Zheng; S. Liu; X. Li; L. Cao; J. Li; C. Sun","College of Information Science and Technology, Zhongkai University of Agriculture and Engineering, Guangzhou, China; College of Information Science and Technology, Zhongkai University of Agriculture and Engineering, Guangzhou, China; College of Information Science and Technology, Zhongkai University of Agriculture and Engineering, Guangzhou, China; College of Information Science and Technology, Zhongkai University of Agriculture and Engineering, Guangzhou, China; College of Information Science and Technology, Zhongkai University of Agriculture and Engineering, Guangzhou, China; College of Information Science and Technology, Zhongkai University of Agriculture and Engineering, Guangzhou, China; College of Mechanical and Electric Engineering, Shihezi University, Shihezi, China; National Engineering Research Center for Information Technology in Agriculture, Beijing, China","IEEE Access","15 Jan 2021","2021","9","","9296","9307","The complexity of a supply chain makes product safety or quality issues extremely difficult to track, especially for the basic agricultural food supply chains of people's daily diets. The existing agricultural food supply chains present several major problems, such as numerous participants, inconvenient communication caused by long supply chain cycles, data distrust between participants and the centralized system. The emergence of blockchain technology effectively solves the pain-point problem existing in the traceability system of agricultural food supply chains. This paper proposes a framework based on the consortium and smart contracts to track and trace the workflow of agricultural food supply chains, implement traceability and shareability of supply chains, and break down the information islands between enterprises as much as possible to eliminate the need for the central institutions and agencies and improve the integrity of the transaction records, reliability and security. At the same time, farmers record details of the environment and crop growth data in the InterPlanetary File System (IPFS) and store file IPFS hashes in smart contracts, which not only increases data security but also alleviates the blockchain storage explosion problem. This framework has been applied in Shanwei Lvfengyuan Modern Agricultural Development Co., Ltd. Although there are still many defects, the framework has successfully realized functions such as disintermediation and tracing of agricultural product information through QR codes. Thus, the framework proposed in this paper is of great significance and reference value for enterprises to ensure product quality and safety traceability.","2169-3536","","10.1109/ACCESS.2021.3050112","National Natural Science Foundation of China(grant numbers:61871475); Special Project of Laboratory Construction of Guangzhou Innovation Platform Construction Plan(grant numbers:201905010006); Guangdong Science and Technology Plan of Project(grant numbers:2017B0101260016); Foundation for High-level Talents in Higher Education of Guangdong Province(grant numbers:2017GCZX0014,2016KZDXM0013,2017KTSCX094,2018LM2168); Guangzhou Science and Technology Project(grant numbers:2018GXJK072); Beijing Natural Science Foundation(grant numbers:4182023); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9317793","Blockchain;smart contract;agricultural food supply chain;traceability;food safety","Supply chains;Blockchain;Safety;Smart contracts;Radiofrequency identification;Explosions;Agricultural products","agriculture;crops;production engineering computing;security of data;supply chain management","safety traceability;smart contract-based agricultural food supply chain traceability;basic agricultural food supply chains;long supply chain cycles;smart contracts;agricultural product information;product quality;Shanwei Lvfengyuan Modern Agricultural Development Co., Ltd.;interplanetary file system;IPFS","","","","42","CCBY","8 Jan 2021","","","IEEE","IEEE Journals"
"EtherSolve: Computing an Accurate Control-Flow Graph from Ethereum Bytecode","F. Contro; M. Crosara; M. Ceccato; M. D. Preda","University of Verona,Computer Science department; University of Verona,Computer Science department; University of Verona,Computer Science department; University of Verona,Computer Science department","2021 IEEE/ACM 29th International Conference on Program Comprehension (ICPC)","28 Jun 2021","2021","","","127","137","Motivated by the immutable nature of Ethereum smart contracts and of their transactions, quite many approaches have been proposed to detect defects and security problems before smart contracts become persistent in the blockchain and they are granted control on substantial financial value. Because smart contracts source code might not be available, static analysis approaches mostly face the challenge of analysing compiled Ethereum bytecode, that is available directly from the official blockchain. However, due to the intrinsic complexity of Ethereum bytecode (especially in jump resolution), static analysis encounters significant obstacles that reduce the accuracy of exiting automated tools. This paper presents a novel static analysis algorithm based on the symbolic execution of the Ethereum operand stack that allows us to resolve jumps in Ethereum bytecode and to construct an accurate control-flow graph (CFG) of the compiled smart contracts. EtherSolve is a prototype implementation of our approach. Experimental results on a significant set of real world Ethereum smart contracts show that EtherSolve improves the accuracy of the execrated CFGs with respect to the state of the art available approaches. Many static analysis techniques are based on the CFG representation of the code and would therefore benefit from the accurate extraction of the CFG. For example, we implemented a simple extension of EtherSolve that allows to detect instances of the re-entrancy vulnerability.","2643-7171","978-1-6654-1403-6","10.1109/ICPC52881.2021.00021","Dipartimenti di Eccellenza; ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9462980","Reverse engineering;Static analysis;Smart contract;Ethereum","Smart contracts;Prototypes;Static analysis;Blockchain;Detectors;Tools;Complexity theory","blockchains;contracts;flow graphs;Java;program diagnostics","official blockchain;static analysis algorithm;Ethereum operand stack;accurate control-flow graph;compiled smart contracts;EtherSolve;Ethereum smart contracts;static analysis techniques;security problems;substantial financial value;smart contracts source code;compiled Ethereum bytecode","","","","42","","28 Jun 2021","","","IEEE","IEEE Conferences"
"Parallel Governance for Decentralized Autonomous Organizations enabled by Blockchain and Smart Contracts","W. W. Ding; X. Liang; J. Hou; G. Wang; Y. Yuan; J. Li; F. -Y. Wang","Institute of Systems Engineering, Macau University of Science and Technology,Macau,China; Institute of Systems Engineering, Macau University of Science and Technology,Macau,China; Institute of Systems Engineering, Macau University of Science and Technology,Macau,China; Institute of Systems Engineering, Macau University of Science and Technology,Macau,China; School of Mathematics, Renmin University of China,Beijing,China; College of Computer Science and Engineering, Shandong University of Science and Technology,Qingdao,China; Institute of Automation, Chinese Academy of Sciences,State Key Laboratory for Management and Control of Complex Systems,Beijing,China","2021 IEEE 1st International Conference on Digital Twins and Parallel Intelligence (DTPI)","22 Sep 2021","2021","","","1","4","Decentralized autonomous organizations(DAOs) enabled by blockchain and smart contracts is regarded as an effective tool to solve corporate governance problems. It can minimize the contract risks, principal-agent dilemmas, and other issues in corporate governance. However, DAOs also face a variety of governance issues, such as internal governance issues and external governance issues caused by the technical attributes of blockchain and smart contracts. DAO is a typical complex system with the characteristics of both social and engineering complexity. It is difficult for existing governance theories to solve governance problems in DAOs. The parallel intelligence theory based on the artificial systems + computational experiments + parallel execution (ACP) method is a suitable research and practical approach to solve management and control problems for complex systems. Therefore, we propose a parallel governance framework for DAO based on the parallel intelligence theory and discuss its key research issues. Finally, we construct a parallel governance system for GnosisDAO, and conduct computational experiments on its voting mechanism. The results show the defects of GnosisDAO governance mechanism and we thus propose further research directions. We consider that parallel governance represents the future trend of DAO research and practice. This paper is aimed at stimulating further effort and providing helpful guidance and reference for future research works.","","978-1-6654-3337-2","10.1109/DTPI52967.2021.9540069","National Key R&D Program of China(grant numbers:2018AAA0101401); Science and Technology Development Fund, Macau SAR(grant numbers:0050/2020/A1); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9540069","Blockchain;Smart Contracts;Decentralized Autonomous Organizations;Parallel Governance;Parallel Intelligence Theory;ACP","Computational modeling;Digital twin;Conferences;Smart contracts;Tools;Systems modeling;Market research","","","","","","12","","22 Sep 2021","","","IEEE","IEEE Conferences"
"Decentralized Security Bounty Management on Blockchain and IPFS","A. Hoffman; E. Becerril-Blas; K. Moreno; Y. Kim","College of Engineering, University of Nevada, Las Vegas,Las Vegas,Nevada,89154; College of Engineering, University of Nevada, Las Vegas,Las Vegas,Nevada,89154; College of Engineering, University of Nevada, Las Vegas,Las Vegas,Nevada,89154; College of Engineering, University of Nevada, Las Vegas,Las Vegas,Nevada,89154","2020 10th Annual Computing and Communication Workshop and Conference (CCWC)","12 Mar 2020","2020","","","0241","0247","The rise of decentralized applications (DApps) have received great attention over the recent years due to the surge of attention towards blockchain technologies. Motivated by these recent disruptions, this paper introduces a blockchain based bug bounty program named Bountychain. This DApp utilizes an Ethereum based smart contract system and an interplanetary file system (IPFS) storage paradigm intended to be used by companies, industries, and testers. The smart contract model provides a safe, secure, and transparent platform for a bug bounty program. Testers will submit bugs via the blockchain, and companies will accept or reject the defect via the blockchain. Thus, testers will automatically get paid via the in-built smart contract system on a web interface, which will allow the tester to gain recognition and status no matter which company's bugs they find. The transactions on the chain will serve as a persistent and transparent record of software bugs, and IPFS will serve as a long-term storage system for bug details.","","978-1-7281-3783-4","10.1109/CCWC47524.2020.9031109","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9031109","Blockchain;IPFS;Ethereum;Smart Contract;Bug Bounty Program;Cyber Vulnerability Market","Computer bugs;Companies;Contracts;Peer-to-peer computing;Protocols","contracts;cryptography;Internet;online front-ends;program debugging","software bugs;IPFS;long-term storage system;bug details;decentralized security bounty management;DApp;blockchain based bug bounty program;interplanetary file system storage paradigm;smart contract model","","","","26","","12 Mar 2020","","","IEEE","IEEE Conferences"
"A stochastic unit commitment in power systems with high penetration of Smart Grid technologies","S. A. H. Bahreyni; M. A. Khorsand; S. Jadid","Center of Excellence for Power System Automation and Operation, Dept. of Electrical Engineering, Iran University of Science and Technology, Tehran, Iran; Center of Excellence for Power System Automation and Operation, Dept. of Electrical Engineering, Iran University of Science and Technology, Tehran, Iran; Center of Excellence for Power System Automation and Operation, Dept. of Electrical Engineering, Iran University of Science and Technology, Tehran, Iran","Iranian Conference on Smart Grids","19 Jul 2012","2012","","","1","6","Smart Grids are result of utilizing novel technologies such as energy storage systems, distributed generation, demand response resources, and communication technologies in power system to compensate some of its defects. Because of these technologies, various domains of power system will change. Power system operator will encounter various resources. Demand response resources which may be connected to distribution system or transmission system, distributed generation resources, energy storage systems, and renewable generations such as wind and PV farms are some of these resources. Power system operator should use a powerful methodology to manage these resources. Independent system operator should use a stochastic method to manage them. Stochastic unit commitment is presented in this paper to schedule various power resources such as distributed generation units, conventional thermal generation units, wind and PV farms, and demand response resources. Demand response resources which are connected to distribution network, Interruptible loads, distributed generation units, and conventional thermal generation units are used to provide required reserve for compensating stochastic nature of various resources and loads. In the presented model, resources connected to distribution network can participate in wholesale market through aggregators. Moreover, a three-program model which can be used by aggregators is presented in this article. Loads and distributed generation can contract with aggregators via these programs. A three-bus test system is used to illustrate usefulness of the presented model. The results show that ISO can manage the system effectively by using this model.","","978-964-463-479-6","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6243537","Stochastic Unit Commitment;Aggregator;Demand Response;Distributed Generation;Interruptible Loads;PV Farm;Wind Farm;Uncertainty","Uncertainty;Contracts;TV;Production","demand side management;distributed power generation;distribution networks;power generation scheduling;smart power grids;stochastic processes","stochastic unit commitment;power systems;smart grid technologies;energy storage systems;demand response resources;communication technologies;distribution system;transmission system;distributed generation resources;renewable generations;wind farms;PV farms;stochastic method;distributed generation units;thermal generation units;interruptible loads;three-program model;three-bus test system","","1","","7","","19 Jul 2012","","","IEEE","IEEE Conferences"
"Integrating Blockchain in Safety-Critical Systems: An Application to the Nuclear Industry","M. Díaz; E. Soler; L. Llopis; J. Trillo","ITIS Software Institute, Universidad de Málaga, Málaga, Spain; ITIS Software Institute, Universidad de Málaga, Málaga, Spain; ITIS Software Institute, Universidad de Málaga, Málaga, Spain; ITIS Software Institute, Universidad de Málaga, Málaga, Spain","IEEE Access","26 Oct 2020","2020","8","","190605","190619","Safety-Critical Systems (SCSs) often manage sensible data that must be trustworthy, especially in many cases in which different actors participate whose interests may not coincide. Blockchain is a disruptive technology that has emerged to ensure the trustfulness of data. The nuclear industry incorporates many SCSs where blockchain can be applied. This paper focuses on the use of blockchain for the inspection of steam generators of a nuclear power plant. This is a critical process where different actors participate: plant property, external companies in charge of the inspection itself and different administrations. It typically consists of a number of processes that explore the state of different components of the plant in order to find any kind of failure or defect and it generates a great amount of data that must be verifiable and trustworthy. A distributed blockchain-based system is presented where all the nodes share the information and it cannot be altered. As a novelty, automatic inspection algorithms are stored in the blockchain itself by means of smart contracts. The benefits of blockchain are studied for the nuclear industry in general and for the inspection process in particular. In order to explore the possible drawbacks of a blockchain-based system for data management, a simulator has been implemented to recreate the scenario of an inspection. The results obtained show that blockchain architectures are a good alternative to traditional information repositories for nuclear power plant inspections.","2169-3536","","10.1109/ACCESS.2020.3032322","Spanish Project (“rFOG: Improving Latency and Reliability of Offloaded Computation to the FOG for Critical Services”) Ministerio de Ciencia, Innovación y Universidades(grant numbers:RTI2018-099777-B-100); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9229377","Blockchain;distributed applications;inspection;non destructive testing;nuclear power plant","Blockchain;Inspection;Power generation;Smart contracts;Electron tubes;Distributed ledger","boilers;contracts;cryptography;distributed databases;inspection;nuclear engineering computing;nuclear power stations;power engineering computing;safety-critical software;software architecture","nuclear industry;safety-critical systems;SCSs;distributed blockchain-based system;inspection process;data management;blockchain architectures;nuclear power plant inspections;steam generators;plant property;automatic inspection algorithms;smart contracts","","","","33","CCBY","19 Oct 2020","","","IEEE","IEEE Journals"
"EIDM: A Ethereum-Based Cloud User Identity Management Protocol","S. Wang; R. Pei; Y. Zhang","School of Science, Xi’an University of Technology, Xi’an, China; School of Science, Xi’an University of Technology, Xi’an, China; School of Computer Science and Engineering, Xi’an University of Technology, Xi’an, China","IEEE Access","27 Aug 2019","2019","7","","115281","115291","In cloud system, user identity authentication is a key problem. If design defects persist in a cloud user identity authentication scheme, direct risks of sensitive data loss and severe information breach will be incurred. At present, the main problem of cloud user identity management system is that it relies too much on third-party services. Although some third-party-detachment schemes have been proposed in recent years, most of them still rely heavily on cloud server-centered design system. In this paper, a cloud user identity management protocol based on ethereum blockchain was proposed, followed by an establishment of a simple credit management system framework. The new protocol is an improved version of CIDM (Consolidated Identity Management) referred to as EIDM (Ethrerum-based Identity Management) protocol. In the improved protocol, JWT (JSON Web Token) in OAuth 2.0 was used to introduce smart contracts into EIDM protocol, and the credit management system was added to the system so that it can provide a credible identity authentication protocol for cloud users and service providers. The new protocol solves the problem of over-reliance on third parties in the existing identity management system solutions. In the end, an analysis on the security of the new protocol showed that the EIDM protocol proposed in this paper presents more diversified security guarantees relative to the CIDM protocol. The performance evaluation results also indicated that the new protocol demonstrates better practicability and flexibility.","2169-3536","","10.1109/ACCESS.2019.2933989","National Natural Science Foundation of China(grant numbers:61572019); Key Research and Development Program of Shaanxi(grant numbers:2019GY-028); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8792212","Cloud computing;identity management;blockchain;reputation;smart contract","Cloud computing;Identity management systems;Blockchain;Smart contracts;Authentication","authorisation;cloud computing;cryptographic protocols;data privacy;message authentication;mobile computing","Ethereum-based cloud user identity management protocol;cloud system;cloud user identity authentication scheme;cloud user identity management system;third-party-detachment schemes;cloud server-centered design system;simple credit management system framework;EIDM protocol;credible identity authentication protocol;cloud users;service providers;CIDM protocol;identity management system solutions;ethrerum-based identity management;consolidated identity management","","2","","26","CCBY","8 Aug 2019","","","IEEE","IEEE Journals"
"Innovative Research of Blockchain Technology in the field of Computer Monitoring of Hydropower Station","L. Majia","Dehong Teachers'college, institute of science and engineering,Mangshi,Yunnan,China,678400","2021 Second International Conference on Electronics and Sustainable Communication Systems (ICESC)","23 Sep 2021","2021","","","963","966","Early power stations in China have been in operation for a long time. Due to the limitations of design, construction materials and technological level at that time, many hydroelectric generators have some defects. The computer monitoring and control system of a hydropower station refers to the measurement, control, protection and monitoring of the entire equipment of a hydropower station completed and realized by the computer system. The computer monitoring and control system of hydropower station replaces the traditional control equipment, fault recording equipment, monitoring and measuring equipment and relay protection equipment. This paper studies the full homomorphic encryption algorithm, introduces the zero-knowledge proof technology into the block chain trading protocol based on the full homomorphic encryption, and constructs the block chain that protects data privacy.","","978-1-6654-2867-5","10.1109/ICESC51422.2021.9532832","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9532832","Blockchain;Data Privacy Protection;Smart Contract;Hydropower Station;Remote Monitoring;Cloud Platform","Privacy;Protocols;Hydroelectric power generation;Protective relaying;Production;Blockchains;Reliability","blockchains;computerised monitoring;cryptographic protocols;data privacy;hydroelectric power stations;power engineering computing;power generation control;power generation protection;power system measurement;relay protection","data privacy;blockchain trading protocol;full homomorphic encryption algorithm;measuring equipment;relay protection equipment;computer control system;zero-knowledge proof technology;fault recording equipment;hydropower station;computer monitoring;blockchain technology","","","","24","","23 Sep 2021","","","IEEE","IEEE Conferences"
"Design and Implementation on Hyperledger-Based Emission Trading System","P. Yuan; X. Xiong; L. Lei; K. Zheng","Intelligent Computing and Communication Lab, Key Lab of Universal Wireless Communications, Ministry of Education, Beijing University of Posts and Telecommunications, Beijing, China; Intelligent Computing and Communication Lab, Key Lab of Universal Wireless Communications, Ministry of Education, Beijing University of Posts and Telecommunications, Beijing, China; College of Science and Engineering, James Cook University, Douglas, QLD, Australia; Intelligent Computing and Communication Lab, Key Lab of Universal Wireless Communications, Ministry of Education, Beijing University of Posts and Telecommunications, Beijing, China","IEEE Access","16 Jan 2019","2019","7","","6109","6116","Emission trading policy provides a new approach using economic incentives to control the environmental pollution efficiently. Legal polluters can trade emission permits with each other through a trusted trading system that lacks security and credibility due to its centralization nowadays. Permissioned blockchain utilize a decentralized way to store private data immutably, providing new approaches to solve those defects of the existing centralized systems. In this paper, we propose a Hyperledger-based Emission Trading System (HyperETS) on the permissioned blockchain. Using Hyperledger Fabric as the implementation platform, HyperETS integrates the fine-grained access control, distributed ledger, and consensus protocol, aiming to provide credible trading service for polluters. We achieve the business logic by designing the particular ledger structures and smart contract in blockchain. HyperETS stores all transactions immutably in a chain and makes it easy to share the data between organizations. Finally, several experiments are conducted to evaluate the performances of the proposed demonstration system.","2169-3536","","10.1109/ACCESS.2018.2888929","National Natural Science Foundation of China(grant numbers:61671089); Beijing University of Posts and Telecommunications(grant numbers:CX2016314); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8584442","Emission trading;permissioned blockchain;smart contract;hyperledger fabric","Organizations;Fabrics;Servers;Databases","","","","8","","21","OAPA","20 Dec 2018","","","IEEE","IEEE Journals"
"A Review of Blockchain Based Solutions for Fight Against Pandemics","S. Capraz; A. Özsoy","Institute of Science Hacettepe University,Ankara,Turkey; Institute of Science Hacettepe University,Ankara,Turkey","2021 6th International Conference on Computer Science and Engineering (UBMK)","13 Oct 2021","2021","","","1","6","Starting in late 2019, a highly infectious coronavirus disease spread rapidly to all over the world and caused many deaths worldwide. This disease known as COVID-19 caused more than 180 million cases including more than 4 million deaths. Numerous false reports, misinformation, and unsolicited fears in regards to coronavirus, are being circulated regularly since the outbreak of the COVID-19. We can solve some of the problems of the pandemic with new technologies like blockchain, therefore we can control its spread until an effective and affordable vaccine is found. Blockchain can combat pandemics by enabling early detection of outbreaks, protecting user privacy, and ensuring reliable medical supply chain during the outbreak tracking. When ill people are detected, it is possible to quickly and accurately share their diagnostic information and clinical presentation with blockchain. We can also hide patients’ identity while sharing that information. Anonymization is supported in blockchain and it’s stronger than other techniques. Moreover, blockchain is transparent so that every disease event can be kept tabs on transparently. There are a lot of blockchain solutions in literature which is proposed recently to combat COVID-19-like pandemics. In this study, we aim to give the details of blockchain and why we can use it for light against pandemics and review proposed solutions. We summarized the problems of pandemic and the benefits of blockchain technology. We highlighted the defects of solutions in literature and propose alternatives.","2521-1641","978-1-6654-2908-5","10.1109/UBMK52708.2021.9558911","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9558911","Blockchain;Pandemic;Distributed Systems;Distributed Ledger Technology","COVID-19;Privacy;Pandemics;Government;Supply chains;Smart contracts;Blockchains","","","","","","23","","13 Oct 2021","","","IEEE","IEEE Conferences"
