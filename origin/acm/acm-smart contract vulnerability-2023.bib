@inproceedings{10.1145/3528226.3528370,
author = {Barboni, Morena and Morichetta, Andrea and Polini, Andrea},
title = {Smart Contract Testing: Challenges and Opportunities},
year = {2023},
isbn = {9781450393317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3528226.3528370},
doi = {10.1145/3528226.3528370},
abstract = {Blockchain technologies have found important and concrete applications in the real world. Active solutions leverage Smart Contracts for the management of cryptocurrencies, sensitive data, and other valuable assets. One of the core objectives of blockchain-oriented software engineering (BOSE) is ensuring that Smart Contracts receive adequate pre-release testing to guarantee the deployment of reliable code. However, the novelty and the complexity of the blockchain environment pose new challenges to the validation and verification of Smart Contract based software. In this paper, we analyze the aforementioned challenges to foster the discussion on the specific topic of Smart Contract testing and identify relevant research directions.},
booktitle = {Proceedings of the 5th International Workshop on Emerging Trends in Software Engineering for Blockchain},
pages = {21–24},
numpages = {4},
keywords = {testing, smart contract, BOSE, blockchain},
location = {Pittsburgh, Pennsylvania},
series = {WETSEB '22}
}

@inproceedings{10.1145/3524610.3527894,
author = {Yang, Shouliang and Gu, Xiaodong and Shen, Beijun},
title = {Self-Supervised Learning of Smart Contract Representations},
year = {2022},
isbn = {9781450392983},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3524610.3527894},
doi = {10.1145/3524610.3527894},
abstract = {Learning smart contract representations can greatly facilitate the development of smart contracts in many tasks such as bug detection and clone detection. Existing approaches for learning program representations are difficult to apply to smart contracts which have insufficient data and significant homogenization. To overcome these challenges, in this paper, we propose SRCL, a novel, self-supervised approach for learning smart contract representations. Unlike existing supervised methods, which are tied on task-specific data labels, SRCL leverages large-scale unlabeled data by self-supervised learning of both local and global information of smart contracts. It automatically extracts structural sequences from abstract syntax trees (ASTs). Then, two discriminators are designed to guide the Transformer encoder to learn local and global semantic features of smart contracts. We evaluate SRCL on a dataset of 75,006 smart contracts collected from Etherscan. Experimental results show that SRCL considerably outperforms the state-of-the-art code representation models on three downstream tasks.},
booktitle = {Proceedings of the 30th IEEE/ACM International Conference on Program Comprehension},
pages = {82–93},
numpages = {12},
keywords = {data augmentation, code representation learning, smart contract, self-supervised learning},
location = {Virtual Event},
series = {ICPC '22}
}

@inproceedings{10.1145/3503921.3503923,
author = {Maier, Dominik and F\"{a}\ss{}ler, Fabian and Seifert, Jean-Pierre},
title = {Uncovering Smart Contract VM Bugs Via Differential Fuzzing},
year = {2022},
isbn = {9781450396028},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3503921.3503923},
doi = {10.1145/3503921.3503923},
abstract = {The ongoing public interest in blockchains and smart contracts has brought a rise to a magnitude of different blockchain implementations. The rate at which new concepts are envisioned and implemented makes it hard to vet their impact on security. Especially smart contract platforms, executing untrusted code, are very complex by design. Still, people put their trust and money into chains that may lack proper testing. A behavior deviation for edge cases of single op-codes is a critical bug class in this brave new world. It can be abused for Denial of Service against the blockchain, chain splits, double-spending, or direct attacks on applications operating on the blockchain. In this paper, we propose an automated methodology to uncover such differences. Through coverage-guided and state-guided fuzzing, we explore smart contract virtual machine behavior against multiple VMs in parallel. We develop NeoDiff, the first framework for feedback-guided differential fuzzing of smart contract VMs. We discuss real, monetary consequences our tool prevents. NeoDiff can be ported to new smart contract platforms with ease. Apart from fuzzing Ethereum VMs, NeoDiff found a range of critical differentials in VMs for the Neo blockchain. Moreover, through a higher-layer semantics mutator, we uncovered semantic discrepancies between Neo smart contracts written in Python when executed on the blockchain vs. classic CPython. Along the way, NeoDiff uncovered memory corruptions in the C# Neo VM.},
booktitle = {Reversing and Offensive-Oriented Trends Symposium},
pages = {11–22},
numpages = {12},
keywords = {State-Aware, Differential Fuzzing, Smart Contract VM},
location = {Vienna, Austria},
series = {ROOTS'21}
}

@inproceedings{10.1145/3494106.3528672,
author = {Crincoli, Giuseppe and Iadarola, Giacomo and La Rocca, Piera Elena and Martinelli, Fabio and Mercaldo, Francesco and Santone, Antonella},
title = {Vulnerable Smart Contract Detection by Means of Model Checking},
year = {2022},
isbn = {9781450391757},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3494106.3528672},
doi = {10.1145/3494106.3528672},
abstract = {We are recently witnessing an exponential use of blockchain technology since information infrastructures are increasingly moving from the concept of centralisation to the decentralization ones. Blockchain technology is strictly related to the exchange of sensitive information, and its massive adoption is corresponding to interest from attackers. In this paper, we propose a method to automatically detect whether a Smart Contract (i.e. a contract between two parties concerning the exchange of goods and services, it is executed automatically and is governed by a source code written by a developer, contains clearly conditions accepted by both parties and resides on a distributed and decentralised network of computers) exhibits vulnerability. The proposed method relies on model checking and, through the adoption of μ-Calculus rules, is aimed to detect four different vulnerabilities on Smart Contracts modeled as automata. We preliminary evaluate the proposed method on a dataset composed by 40 (vulnerable and legitimate) contracts, by obtaining a precision ranging from 0.98 to 1 and a recall equal to 1, confirming that the proposed method can be promising in vulnerable Smart Contract detection.},
booktitle = {Proceedings of the Fourth ACM International Symposium on Blockchain and Secure Critical Infrastructure},
pages = {3–10},
numpages = {8},
keywords = {formal methods, model checking, privacy, security, smart contract, blockchain},
location = {Nagasaki, Japan},
series = {BSCI '22}
}

@inproceedings{10.1145/3543507.3583367,
author = {Qian, Peng and Liu, Zhenguang and Yin, Yifang and He, Qinming},
title = {Cross-Modality Mutual Learning for Enhancing Smart Contract Vulnerability Detection on Bytecode},
year = {2023},
isbn = {9781450394161},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3543507.3583367},
doi = {10.1145/3543507.3583367},
abstract = {Over the past couple of years, smart contracts have been plagued by multifarious vulnerabilities, which have led to catastrophic financial losses. Their security issues, therefore, have drawn intense attention. As countermeasures, a family of tools has been developed to identify vulnerabilities in smart contracts at the source-code level. Unfortunately, only a small fraction of smart contracts is currently open-sourced. Another spectrum of work is presented to deal with pure bytecode, but most such efforts still suffer from relatively low performance due to the inherent difficulty in restoring abundant semantics in the source code from the bytecode. This paper proposes a novel cross-modality mutual learning framework for enhancing smart contract vulnerability detection on bytecode. Specifically, we engage in two networks, a student network as the primary network and a teacher network as the auxiliary network. takes two modalities, i.e., source code and its corresponding bytecode as inputs, while is fed with only bytecode. By learning from , is trained to infer the missed source code embeddings and combine both modalities to approach precise vulnerability detection. To further facilitate mutual learning between and , we present a cross-modality mutual learning loss and two transfer losses. As a side contribution, we construct and release a labeled smart contract dataset that concerns four types of common vulnerabilities. Experimental results show that our method significantly surpasses state-of-the-art approaches.},
booktitle = {Proceedings of the ACM Web Conference 2023},
pages = {2220–2229},
numpages = {10},
keywords = {Bug detection, Mutual learning, Smart contract, Cross modality},
location = {Austin, TX, USA},
series = {WWW '23}
}

@inproceedings{10.1145/3578527.3578538,
author = {Pani, Siddhasagar and Nallagonda, Harshita Vani and Vigneswaran and Medicherla, Raveendra Kumar and Rajan M},
title = {SmartFuzzDriverGen: Smart Contract Fuzzing Automation for Golang},
year = {2023},
isbn = {9798400700644},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3578527.3578538},
doi = {10.1145/3578527.3578538},
abstract = {Greybox fuzzers require intermediate programs called fuzz drivers to test smart contract APIs. These fuzz drivers use the semi-random inputs (bytes) generated by fuzzers to prepare suitable inputs required to test APIs. Further, fuzz driver also uses this input to decide sequence in which APIs to be invoked and enables the fuzzer to execute the APIs in that sequence to find the vulnerabilities, if any. Manually writing such complex and intelligent fuzz drivers is laborious, requires deep technical skills, hence can be cumbersome and error prone. In this paper, we propose SmartFuzzDriverGen framework to automatically generate fuzz drivers which invoke smart contract APIs using different strategies: unit-level, sequence-based (random, user-defined), and heuristics based. We evaluate the proposed framework by testing a prototype implementation of it with Golang smart contracts (targeted for Hyperledger Fabric platform) and study the effectiveness of the generated fuzz drivers in terms of code coverage as well as bug finding abilities. We observed that fuzzing of APIs in random sequences performed better than the other methods.},
booktitle = {Proceedings of the 16th Innovations in Software Engineering Conference},
articleno = {14},
numpages = {11},
keywords = {automated driver generation, vulnerability detection, smart contracts, fuzzing, sequencing, blockchain},
location = {Allahabad, India},
series = {ISEC '23}
}

@inproceedings{10.1145/3579895.3579943,
author = {He, Yaqiong and Dong, Hanjie and Wang, Runliu and Wu, Huaiguang},
title = {Formal Verification of Smart Contract Based on Timed Colored Petri Net},
year = {2023},
isbn = {9781450398039},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3579895.3579943},
doi = {10.1145/3579895.3579943},
abstract = {The Blockchain 2.0 era integrated with smart contract along with its platforms and applications have experienced explosive growth in recent years. However, many smart contracts deployed in practice are prone to errors and cannot be modified due to the immutability of the blockchain. In light of this, it is vital to ensure the security of correctness of smart contracts before deployment. This paper proposes a formal modeling method based on Timed Colored Petri net (TCPN) to anlyze smart contracts with time constrains. We apply this formalism to a concrete voting contract system. Its functional requirements are formalized by the improved computing timing logic ASK-CTL with ML (Meta Language). Simulation and experiment show that the security and reliability of the voting contract can be effectively guaranteed.},
booktitle = {Proceedings of the 2022 11th International Conference on Networks, Communication and Computing},
pages = {321–327},
numpages = {7},
keywords = {Smart Contract, TCPN, ASK-CTL, formal Verification},
location = {Beijing, China},
series = {ICNCC '22}
}

@inproceedings{10.1145/3533767.3534395,
author = {Zheng, Peilin and Zheng, Zibin and Luo, Xiapu},
title = {Park: Accelerating Smart Contract Vulnerability Detection via Parallel-Fork Symbolic Execution},
year = {2022},
isbn = {9781450393799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3533767.3534395},
doi = {10.1145/3533767.3534395},
abstract = {Symbolic detection has been widely used to detect vulnerabilities in smart contracts. Unfortunately, as reported, existing symbolic tools cost too much time, since they need to execute all paths to detect vulnerabilities. Thus, their accuracy is limited by time. To tackle this problem, in this paper, we propose Park, the first general framework of parallel-fork symbolic execution for smart contracts. The main idea is to use multiple processes during symbolic execution, leveraging multiple CPU cores to enhance efficiency. Firstly, we propose a fork-operation based dynamic forking algorithm to achieve parallel symbolic contract execution. Secondly, to address the SMT performance loss problem in parallelization, we propose an adaptive processes restriction and adjustment algorithm. Thirdly, we design a shared-memory based global variable reconstruction method to collect and rebuild the global variables from different processes. We implement Park as a plug-in and apply it to two popular symbolic execution tools for smart contracts: Oyente and Mythril. The experimental results with third-party datasets show that Park-Oyente and Park-Mythril can provide up to 6.84x and 7.06x speedup compared to original tools, respectively.},
booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {740–751},
numpages = {12},
keywords = {Symbolic Execution, Blockchain, Smart Contract},
location = {Virtual, South Korea},
series = {ISSTA 2022}
}

@inproceedings{10.1145/3550355.3552462,
author = {Godoy, Javier and Galeotti, Juan Pablo and Garbervetsky, Diego and Uchitel, Sebastian},
title = {Predicate Abstractions for Smart Contract Validation},
year = {2022},
isbn = {9781450394666},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3550355.3552462},
doi = {10.1145/3550355.3552462},
abstract = {Smart contracts are immutable programs deployed on the blockchain that can manage significant assets. Because of this, verification and validation of smart contracts is of vital importance. Indeed, it is industrial practice to hire independent specialized companies to audit smart contracts before deployment. Auditors typically rely on a combination of tools and experience but still fail to identify problems in smart contracts before deployment, causing significant losses. In this paper, we propose using predicate abstraction to construct models which can be used by auditors to explore and validate smart contact behaviour at the function call level by proposing predicates that expose different aspects of the contract. We propose predicates based on requires clauses and enum-type state variables as a starting point for contract validation and report on an evaluation on two different benchmarks.},
booktitle = {Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems},
pages = {289–299},
numpages = {11},
location = {Montreal, Quebec, Canada},
series = {MODELS '22}
}

@article{10.1145/3564699,
author = {Otoni, Rodrigo and Marescotti, Matteo and Alt, Leonardo and Eugster, Patrick and Hyv\"{a}rinen, Antti and Sharygina, Natasha},
title = {A Solicitous Approach to Smart Contract Verification},
year = {2023},
issue_date = {May 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {2},
issn = {2471-2566},
url = {https://doi.org/10.1145/3564699},
doi = {10.1145/3564699},
abstract = {Smart contracts are tempting targets of attacks, as they often hold and manipulate significant financial assets, are immutable after deployment, and have publicly available source code, with assets estimated in the order of millions of dollars being lost in the past due to vulnerabilities. Formal verification is thus a necessity, but smart contracts challenge the existing highly efficient techniques routinely applied in the symbolic verification of software, due to specificities not present in general programming languages. A common feature of existing works in this area is the attempt to reuse off-the-shelf verification tools designed for general programming languages. This reuse can lead to inefficiency and potentially unsound results, as domain translation is required. In this article, we describe a carefully crafted approach that directly models the central aspects of smart contracts natively, going from the contract to its logical representation without intermediary steps. We use the expressive and highly automatable logic of constrained Horn clauses for modeling and instantiate our approach to the Solidity language. A tool implementing our approach, called Solicitous, was developed and integrated into the SMTChecker module of the Solidity compiler solc. We evaluated our approach on an extensive benchmark set containing 22,446 real-world smart contracts deployed on the Ethereum blockchain over a 27-month period. The results show that our approach is able to establish safety of significantly more contracts than comparable, publicly available verification tools, with an order of magnitude increase in the percentage of formally verified contracts.},
journal = {ACM Trans. Priv. Secur.},
month = {mar},
articleno = {15},
numpages = {28},
keywords = {direct modeling, vulnerability detection, Smart contracts}
}

@inproceedings{10.1145/3510457.3513076,
author = {Yin, Tingting and Zhang, Chao and Ni, Yuandong and Wu, Yixiong and Wong, Taiyu and Luo, Xiapu and Li, Zheming and Guo, Yu},
title = {An Empirical Study on Implicit Constraints in Smart Contract Static Analysis},
year = {2022},
isbn = {9781450392266},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510457.3513076},
doi = {10.1145/3510457.3513076},
abstract = {Smart contracts are usually financial-related, which makes them attractive attack targets. Many static analysis tools have been developed to facilitate the contract audit process, but not all of them take account of two special features of smart contracts: (1) The external variables, like time, are constrained by real-world factors; (2) The internal variables persist between executions. Since these features import implicit constraints into contracts, they significantly affect the performance of static tools, such as causing errors in reachability analysis and resulting in false positives. In this paper, we conduct a systematic study on implicit constraints from three aspects. First, we summarize the implicit constraints in smart contracts. Second, we evaluate the impact of such constraints on the state-of-the-art static tools. Third, we propose a lightweight but effective mitigation method named ConSym to deal with such constraints and integrate it into OSIRIS. The evaluation result shows that ConSym can filter out 96% of false positives and reduce false negatives by two-thirds.},
booktitle = {Proceedings of the 44th International Conference on Software Engineering: Software Engineering in Practice},
pages = {31–32},
numpages = {2},
keywords = {implicit constraints, code audit, static analysis, smart contract},
location = {Pittsburgh, Pennsylvania},
series = {ICSE-SEIP '22}
}

@inproceedings{10.1145/3540250.3558927,
author = {Nguyen, Hoang H. and Nguyen, Nhat-Minh and Doan, Hong-Phuc and Ahmadi, Zahra and Doan, Thanh-Nam and Jiang, Lingxiao},
title = {MANDO-GURU: Vulnerability Detection for Smart Contract Source Code by Heterogeneous Graph Embeddings},
year = {2022},
isbn = {9781450394130},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3540250.3558927},
doi = {10.1145/3540250.3558927},
abstract = {Smart contracts are increasingly used with blockchain systems for high-value applications. It is highly desired to ensure the quality of smart contract source code before they are deployed. This paper proposes a new deep learning-based tool, MANDO-GURU, that aims to accurately detect vulnerabilities in smart contracts at both coarse-grained contract-level and fine-grained line-level. Using a combination of control-flow graphs and call graphs of Solidity code, we design new heterogeneous graph attention neural networks to encode more structural and potentially semantic relations among different types of nodes and edges of such graphs and use the encoded embeddings of the graphs and nodes to detect vulnerabilities. Our validation of real-world smart contract datasets shows that MANDO-GURU can significantly improve many other vulnerability detection techniques by up to 24% in terms of the F1-score at the contract level, depending on vulnerability types. It is the first learning-based tool for Ethereum smart contracts that identify vulnerabilities at the line level and significantly improves the traditional code analysis-based techniques by up to 63.4%. Our tool is publicly available at https://github.com/MANDO-Project/ge-sc-machine. A test version is currently deployed at http://mandoguru.com, and a demo video of our tool is available at http://mandoguru.com/demo-video.},
booktitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {1736–1740},
numpages = {5},
keywords = {heterogeneous graphs, Ethereum blockchain, smart contracts, graph neural networks, vulnerability detection},
location = {Singapore, Singapore},
series = {ESEC/FSE 2022}
}

@inproceedings{10.1145/3494106.3528683,
author = {Nguyen, Quang-Thang and Do, Bao Son and Nguyen, Thi Tam and Do, Ba-Lam},
title = {GasSaver: A Tool for Solidity Smart Contract Optimization},
year = {2022},
isbn = {9781450391757},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3494106.3528683},
doi = {10.1145/3494106.3528683},
abstract = {Currently, the number of smart contracts using Solidity language in Ethereum increases at a breakneck speed. In this context, optimizing gas fees in smart contracts becomes necessary to save costs for both developers and users who interact directly with these contracts. To optimize gas, developers typically need to have deep knowledge of blockchain and programming languages, making it a significant challenge for new programmers. In this paper, we introduce GasSaver - an open-source tool that analyzes Solidity-based contracts and suggests modifications to reduce transaction fees. Our tool, which relies on a set of seven rules for identifying non-optimized codes, shows that 6,333 in a total of 10,245 top most interactive contracts on Ethereum contain at least one optimization problem and the total problems are more than 30,000. Hence, the use of this tool can reduce a considerable cost for the deployment and interaction of smart contracts.},
booktitle = {Proceedings of the Fourth ACM International Symposium on Blockchain and Secure Critical Infrastructure},
pages = {125–134},
numpages = {10},
keywords = {smart contract, optimization, solidity, ethereum},
location = {Nagasaki, Japan},
series = {BSCI '22}
}

@inproceedings{10.1145/3551349.3560428,
author = {Zhang, Zhuo and Lei, Yan and Yan, Meng and Yu, Yue and Chen, Jiachi and Wang, Shangwen and Mao, Xiaoguang},
title = {Reentrancy Vulnerability Detection and Localization: A Deep Learning Based Two-Phase Approach},
year = {2023},
isbn = {9781450394758},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3551349.3560428},
doi = {10.1145/3551349.3560428},
abstract = {Smart contracts have been widely and rapidly used to automate financial and business transactions together with blockchains, helping people make agreements while minimizing trusts. With millions of smart contracts deployed on blockchain, various bugs and vulnerabilities in smart contracts have emerged. Following the rapid development of deep learning, many recent studies have used deep learning for vulnerability detection to conduct security checks before deploying smart contracts. These approaches show effective results on detecting whether a smart contract is vulnerable or not whereas their results on locating suspicious statements responsible for the detected vulnerability are still unsatisfactory. To address this problem, we propose a deep learning based two-phase smart contract debugger for reentrancy vulnerability, one of the most severe vulnerabilities, named as ReVulDL: Reentrancy Vulnerability Detection and Localization. ReVulDL integrates the vulnerability detection and localization into a unified debugging pipeline. For the detection phase, given a smart contract, ReVulDL uses a graph-based pre-training model to learn the complex relationships in propagation chains for detecting whether the smart contract contains a reentrancy vulnerability. For the localization phase, if a reentrancy vulnerability is detected, ReVulDL utilizes interpretable machine learning to locate the suspicious statements in smart contract to provide interpretations of the detected vulnerability. Our large-scale empirical study on 47,398 smart contracts shows that ReVulDL achieves promising results in detecting reentrancy vulnerabilities (e.g., outperforming 16 state-of-the-art vulnerability detection approaches) and locating vulnerable statements (e.g., 70.38% of the vulnerable statements are ranked within Top-10).},
booktitle = {Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
articleno = {83},
numpages = {13},
keywords = {fault localization, Smart contract, vulnerability detection, reentrancy vulnerability},
location = {Rochester, MI, USA},
series = {ASE '22}
}

@inproceedings{10.1145/3533767.3534222,
author = {Liao, Zeqin and Zheng, Zibin and Chen, Xiao and Nan, Yuhong},
title = {SmartDagger: A Bytecode-Based Static Analysis Approach for Detecting Cross-Contract Vulnerability},
year = {2022},
isbn = {9781450393799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3533767.3534222},
doi = {10.1145/3533767.3534222},
abstract = {With the increasing popularity of blockchain, automatically detecting vulnerabilities in smart contracts is becoming a significant problem. Prior research mainly identifies smart contract vulnerabilities without considering the interactions between multiple contracts. Due to the lack of analyzing the fine-grained contextual information during cross-contract invocations, existing approaches often produced a large number of false positives and false negatives. This paper proposes SmartDagger, a new framework for detecting cross-contract vulnerability through static analysis at the bytecode level. SmartDagger integrates a set of novel mechanisms to ensure its effectiveness and efficiency for cross-contract vulnerability detection. Particularly, SmartDagger effectively recovers the contract attribute information from the smart contract bytecode, which is critical for accurately identifying cross-contract vulnerabilities. Besides, instead of performing the typical whole-program analysis which is heavy-weight and time-consuming, SmartDagger selectively analyzes a subset of functions and reuses the data-flow results, which helps to improve its efficiency. Our further evaluation over a manually labelled dataset showed that SmartDagger significantly outperforms other state-of-the-art tools (i.e., Oyente, Slither, Osiris, and Mythril) for detecting cross-contract vulnerabilities. In addition, running SmartDagger over a randomly selected dataset of 250 smart contracts in the real-world, SmartDagger detects 11 cross-contract vulnerabilities, all of which are missed by prior tools.},
booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {752–764},
numpages = {13},
keywords = {static analysis, bug finding, smart contract, interprocedure analysis},
location = {Virtual, South Korea},
series = {ISSTA 2022}
}

@article{10.1145/3560263,
author = {He, Zheyuan and Song, Shuwei and Bai, Yang and Luo, Xiapu and Chen, Ting and Zhang, Wensheng and He, Peng and Li, Hongwei and Lin, Xiaodong and Zhang, Xiaosong},
title = {TokenAware: Accurate and Efficient Bookkeeping Recognition for Token Smart Contracts},
year = {2023},
issue_date = {January 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {1},
issn = {1049-331X},
url = {https://doi.org/10.1145/3560263},
doi = {10.1145/3560263},
abstract = {Tokens have become an essential part of blockchain ecosystem, so recognizing token transfer behaviors is crucial for applications depending on blockchain. Unfortunately, existing solutions cannot recognize token transfer behaviors accurately and efficiently because of their incomplete patterns and inefficient designs. This work proposes TokenAware, a novel online system for recognizing token transfer behaviors. To improve accuracy, TokenAware infers token transfer behaviors from modifications of internal bookkeeping of a token smart contract for recording the information of token holders (e.g., their addresses and shares). However, recognizing bookkeeping is challenging, because smart contract bytecode does not contain type information. TokenAware overcomes the challenge by first learning the instruction sequences for locating basic types and then deriving the instruction sequences for locating sophisticated types that are composed of basic types. To improve efficiency, TokenAware introduces four optimizations. We conduct extensive experiments to evaluate TokenAware with real blockchain data. Results show that TokenAware can automatically identify new types of bookkeeping and recognize 107,202 tokens with 98.7% precision. TokenAware with optimizations merely incurs 4% overhead, which is 1/345 of the overhead led by the counterpart with no optimization. Moreover, we develop an application based on TokenAware to demonstrate how it facilitates malicious behavior detection.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = {feb},
articleno = {26},
numpages = {35},
keywords = {bookkeeping recognition, token, Ethereum, smart contract}
}

@inproceedings{10.1145/3551349.3559560,
author = {Tolmach, Palina and Li, Yi and Lin, Shang-Wei},
title = {Property-Based Automated Repair of DeFi Protocols},
year = {2023},
isbn = {9781450394758},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3551349.3559560},
doi = {10.1145/3551349.3559560},
abstract = {Programming errors enable security attacks on smart contracts, which are used to manage large sums of financial assets. Automated program repair (APR) techniques aim to reduce developers’ burden of manually fixing bugs by automatically generating patches for a given issue. Existing APR tools for smart contracts focus on mitigating typical smart contract vulnerabilities rather than violations of functional specification. However, in decentralized financial (DeFi) smart contracts, the inconsistency between intended behavior and implementation translates into the deviation from the underlying financial model, resulting in monetary losses for the application and its users. In this work, we propose DeFinery—a technique for automated repair of a smart contract that does not satisfy a user-defined correctness property. To explore a larger set of diverse patches while providing formal correctness guarantees w.r.t. the intended behavior, we combine search-based patch generation with semantic analysis of an original program for inferring its specification. Our experiments in repairing 9 real-world and benchmark smart contracts prove that DeFinery efficiently generates high-quality patches that cannot be found by other existing tools.},
booktitle = {Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
articleno = {184},
numpages = {5},
keywords = {Smart contract, program repair, symbolic execution},
location = {Rochester, MI, USA},
series = {ASE '22}
}

@inproceedings{10.1109/ASE51524.2021.9678597,
author = {Liu, Lu and Wei, Lili and Zhang, Wuqi and Wen, Ming and Liu, Yepang and Cheung, Shing-Chi},
title = {Characterizing Transaction-Reverting Statements in Ethereum Smart Contracts},
year = {2022},
isbn = {9781665403375},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/ASE51524.2021.9678597},
doi = {10.1109/ASE51524.2021.9678597},
abstract = {Smart contracts are programs stored on blockchains to execute transactions. When input constraints or security properties are violated at runtime, the transaction being executed by a smart contract needs to be reverted to avoid undesirable consequences. On Ethereum, the most popular blockchain that supports smart contracts, developers can choose among three transaction-reverting statements (i.e., require, if...revert, and if...throw) to handle anomalous transactions. While these transaction-reverting statements are vital for preventing smart contracts from exhibiting abnormal behaviors or suffering malicious attacks, there is limited understanding of how they are used in practice. In this work, we perform the first empirical study to characterize transaction-reverting statements in Ethereum smart contracts. We measured the prevalence of these statements in 3,866 verified smart contracts from popular dapps and built a taxonomy of their purposes via manually analyzing 557 transaction-reverting statements. We also compared template contracts and their corresponding custom contracts to understand how developers customize the use of transaction-reverting statements. Finally, we analyzed the security impact of transaction-reverting statements by removing them from smart contracts and comparing the mutated contracts against the original ones. Our study led to important findings. For example, we found that transaction-reverting statements are commonly used to perform seven types of authority verifications or validity checks, and missing such statements may compromise the security of smart contracts. We also found that current smart contract security analyzers cannot effectively handle transaction-reverting statements when detecting security vulnerabilities. Our findings can shed light on further research in the broad area of smart contract quality assurance and provide practical guidance to smart contract developers on the appropriate use of transaction-reverting statements.},
booktitle = {Proceedings of the 36th IEEE/ACM International Conference on Automated Software Engineering},
pages = {630–641},
numpages = {12},
keywords = {security vulnerability, ethereum, smart contract, empirical study, transaction-reverting statement},
location = {Melbourne, Australia},
series = {ASE '21}
}

@article{10.1145/3560264,
author = {Ma, Fuchen and Ren, Meng and Ouyang, Lerong and Chen, Yuanliang and Zhu, Juan and Chen, Ting and Zheng, Yingli and Dai, Xiao and Jiang, Yu and Sun, Jiaguang},
title = {Pied-Piper: Revealing the Backdoor Threats in Ethereum ERC Token Contracts},
year = {2023},
issue_date = {July 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {3},
issn = {1049-331X},
url = {https://doi.org/10.1145/3560264},
doi = {10.1145/3560264},
abstract = {With the development of decentralized networks, smart contracts, especially those for ERC tokens, are attracting more and more Dapp users to implement their applications. There are some functions in ERC token contracts that only a specific group of accounts could invoke. Among those functions, some even can influence other accounts or the whole system without prior notice or permission. These functions are referred to as contract backdoors. Once exploited by an attacker, they can cause property losses and harm users’ privacy.In this work, we propose Pied-Piper, a hybrid analysis method that integrates datalog analysis and directed fuzzing to detect backdoor threats in Ethereum ERC token contracts. First, datalog analysis is applied to abstract the data structures and identification rules related to the threats for preliminary static detection. Then, directed fuzzing is applied to eliminate false positives caused by the static analysis. We first evaluated Pied-Piper on 200 smart contracts, which are injected with different types of backdoors. It reported all problems without false positives, and none of the injected problems was missed. Then, we applied Pied-Piper on 13,484 real token contracts deployed on Ethereum. Pied-Piper reported 189 confirmed problems, four of which have been assigned unique CVE ids while others are still in the review process. Each contract takes 8.03 seconds for datalog analysis on average, and the fuzzing engine can eliminate the false positives within one minute.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = {apr},
articleno = {61},
numpages = {24},
keywords = {directed fuzzing, backdoor detection, datalog analysis, Smart contract}
}

@inproceedings{10.1145/3533767.3534372,
author = {Liu, Ye and Li, Yi and Lin, Shang-Wei and Artho, Cyrille},
title = {Finding Permission Bugs in Smart Contracts with Role Mining},
year = {2022},
isbn = {9781450393799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3533767.3534372},
doi = {10.1145/3533767.3534372},
abstract = {Smart contracts deployed on permissionless blockchains, such as Ethereum, are accessible to any user in a trustless environment. Therefore, most smart contract applications implement access control policies to protect their valuable assets from unauthorized accesses. A difficulty in validating the conformance to such policies, i.e., whether the contract implementation adheres to the expected behaviors, is the lack of policy specifications. In this paper, we mine past transactions of a contract to recover a likely access control model, which can then be checked against various information flow policies and identify potential bugs related to user permissions. We implement our role mining and security policy validation in tool SPCon. The experimental evaluation on labeled smart contract role mining benchmark demonstrates that SPCon effectively mines more accurate user roles compared to the state-of-the-art role mining tools. Moreover, the experimental evaluation on real-world smart contract benchmark and access control CVEs indicates SPCon effectively detects potential permission bugs while having better scalability and lower false-positive rate compared to the state-of-the-art security tools, finding 11 previously unknown bugs and detecting six CVEs that no other tool can find.},
booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {716–727},
numpages = {12},
keywords = {Smart contract, role mining, access control, information flow policy},
location = {Virtual, South Korea},
series = {ISSTA 2022}
}

@inproceedings{10.1145/3524458.3547239,
author = {Guidi, Barbara and Michienzi, Andrea},
title = {Sleepminting, the Brand New Frontier of Non Fungible Tokens Fraud},
year = {2022},
isbn = {9781450392846},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3524458.3547239},
doi = {10.1145/3524458.3547239},
abstract = {Non Fungible Tokens (NFTs) are becoming a standard to represent unique and valuable items, such as a piece of art, a videogame item, or other digital or physical goods, and keep track of their provenance. Thanks to blockchain technology and the power of smart contracts, NFT holders have true ownership over them, because they are the only ones who can transfer them. However, through an attack called sleepminting, an attacker is able to impersonate another person, including an artist, and create NFTs on the artist’s behalf, while still maintaining its possession, leveraging bugs in the code of the smart contract that manages the NFTs. Therefore, the attacker can cheat concerning the provenance of an NFT and then sell the fake NFTs to unaware buyers. In this paper, we propose a study that sheds light on this phenomenon. In particular, we collect over 1.3 million events that are connected to sleepminting and analyse the events under multiple aspects. The study uncovers that, by using the sleepminting attack, some users are able to create fake NFTs of popular brands, and are able to mint them to famous personalities in the NFT field, such as well known artists and collectors.},
booktitle = {Proceedings of the 2022 ACM Conference on Information Technology for Social Good},
pages = {75–81},
numpages = {7},
keywords = {Non fungible token, Blockchain, Smart contract},
location = {Limassol, Cyprus},
series = {GoodIT '22}
}

@inproceedings{10.1145/3520313.3534660,
author = {Bau, Guillaume and Min\'{e}, Antoine and Botbol, Vincent and Bouaziz, Mehdi},
title = {Abstract Interpretation of Michelson Smart-Contracts},
year = {2022},
isbn = {9781450392747},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3520313.3534660},
doi = {10.1145/3520313.3534660},
abstract = {Static analysis of smart-contracts is becoming more widespread on blockchain platforms. Analyzers rely on techniques like symbolic execution or model checking, but few of them can provide strong soundness properties and guarantee the analysis termination at the same time. As smart-contracts often manipulate economic assets, proving numerical properties beyond the absence of runtime errors is also desirable. Smart-contract execution models differ considerably from mainstream programming languages and vary from one blockchain to another, making state-of-the-art analyses hard to adapt. For instance, smart-contract calls may modify a persistent storage impacting subsequent calls. This makes it difficult for tools to infer invariants %and high-level security properties required to formally ensure the absence of exploitable vulnerabilities. The Michelson smart-contract language, used in the Tezos blockchain, is strongly typed, stack-based, and has a strict execution model leaving few opportunities for implicit runtime errors. We present a work in progress static analyzer for Michelson based on Abstract Interpretation and implemented within MOPSA, a modular static analyzer. Our tool supports the Michelson semantic features, including inner calls to external contracts. It can prove the absence of runtime errors and infer invariants on the persistent storage over an unbounded number of calls. It is also being extended to prove high-level numerical and security properties.},
booktitle = {Proceedings of the 11th ACM SIGPLAN International Workshop on the State Of the Art in Program Analysis},
pages = {36–43},
numpages = {8},
keywords = {static analysis, Tezos, abstract interpretation, smart-contract, blockchain, Michelson},
location = {San Diego, CA, USA},
series = {SOAP 2022}
}

@inproceedings{10.1145/3530019.3531342,
author = {Li, Peiru and Li, Shanshan and Ding, Mengjie and Yu, Jiapeng and Zhang, He and Zhou, Xin and Li, Jingyue},
title = {A Vulnerability Detection Framework for Hyperledger Fabric Smart Contracts Based on Dynamic and Static Analysis},
year = {2022},
isbn = {9781450396134},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3530019.3531342},
doi = {10.1145/3530019.3531342},
abstract = {Hyperledger Fabric is another development of blockchain technology after Ethereum, which is more suitable as an operating platform for smart contracts. However, the testing technology of Hyperledger Fabric smart contracts (also known as chaincode) is not yet mature currently. Based on this, this paper studies the vulnerability detection of Golang chaincodes. Firstly, we summarize 17 kinds of Golang chaincode vulnerabilities by investigating existing research. Secondly, taking the high accuracy of dynamic detection and the high efficiency of static detection into consideration, we propose a chaincode vulnerability detection framework that combines the dynamic symbolic execution and the static abstract syntax tree analysis technology. We also implement a supporting-tool that can detect the above 15 types of vulnerabilities. Finally, we test the tool by 15 chaincodes collected from GitHub and unknown vulnerabilities were detected in 13 projects. The precision turned out to be 91% after manual inspection. In order to verify the recall rate, we manually inject 30 vulnerabilities into the collected chaincodes and all of them are detected. The evaluation results show the accuracy of the proposed vulnerability detection method for Hyperledger Fabric smart contracts.},
booktitle = {Proceedings of the International Conference on Evaluation and Assessment in Software Engineering 2022},
pages = {366–374},
numpages = {9},
keywords = {Vulnerability Detection, Symbolic Execution, Abstract Syntax Tree, Smart Contract, Hyperledger Fabric},
location = {Gothenburg, Sweden},
series = {EASE '22}
}

@inproceedings{10.1145/3477314.3507309,
author = {Garfatta, Ikram and Klai, Ka\"{\i}s and Gra\"{\i}et, Mohamed and Gaaloul, Walid},
title = {Model Checking of Vulnerabilities in Smart Contracts: A Solidity-to-CPN Approach},
year = {2022},
isbn = {9781450387132},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3477314.3507309},
doi = {10.1145/3477314.3507309},
abstract = {Despite the benefits that the Blockchain technology brings to many application fields, its adoption does not come without challenges. Smart contracts, which are at the core of 2nd generation blockchains, can often be riddled with vulnerabilities that can be exploited to attack the platform and threaten its security. It is therefore crucial for the protection of the designed systems to prove the correctness of the smart contracts to be deployed. Approaches have been proposed to detect generic vulnerabilities like reentrancy, but the results would often include false positives where the detected bug is either non existent or not exploitable. Besides, such approaches do not offer to check contract-specific properties. The work presented in this paper is situated as part of a formal approach that we have proposed in an attempt to bridge this gap. This previously outlined approach is based on the transformation of Solidity smart contracts into Coloured Petri nets, which provides the possibility to verify smart contracts with reference to properties expressed as Linear Temporal Logic (LTL) formulae. Herein we extend our previous work on mainly two levels: first, by taking into account the concept of function calls in the transformation and second, by focusing on the LTL properties that can define the correctness of a smart contract. Such properties can be specific to the control- or data-flow of the contracts being checked. They can also be used to express vulnerabilities as we showcase by proposing LTL formalizations for six vulnerabilities from the literature. We then leverage the capability of the Helena model checker to detect these vulnerabilities while discerning their exploitability, as well as check temporal-based contract-specific properties.},
booktitle = {Proceedings of the 37th ACM/SIGAPP Symposium on Applied Computing},
pages = {316–325},
numpages = {10},
keywords = {solidity, coloured petri nets, temporal properties, smart contract, model checker, blockchain},
location = {Virtual Event},
series = {SAC '22}
}

@inproceedings{10.1145/3528226.3528374,
author = {Ibba, Giacomo},
title = {A Smart Contracts Repository for Top Trending Contracts},
year = {2023},
isbn = {9781450393317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3528226.3528374},
doi = {10.1145/3528226.3528374},
abstract = {Blockchain technology spread very quickly during the last few years and has become one of the most popular trends among the research and developers community. In particular, the Ethereum blockchain is one of the most supported and used for developing smart contracts, which are informatics protocols that provide a higher level of security than traditional contracts and reduce other transaction costs associated with the bargaining practice. Nowadays, the transaction number associated with smart contracts deploying increased widely, and it is difficult for researchers and developers to keep track of programming trends. This work proposes a dataset containing only specific categories of smart contracts associated with the most popular trends of the last five years. Mainly, the proposed collection of programs contains Token and Non-Fungible-Token programs, whose popularity has increased a lot since their first appearance on the blockchain.},
booktitle = {Proceedings of the 5th International Workshop on Emerging Trends in Software Engineering for Blockchain},
pages = {17–20},
numpages = {4},
keywords = {categorization, smart contracts categories, smart contract, ethereum, blockchain, smart contract trends},
location = {Pittsburgh, Pennsylvania},
series = {WETSEB '22}
}

@inproceedings{10.1145/3551349.3560429,
author = {Su, Jianzhong and Dai, Hong-Ning and Zhao, Lingjun and Zheng, Zibin and Luo, Xiapu},
title = {Effectively Generating Vulnerable Transaction Sequences in Smart Contracts with Reinforcement Learning-Guided Fuzzing},
year = {2023},
isbn = {9781450394758},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3551349.3560429},
doi = {10.1145/3551349.3560429},
abstract = {As computer programs run on top of blockchain, smart contracts have proliferated a myriad of decentralized applications while bringing security vulnerabilities, which may cause huge financial losses. Thus, it is crucial and urgent to detect the vulnerabilities of smart contracts. However, existing fuzzers for smart contracts are still inefficient to detect sophisticated vulnerabilities that require specific vulnerable transaction sequences to trigger. To address this challenge, we propose a novel vulnerability-guided fuzzer based on reinforcement learning, namely RLF, for generating vulnerable transaction sequences to detect such sophisticated vulnerabilities in smart contracts. In particular, we firstly model the process of fuzzing smart contracts as a Markov decision process to construct our reinforcement learning framework. We then creatively design an appropriate reward with consideration of both vulnerability and code coverage so that it can effectively guide our fuzzer to generate specific transaction sequences to reveal vulnerabilities, especially for the vulnerabilities related to multiple functions. We conduct extensive experiments to evaluate RLF’s performance. The experimental results demonstrate that our RLF outperforms state-of-the-art vulnerability-detection tools (e.g., detecting 8%-69% more vulnerabilities within 30 minutes).},
booktitle = {Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
articleno = {36},
numpages = {12},
keywords = {Fuzzing, Smart contract, Reinforcement learning},
location = {Rochester, MI, USA},
series = {ASE '22}
}

@inproceedings{10.1145/3581971.3581973,
author = {Yang, Zhiju and Man, Gaoyuan and Yue, Songqing},
title = {Understanding Security Audits on Blockchain},
year = {2023},
isbn = {9781450397575},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3581971.3581973},
doi = {10.1145/3581971.3581973},
abstract = {Hacks on blockchains are prevalent nowadays because a wide range of vulnerabilities exists in smart contracts. To deal with the vulnerabilities, security auditing has been emerging and widely adopted for manual code inspection. However, little is known about how manual security auditing impacts the blockchain community. In this work, we investigated security audits on blockchain by answering three research questions covering the type, severity, and resolve status of issues in the audit reports. We in total collected 2,421 security audit reports consisting of the details of 28,782 security issues. We found that manual security auditing has superior merit over static analysis tools in identifying logic-related issues, considering 27.65% of all findings are logical issues. We also found that 87.28% of 2,421 projects have at least one centralization issue that breaks the decentralization primitive of blockchain. Moreover, while 21.17% of issues are of major or critical severity, we surprisingly found that 61.83% of all issues were unresolved or partially resolved. We concluded that while manual security auditing can help identify security vulnerabilities uniquely, project developers need to take serious actions to address and secure their smart contracts.},
booktitle = {Proceedings of the 2022 5th International Conference on Blockchain Technology and Applications},
pages = {10–15},
numpages = {6},
keywords = {Smart contract, Audit, Blockchain, Measurement, Security},
location = {Xi'an, China},
series = {ICBTA '22}
}

@inproceedings{10.1145/3560905.3568175,
author = {Rossini, Martina and Zichichi, Mirko and Ferretti, Stefano},
title = {Smart Contracts Vulnerability Classification through Deep Learning},
year = {2023},
isbn = {9781450398862},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3560905.3568175},
doi = {10.1145/3560905.3568175},
abstract = {We investigate the use of deep learning to classify smart contract code vulnerabilities. We use different variants of Convolutional Neural Networks (CNNs) and a Long Short-Term Memory (LSTM) neural network. Five classes of vulnerabilities were employed. Our results suggest that the CNNs are able to provide a good level of accuracy, thus showing the viability of the proposed approach.},
booktitle = {Proceedings of the 20th ACM Conference on Embedded Networked Sensor Systems},
pages = {1229–1230},
numpages = {2},
location = {Boston, Massachusetts},
series = {SenSys '22}
}

@inproceedings{10.1145/3494106.3528686,
author = {An, Ningyu and Liang, Xiao and Zheng, Xiaokun and Yuan, Shuai and Wang, Xiaodong and Guan, Zhitao},
title = {Achieving Secure and Efficient P2P Data Trading Based on Blockchain for Internet of Things},
year = {2022},
isbn = {9781450391757},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3494106.3528686},
doi = {10.1145/3494106.3528686},
abstract = {The intelligence of the information era is accomplished through data sharing, which enables us to perform more insightful analysis and make better decisions. However, traditional data trading systems are typically centralized managed with high operating costs and associated risk of single point of failure. Furthermore, it is going to be increasingly more common to see malicious data and behavior during the transactions. This paper proposes a P2P data trading scheme based on blockchain for Internet of Things (IoT). The proposed scheme provides an efficient negotiated pricing model in the data trading process. Chameleon hashing algorithm has been adopted to advance the robustness of the trading scheme by detecting malicious data on the chain and implementing error correction and loss control. Additionally, information entropy is incorporated as data privacy measurement. The security analysis and experimental results show that the proposed data trading scheme is secure and efficient.},
booktitle = {Proceedings of the Fourth ACM International Symposium on Blockchain and Secure Critical Infrastructure},
pages = {139–144},
numpages = {6},
keywords = {blockchain, data trading, smart contract, chameleon hash, data pricing},
location = {Nagasaki, Japan},
series = {BSCI '22}
}

@inproceedings{10.1145/3548606.3563545,
author = {Li, Levi Taiji and Zhang, Mu},
title = {Poster: EOSDFA: Data Flow Analysis of EOSIO Smart Contracts},
year = {2022},
isbn = {9781450394505},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3548606.3563545},
doi = {10.1145/3548606.3563545},
abstract = {As an efficient blockchain platform, EOSIO is becoming increasingly popular. However, it has exposed many security problems and caused a large amount of financial losses. In the past, the difficulty of collecting open-source EOSIO smart contracts and analyzing WebAssembly (Wasm) bytecode compiled by EOSIO smart contracts, making few researchers proposed static analysis tools for EOSIO smart contracts, and tools capable of dataflow analysis have not yet appeared. In this work, we first propose a dataflow analysis method for EOSIO smart contracts. Based on Octopus, we designed an efficient dataflow analysis method, which can generate Static Single Assignment (SSA) form intermediate representation (IR) for the objective function and its variables to obtain the results of dataflow. We further proved the effectiveness of the proposed method through experiments on our collected data sets.},
booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
pages = {3391–3393},
numpages = {3},
keywords = {data flow analysis, eosio, points-to analysis, smart contract},
location = {Los Angeles, CA, USA},
series = {CCS '22}
}

@article{10.1145/3561386,
author = {De Salve, Andrea and Franceschi, Luca and Lisi, Andrea and Mori, Paolo and Ricci, Laura},
title = {L2DART: A Trust Management System Integrating Blockchain and Off-Chain Computation},
year = {2023},
issue_date = {February 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {23},
number = {1},
issn = {1533-5399},
url = {https://doi.org/10.1145/3561386},
doi = {10.1145/3561386},
abstract = {The blockchain technology has been gaining an increasing popularity for the last years, and smart contracts are being used for a growing number of applications in several scenarios. The execution of smart contracts on public blockchains can be invoked by any user with a transaction, although in many scenarios there would be the need for restricting the right of executing smart contracts only to a restricted set of users. To help deal with this issue, this article proposes a system based on a popular access control framework called RT, Role-based Trust Management, to regulate smart contracts execution rights. The proposed system, called Layer 2 DecentrAlized Role-based Trust management (L2DART), implements the RT framework on a public blockchain, and it is designed as a layer-2 technology that involves both on-chain and off-chain functionalities to reduce the blockchain costs while keeping blockchain auditability, i.e., immutability and transparency. The on-chain costs of L2DART have been evaluated on Ethereum and compared with a previous solution implementing on-chain all the functionalities. The results show that the on-chain costs of L2DART are relatively low, making the system deployable in real-world scenarios.},
journal = {ACM Trans. Internet Technol.},
month = {feb},
articleno = {14},
numpages = {30},
keywords = {off-chain computation, Trust Management, smart contract, access control, layer-2, Blockchain}
}

@inproceedings{10.1145/3542954.3543005,
author = {Chowdhury, Oishi and Rishat, Md.Al-Samiul Amin and Azam, Md. Hanif Bin and Amin, Md.Al-},
title = {The Rise Of Blockchain Technology In Shariah Based Banking System},
year = {2022},
isbn = {9781450397346},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3542954.3543005},
doi = {10.1145/3542954.3543005},
abstract = {A Shariah-based banking system tries to implement Islamic finance, which maintains Shariah. So, the users must know if they are taking riba or not, or if their money is invested in any halal business or not. That is why a Shariah-based bank needs to be transparent with its users. It is also based on partnerships. Here, they are mudarabah and musharakah. Blockchain can be helpful in this kind of scenario because of its features. This study aims to figure out how to use blockchain technology to make investments and returns of profit or loss more transparent and sharia-compliant. Blockchain networks can be used in the financial sector, like banking, to make secure sharia-based banking transactions. Islamic finance is raising cash in line with Sharia, Islamic law, by enterprises and people. It also refers to the sorts of investments allowed under this type of legislation. Islamic finance may be seen as a one-of-a-kind approach to socially responsible investing. This branch of finance is still developing. Riba (usury) and gharar (interest) are forbidden in Islamic banking (ambiguity or deception).},
booktitle = {Proceedings of the 2nd International Conference on Computing Advancements},
pages = {349–358},
numpages = {10},
keywords = {Blockchain, Defi, FinTech, Smart Contract, Islamic Finance, Web 3.0, Bank System},
location = {Dhaka, Bangladesh},
series = {ICCA '22}
}

@inproceedings{10.1145/3510487.3510507,
author = {Binbusayyyis, Adel},
title = {Blockchain-Based Services for Sharing Education Records in Industrial IoT Environment},
year = {2022},
isbn = {9781450387460},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510487.3510507},
doi = {10.1145/3510487.3510507},
abstract = {The path towards Industry 4.0 have pushed the workforce to continuously develop their skills to stay at the forefront of their careers and remain attractive to their employers. In this case, the electronic portfolio is designed as a promising tool for professionals and employers, in assessing and presenting guidance for further learning in the workplace environment. However, the implementation of electronic portfolios faces huge challenges, especially due to the lack of interoperability to collect and share competition evidence among multiple organizations and institutions. The growing trend of professional (learning) interoperability has brought other challenges that must be addressed in order to fully utilize the potential of the electronic product portfolio in the context of the fourth industry. This article proposes a framework taking the benefits of blockchain, decentralized storage systems, smart contracts and session management in achieving professional-centric interoperability while creating electronic portfolio and share evidences among multiple organizations without giving up the confidentiality, integrity and availability of shared evidence. The simulation of the proposed model for proof of concept on Ethereum proved its viability in real world practice. In expansion, the assessment of the proposed model proved its effectiveness in terms of cost, storage space and security as a possible solution in electronic portfolios implementation and assisting professionals to stay competitive in global labor market.},
booktitle = {Proceedings of the 2021 4th International Conference on Blockchain Technology and Applications},
pages = {135–143},
numpages = {9},
keywords = {Smart Contract, Learner-centered interoperability, Session management, Data sharing, IPFS, Lifelong learning, Blockchain},
location = {Xi'an, China},
series = {ICBTA '21}
}

@article{10.1145/3505263,
author = {Wu, Siwei and Wu, Lei and Zhou, Yajin and Li, Runhuai and Wang, Zhi and Luo, Xiapu and Wang, Cong and Ren, Kui},
title = {Time-Travel Investigation: Toward Building a Scalable Attack Detection Framework on Ethereum},
year = {2022},
issue_date = {July 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {3},
issn = {1049-331X},
url = {https://doi.org/10.1145/3505263},
doi = {10.1145/3505263},
abstract = {Ethereum has been attracting lots of attacks, hence there is a pressing need to perform timely investigation and detect more attack instances. However, existing systems suffer from the scalability issue due to the following reasons. First, the tight coupling between malicious contract detection and blockchain data importing makes them infeasible to repeatedly detect different attacks. Second, the coarse-grained archive data makes them inefficient to replay transactions. Third, the separation between malicious contract detection and runtime state recovery consumes lots of storage.In this article, we propose a scalable attack detection framework named EthScope, which overcomes the scalability issue by neatly re-organizing the Ethereum state and efficiently locating suspicious transactions. It leverages the fine-grained state to support the replay of arbitrary transactions and proposes a well-designed schema to optimize the storage consumption. The performance evaluation shows that EthScope can solve the scalability issue, i.e., efficiently performing a large-scale analysis on billions of transactions, and a speedup of around ( text{2,300}times ) when replaying transactions. It also has lower storage consumption compared with existing systems. Further analysis shows that EthScope can help analysts understand attack behaviors and detect more attack instances.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = {apr},
articleno = {54},
numpages = {33},
keywords = {vulnerability, attack detection, Ethereum}
}

@inproceedings{10.1145/3524481.3527228,
author = {Palechor, Luisa and Bezemer, Cor-Paul},
title = {How Are Solidity Smart Contracts Tested in Open Source Projects? An Exploratory Study},
year = {2022},
isbn = {9781450392860},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3524481.3527228},
doi = {10.1145/3524481.3527228},
abstract = {Smart contracts are self-executing programs that are stored on the blockchain. Once a smart contract is compiled and deployed on the blockchain, it cannot be modified. Therefore, having a bug-free smart contract is vital. To ensure a bug-free smart contract, it must be tested thoroughly. However, little is known about how developers test smart contracts in practice. Our study explores 139 open source smart contract projects that are written in Solidity to investigate the state of smart contract testing from three dimensions: (1) the developers working on the tests, (2) the used testing frameworks and testnets and (3) the type of tests that are conducted. We found that mostly core developers of a project are responsible for testing the contracts. Second, developers typically use only functional testing frameworks to test a smart contract, with Truffle being the most popular one. Finally, our results show that functional testing is conducted in most of the studied projects (93%), security testing is only performed in a few projects (9.4%) and traditional performance testing is conducted in none. In addition, we found 34 projects that mentioned or published external audit reports.},
booktitle = {Proceedings of the 3rd ACM/IEEE International Conference on Automation of Software Test},
pages = {165–169},
numpages = {5},
keywords = {solidity, smart contracts, testing},
location = {Pittsburgh, Pennsylvania},
series = {AST '22}
}

@article{10.1145/3511900,
author = {Ma, Fuchen and Ren, Meng and Ying, Fu and Sun, Wanting and Song, Houbing and Shi, Heyuan and Jiang, Yu and Li, Huizhong},
title = {V-Gas: Generating High Gas Consumption Inputs to Avoid Out-of-Gas Vulnerability},
year = {2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {1533-5399},
url = {https://doi.org/10.1145/3511900},
doi = {10.1145/3511900},
abstract = {Out-of-gas errors occur when smart contract programs are provided with inputs that cause excessive gas consumption and which will be easily exploited to perform DoS attacks. Various approaches have been proposed to estimate the gas limit of a function in smart contracts to avoid such error. However, underestimation often occurs when the contract is complex In this work, we propose V-Gas, which automatically generates inputs that maximize the gas cost and reduce underestimation. V-Gas is designed based on static analysis and feedback-directed mutational fuzz testing. First, V-Gas builds the gas weighted control flow graph (WCFG) of functions in smart contracts. Then, V-Gas develops gas consumption guided selection and mutation strategies to generate the input that maximize the gas consumption. For evaluation, we implement V-Gas based on js-evm, a widely used ethereum virtual machine written in Javascript, and conduct experiments on 736 real-world transactions recorded on Ethereum. 44.02% of the transactions would have out-of-gas errors based on the estimation results given by solc, means that the recorded real gas consumption for those transactions is larger than the gas limit estimated by solc. In comparison V-Gas could reduce the under estimation ratio to 13.86%. In order to evaluate the performance of feedback-directed engine in V-Gas, we implemented other directed fuzzing engines and compare their performance with V-Gas’s. The results showed that V-Gas generates the same or higher gas estimation value on 97.8% of the transactions with less time, usually within 5 minutes. Furthermore, V-Gas has exposed 25 previously unknown out-of-gas vulnerabilities in widely-used smart contracts, 6 of which have been assigned unique CVE identifiers in the US National Vulnerability Database.},
note = {Just Accepted},
journal = {ACM Trans. Internet Technol.},
month = {apr},
keywords = {Gas Estimation., Fuzzing, Smart contracts, Ethereum}
}

@inproceedings{10.1145/3548606.3560552,
author = {Cui, Siwei and Zhao, Gang and Gao, Yifei and Tavu, Tien and Huang, Jeff},
title = {VRust: Automated Vulnerability Detection for Solana Smart Contracts},
year = {2022},
isbn = {9781450394505},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3548606.3560552},
doi = {10.1145/3548606.3560552},
abstract = {Solana is a rapidly-growing high-performance blockchain powered by a Proof of History (PoH) consensus mechanism and a novel stateless programming model that decouples code from data. With parallel execution on the PoH Sealevel runtime (instead of PoW), it achieves 100X-1000X speedups compared to Ethereum in terms of transactions per second. With the new programming model, new constraints (owner, signer, keys, bump seeds) and vulnerabilities (missing checks, overflows, type confusion, etc.) must be carefully verified to ensure the security of Solana smart contracts. This paper proposes VRust, the first automated smart contract vulnerability detection framework for Solana. A key technical novelty is a set of static analysis rules for validating untrustful input accounts that are unique in the Solana programming model. We have developed a total of eight different vulnerability types, and VRust is able to check all of them fully automatically by translating source code into Rust MIR-based inference rules without any code annotations. VRust has been evaluated on over a hundred of Solana projects, and it has revealed 12 previously unknown vulnerabilities, including 3 critical vulnerabilities in the official Solana Programming Library confirmed by core developers.},
booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
pages = {639–652},
numpages = {14},
keywords = {solana, blockchain security, verification},
location = {Los Angeles, CA, USA},
series = {CCS '22}
}

@inproceedings{10.1145/3551349.3559567,
author = {Ghaleb, Asem},
title = {Towards Effective Static Analysis Approaches for Security Vulnerabilities in Smart Contracts},
year = {2023},
isbn = {9781450394758},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3551349.3559567},
doi = {10.1145/3551349.3559567},
abstract = {The growth in the popularity of smart contracts has been accompanied by a rise in security attacks targeting smart contracts, which have led to financial losses of millions of dollars and erosion of trust. To enable developers discover vulnerabilities in smart contracts, several static analysis tools have been proposed. However, despite the numerous bug-finding tools, security vulnerabilities abound in smart contracts, and developers rely on finding vulnerabilities manually. Our goal in this dissertation study is to expand the space of security vulnerabilities detection by proposing effective static analysis approaches for smart contracts. We study the effectiveness of the existing static analysis tools and propose solutions for security vulnerabilities detection relying on analyzing the dependency of the contract code on user inputs that lead to security vulnerabilities. Our results of evaluating static analysis tools show that existing static tools for smart contracts have significant false-negatives and false-positives. Further, the results show that our first vulnerability detection approach achieves a significant improvement in the effectiveness of detecting vulnerabilities compared to the prior work.},
booktitle = {Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
articleno = {127},
numpages = {5},
keywords = {smart contract vulnerabilities, static analysis, taint analysis, Ethereum, Solidity, bug injection, data-flow analysis},
location = {Rochester, MI, USA},
series = {ASE '22}
}

@inproceedings{10.1145/3540250.3549121,
author = {Chen, Haoxian and Whitters, Gerald and Amiri, Mohammad Javad and Wang, Yuepeng and Loo, Boon Thau},
title = {Declarative Smart Contracts},
year = {2022},
isbn = {9781450394130},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3540250.3549121},
doi = {10.1145/3540250.3549121},
abstract = {This paper presents DeCon, a declarative programming language for implementing smart contracts and specifying contract-level properties. Driven by the observation that smart contract operations and contract-level properties can be naturally expressed as relational constraints, DeCon models each smart contract as a set of relational tables that store transaction records. This relational representation of smart contracts enables convenient specification of contract properties, facilitates run-time monitoring of potential property violations, and brings clarity to contract debugging via data provenance. Specifically, a DeCon program consists of a set of declarative rules and violation query rules over the relational representation, describing the smart contract implementation and contract-level properties, respectively. We have developed a tool that can compile DeCon programs into executable Solidity programs, with instrumentation for run-time property monitoring. Our case studies demonstrate that DeCon can implement realistic smart contracts such as ERC20 and ERC721 digital tokens. Our evaluation results reveal the marginal overhead of DeCon compared to the open-source reference implementation, incurring 14% median gas overhead for execution, and another 16% median gas overhead for run-time verification.},
booktitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {281–293},
numpages = {13},
keywords = {Smart contracts, Declarative programming, Run-time verification},
location = {Singapore, Singapore},
series = {ESEC/FSE 2022}
}

@article{10.1145/3593293,
author = {Ivanov, Nikolay and Li, Chenning and Yan, Qiben and Sun, Zhiyuan and Cao, Zhichao and Luo, Xiapu},
title = {Security Threat Mitigation For Smart Contracts: A Comprehensive Survey},
year = {2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {0360-0300},
url = {https://doi.org/10.1145/3593293},
doi = {10.1145/3593293},
abstract = {The blockchain technology, initially created for cryptocurrency, has been re-purposed for recording state transitions of smart contracts — decentralized applications that can be invoked through external transactions. Smart contracts gained popularity and accrued hundreds of billions of dollars in market capitalization in recent years. Unfortunately, like all other computer programs, smart contracts are prone to security vulnerabilities that have incurred multibillion-dollar damages over the past decade. As a result, many automated threat mitigation solutions have been proposed to counter the security issues of smart contracts. These threat mitigation solutions include various tools and methods that are challenging to compare. This survey develops a comprehensive classification taxonomy of smart contract threat mitigation solutions within five orthogonal dimensions: defense modality, core method, targeted contracts, input-output data mapping, and threat model. We classify 133 existing threat mitigation solutions using our taxonomy and confirm that the proposed five dimensions allow us to concisely and accurately describe any smart contract threat mitigation solution. In addition to learning what the threat mitigation solutions do, we also show how these solutions work by synthesizing their actual designs into a set of uniform workflows corresponding to the eight existing defense core methods. We further create an integrated coverage map for the known smart contract vulnerabilities by the existing threat mitigation solutions. Finally, we perform the evidence-based evolutionary analysis, in which we identify trends and future perspectives of threat mitigation in smart contracts and pinpoint major weaknesses of the existing methodologies. For the convenience of smart contract security developers, auditors, users, and researchers, we deploy and maintain a regularly updated comprehensive open-source online registry of threat mitigation solutions, called Security Threat Mitigation (STM) Registry at https://seit.egr.msu.edu/research/stmregistry/.},
note = {Just Accepted},
journal = {ACM Comput. Surv.},
month = {apr},
keywords = {smart contracts, blockchain, security}
}

@article{10.1145/3554761,
author = {Abdullah, Sidrah and Arshad, Junaid and Alsadi, Muhammad},
title = {Chain-Net: An Internet-Inspired Framework for Interoperable Blockchains},
year = {2022},
issue_date = {December 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {2},
issn = {2769-6472},
url = {https://doi.org/10.1145/3554761},
doi = {10.1145/3554761},
abstract = {Blockchain has introduced new opportunities with the potential to enhance systems and services across diverse application domains. Fundamental characteristics of blockchains such as immutability, decentralisation, transparency and traceability have a profound role in this. However, integration with contemporary systems and among disparate blockchain-based applications is a non-trivial challenge primarily due to differences with respect to platforms, consensus mechanism, and governance. Although this challenge has received some attention from the research community, it requires careful analysis to analyse existing work and ascertain gaps to achieve effective and efficient solution to this challenge. This article presents a thorough systematic review of existing research within blockchain interoperability highlighting significant contributions. Leveraging this analysis, the article presents an internet-inspired framework (Chain-Net) to facilitate interoperability within blockchain-based systems whereby two systems within independent Blockchain networks can securely exchange data with each other. This is achieved by using gateway module at each network. This module is a lightweight node registered by the Blockchain network, equipped with discovery service to lookup a target blockchain, and is responsible for forwarding cross-chain transactions to gateway module at the target blockchain. Gateway module plays a vital role in the Chain-Net model, as it holds a cross-chain transaction in a pending state until a confirmation is received from the target blockchain, thus maintaining the record integrity between the two chains. The article presents our efforts to evaluate the proposed blockchain interoperability framework against success criteria based on our analysis of the blockchain interoperability challenge.},
journal = {Distrib. Ledger Technol.},
month = {dec},
articleno = {7},
numpages = {20},
keywords = {distributed ledger technologies, interoperable blockchains, interoperability, Blockchain}
}

@article{10.1145/3527321,
author = {Grech, Neville and Lagouvardos, Sifis and Tsatiris, Ilias and Smaragdakis, Yannis},
title = {Elipmoc: Advanced Decompilation of Ethereum Smart Contracts},
year = {2022},
issue_date = {April 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {OOPSLA1},
url = {https://doi.org/10.1145/3527321},
doi = {10.1145/3527321},
abstract = {Smart contracts on the Ethereum blockchain greatly benefit from cutting-edge analysis techniques and pose significant challenges. A primary challenge is the extremely low-level representation of deployed contracts. We present Elipmoc, a decompiler for the next generation of smart contract analyses. Elipmoc is an evolution of Gigahorse, the top research decompiler, dramatically improving over it and over other state-of-the-art tools, by employing several high-precision techniques and making them scalable. Among these techniques are a new kind of context sensitivity (termed “transactional sensitivity”) that provides a more effective static abstraction of distinct dynamic executions; a path-sensitive (yet scalable, through path merging) algorithm for inference of function arguments and returns; and a fully context sensitive private function reconstruction process. As a result, smart contract security analyses and reverse-engineering tools built on top of Elipmoc achieve high scalability, precision and completeness. Elipmoc improves over all notable past decompilers, including its predecessor, Gigahorse, and the state-of-the-art industrial tool, Panoramix, integrated into the primary Ethereum blockchain explorer, Etherscan. Elipmoc produces decompiled contracts with fully resolved operands at a rate of 99.5% (compared to 62.8% for Gigahorse), and achieves much higher completeness in code decompilation than Panoramix—e.g., up to 67% more coverage of external call statements—while being over 5x faster. Elipmoc has been the enabler for recent (independent) discoveries of several exploitable vulnerabilities on popular protocols, over funds in the many millions of dollars.},
journal = {Proc. ACM Program. Lang.},
month = {apr},
articleno = {77},
numpages = {27},
keywords = {Ethereum, Datalog, Program Analysis, Smart Contracts, Security, Decompilation, Blockchain}
}

@inproceedings{10.1145/3564625.3564655,
author = {Luo, Yu and Xu, Weifeng and Xu, Dianxiang},
title = {Compact Abstract Graphs for Detecting Code Vulnerability with GNN Models},
year = {2022},
isbn = {9781450397599},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3564625.3564655},
doi = {10.1145/3564625.3564655},
abstract = {Source code representation is critical to the machine-learning-based approach to detecting code vulnerability. This paper proposes Compact Abstract Graphs (CAGs) of source code in different programming languages for predicting a broad range of code vulnerabilities with Graph Neural Network (GNN) models. CAGs make the source code representation aligned with the task of vulnerability classification and reduce the graph size to accelerate model training with minimum impact on the prediction performance. We have applied CAGs to six GNN models and large Java/C datasets with 114 vulnerability types in Java programs and 106 vulnerability types in C programs. The experiment results show that the GNN models have performed well, with accuracy ranging from 94.7% to 96.3% on the Java dataset and from 91.6% to 93.2% on the C dataset. The resultant GNN models have achieved promising performance when applied to more than 2,500 vulnerabilities collected from real-world software projects. The results also show that using CAGs for GNN models is significantly better than ASTs, CFGs (Control Flow Graphs), and PDGs (Program Dependence Graphs). A comparative study has demonstrated that the CAG-based GNN models can outperform the existing methods for machine learning-based vulnerability detection.},
booktitle = {Proceedings of the 38th Annual Computer Security Applications Conference},
pages = {497–507},
numpages = {11},
keywords = {graph neural networks, Software vulnerability, static code analysis, machine learning},
location = {Austin, TX, USA},
series = {ACSAC '22}
}

@inproceedings{10.1145/3548606.3559384,
author = {Duan, Yue and Zhao, Xin and Pan, Yu and Li, Shucheng and Li, Minghao and Xu, Fengyuan and Zhang, Mu},
title = {Towards Automated Safety Vetting of Smart Contracts in Decentralized Applications},
year = {2022},
isbn = {9781450394505},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3548606.3559384},
doi = {10.1145/3548606.3559384},
abstract = {We propose VetSC, a novel UI-driven, program analysis guided model checking technique that can automatically extract contract semantics in DApps so as to enable targeted safety vetting. To facilitate model checking, we extract business model graphs from contract code that capture its intrinsic business and safety logic. To automatically determine what safety specifications to check, we retrieve textual semantics from DApp user interfaces. To exclude untrusted UI text, we also validate the UI-logic consistency and detect any discrepancies. We have implemented VetSC and applied it to 34 real-world DApps. Experiments have demonstrated that VetSC can accurately interpret smart contract code, enable autonomous safety vetting, and discover safety risks in real-world Dapps. Using our tool, we have successfully discovered 19 new safety risks in the wild, such as expired lottery tickets and double voting.},
booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
pages = {921–935},
numpages = {15},
keywords = {smart contracts, semantics, safety verification, decentralized apps},
location = {Los Angeles, CA, USA},
series = {CCS '22}
}

@article{10.1145/3522740,
author = {Qi, Saiyu and Wei, Wei and Cheng, Jingxian and Zheng, Yuanqing and Su, Zhou and Zhang, Jingning and Qi, Yong},
title = {Secure and Efficient Item Traceability for Cloud-Aided IIoT},
year = {2022},
issue_date = {November 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {18},
number = {4},
issn = {1550-4859},
url = {https://doi.org/10.1145/3522740},
doi = {10.1145/3522740},
abstract = {Cloud computing is an essential technique to provide item traceability for industrial internet of things (IIoT) systems by providing item data sharing services. However, a malicious cloud server may prevent industrial participants from acquiring accurate traceability of items by providing inconsistent item data. To fix this issue, we propose Acics, an item data consistency auditing scheme in untrusted cloud services for cloud-aided IIoT systems. Acics presents two variants named S-Acics and L-Acics. S-Acics enables industrial participants to audit item data consistency for each item and circularly play the auditing role. L-Acics further enables industrial participants to audit item data consistency for a sampled subset of items while resisting data selection attack via a new separated storage mechanism. Finally, Acics integrates a fair payment mechanism built on smart contract to incentivize the cloud server to provide consistent item data access service for industrial participants. The experiment results show that our solution can audit item data consistency with reasonable cost.},
journal = {ACM Trans. Sen. Netw.},
month = {nov},
articleno = {54},
numpages = {24},
keywords = {Industrial Internet of Things, data consistency, fair payment, untrusted cloud}
}

@inproceedings{10.1145/3533767.3534218,
author = {Chen, Weimin and Sun, Zihan and Wang, Haoyu and Luo, Xiapu and Cai, Haipeng and Wu, Lei},
title = {WASAI: Uncovering Vulnerabilities in Wasm Smart Contracts},
year = {2022},
isbn = {9781450393799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3533767.3534218},
doi = {10.1145/3533767.3534218},
abstract = {WebAssembly (Wasm) smart contracts have shown growing popularity across blockchains (e.g., EOSIO) recently. Similar to Ethereum smart contracts, Wasm smart contracts suffer from various attacks exploiting their vulnerabilities. Even worse, few developers released the source code of their Wasm smart contracts for security review, raising the bar for uncovering vulnerable contracts. Although a few approaches have been proposed to detect vulnerable Wasm smart contracts, they have several major limitations, e.g., low code coverage, low accuracy and lack of scalability, unable to produce exploit payloads, etc. To fill the gap, in this paper, we design and develop WASAI, a new concolic fuzzer for uncovering vulnerabilities in Wasm smart contract after tackling several challenging issues. We conduct extensive experiments to evaluate WASAI, and the results show that it outperforms the state-of-the-art methods. For example, it achieves 2x code coverage than the baselines and surpasses them in detection accuracy, with an F1-measure of 99.2%. Moreover, WASAI can handle complicated contracts (e.g., contracts with obfuscation and sophisticated verification). Applying WASAI to 991 deployed smart contracts in the wild, we find that over 70% of smart contracts are vulnerable. By the time of this study, over 300 vulnerable contracts have not been patched and are still operating on the EOSIO Mainnet. One fake EOS vulnerability reported to the EOSIO ecosystem was recently assigned a CVE identifier (CVE-2022-27134).},
booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {703–715},
numpages = {13},
keywords = {smart contracts, dynamic software analysis, Concolic fuzzing},
location = {Virtual, South Korea},
series = {ISSTA 2022}
}

@inproceedings{10.1145/3524458.3547251,
author = {Rashid, Md Mamunur and Lee, Suk-Hwan and Choi, Piljoo and Kwon, Ki-Ryong},
title = {A Blockchain-Based Approach in Healthcare Supply Chain Using Smart Contracts and Decentralized Storage Systems},
year = {2022},
isbn = {9781450392846},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3524458.3547251},
doi = {10.1145/3524458.3547251},
abstract = {Despite substantial advancements in healthcare systems and management, little progress has been achieved in addressing supply chain constraints such as, inefficient purchasing, ordering, predicting, and administration procedures. Healthcare authorities needs to effectively manage the healthcare supply chain processes not just during pandemics like COVID-19, but also in their everyday operations to guarantee best possible services. Product recalls, product supply shortage monitoring, expiry, and counterfeiting are some of the critical healthcare supply chain operations which must be ensured. Our suggested solution combines blockchain technology and distributed storage to increase transparency, improve stakeholder communication, and shorten product procurement timelines while eliminating crucial disparities and faults. We present a generic framework for the healthcare supply chain, equipped with comprehensive algorithms showing various stakeholder interactions. Our system uses the Ethereum network to link all parties, including the healthcare authority, manufacturer, wholesaler, retailer, and healthcare provider. Remix IDE platform was used to develop and test the smart contract codes. As decentralized storage, we have used the combination of InterPlanetary File System (IPFS) and Hyperledger Fabric. We have also examined a variety of security issues, provided a cost analysis of the various transactions proposed in our solution while making comparison with similar blockchain-based solutions.},
booktitle = {Proceedings of the 2022 ACM Conference on Information Technology for Social Good},
pages = {300–307},
numpages = {8},
keywords = {Healthcare, Supply Chain Management, Blockchain},
location = {Limassol, Cyprus},
series = {GoodIT '22}
}

@inproceedings{10.1145/3555661.3560874,
author = {Akram, Junaid and Akram, Awais and Jhaveri, Rutvij H. and Alazab, Mamoun and Chi, Haoran},
title = {BC-IoDT: Blockchain-Based Framework for Authentication in Internet of Drone Things},
year = {2022},
isbn = {9781450395144},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3555661.3560874},
doi = {10.1145/3555661.3560874},
abstract = {We leverage blockchain technology for drone node authentication in internet of drone things (IoDT). During the authentication procedure, the credentials of drone nodes are examined to remove malicious nodes from the system. In IoDT, drones are responsible for gathering data and transmitting it to cluster heads (CHs) for further processing. The CH collects and organizes data. Due to computational load, their energy levels rapidly deplete. To overcome this problem, we present a low-energy adaptive clustering hierarchy (R2D) protocol based on distance, degree, and residual energy. R2D is used to replace CHs with normal nodes based on the biggest residual energy, the degree, and the shortest distance from BS. The cost of keeping a big volume of data on the blockchain is high. We employ the Interplanetary File System (IPFS), to address this issue. Moreover, IPFS protects user data using the industry-standard encryption technique AES-128. This standard compares well to other current encryption methods. Using a consensus mechanism based on proof of work requires a high amount of computing resources for transaction verification. The suggested approach leverages a consensus mechanism known as proof of authority (PoA) to address this problem. The results of the simulations indicate that the suggested system model functions effectively and efficiently. A formal security analysis is conducted to assess the smart contract's resistance to attacks.},
booktitle = {Proceedings of the 5th International ACM Mobicom Workshop on Drone Assisted Wireless Communications for 5G and Beyond},
pages = {115–120},
numpages = {6},
keywords = {consensus, IoDT, access control, security, cluster head},
location = {Sydney, NSW, Australia},
series = {DroneCom '22}
}

@inproceedings{10.1145/3510003.3510086,
author = {Garamv\"{o}lgyi, P\'{e}ter and Liu, Yuxi and Zhou, Dong and Long, Fan and Wu, Ming},
title = {Utilizing Parallelism in Smart Contracts on Decentralized Blockchains by Taming Application-Inherent Conflicts},
year = {2022},
isbn = {9781450392211},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510003.3510086},
doi = {10.1145/3510003.3510086},
abstract = {Traditional public blockchain systems typically had very limited transaction throughput because of the bottleneck of the consensus protocol itself. With recent advances in consensus technology, the performance limit has been greatly lifted, typically to thousands of transactions per second. With this, transaction execution has become a new performance bottleneck. Exploiting parallelism in transaction execution is a clear and direct way to address this and to further increase transaction throughput. Although some recent literature introduced concurrency control mechanisms to execute smart contract transactions in parallel, the reported speedup that they can achieve is far from ideal. The main reason is that the proposed parallel execution mechanisms cannot effectively deal with the conflicts inherent in many blockchain applications.In this work, we thoroughly study the historical transaction execution traces in Ethereum. We observe that application-inherent conflicts are the major factors that limit the exploitable parallelism during execution. We propose to use partitioned counters and special commutative instructions to break up the application conflict chains in order to maximize the potential speedup. When we evaluated the maximum parallel speedup achievable, these techniques doubled this limit to an 18x overall speedup compared to serial execution, thus approaching the optimum. We also propose OCC-DA, an optimistic concurrency control scheduler with deterministic aborts, which makes it possible to use OCC scheduling in public blockchain settings.},
booktitle = {Proceedings of the 44th International Conference on Software Engineering},
pages = {2315–2326},
numpages = {12},
keywords = {parallel execution, optimistic concurrency, blockchain, smart contracts, distributed ledgers, deterministic concurrency},
location = {Pittsburgh, Pennsylvania},
series = {ICSE '22}
}

@inproceedings{10.1145/3545948.3545975,
author = {Ferreira Torres, Christof and Jonker, Hugo and State, Radu},
title = {Elysium: Context-Aware Bytecode-Level Patching to Automatically Heal Vulnerable Smart Contracts},
year = {2022},
isbn = {9781450397049},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545948.3545975},
doi = {10.1145/3545948.3545975},
abstract = {Fixing bugs is easiest by patching source code. However, source code is not always available: only 0.3% of the ∼ 49M smart contracts that are currently deployed on Ethereum have their source code publicly available. Moreover, since contracts may call functions from other contracts, security flaws in closed-source contracts may affect open-source contracts as well. However, current state-of-the-art approaches that operate on closed-source contracts (i.e.,&nbsp;EVM bytecode), such as EVMPatch and SmartShield, make use of purely hard-coded templates that leverage fix patching patterns. As a result, they cannot dynamically adapt to the bytecode that is being patched, which severely limits their flexibility and scalability. For instance, when patching integer overflows using hard-coded templates, a particular patch template needs to be employed as the bounds to be checked are different for each integer size (i.e.,&nbsp;one template for uint256, another template for uint64, etc.). In this paper, we propose Elysium, a scalable approach towards automatic smart contract repair at the bytecode level. Elysium combines template-based and semantic-based patching by inferring context information from bytecode. Elysium is currently able to patch 7 different types of vulnerabilities in smart contracts automatically and can easily be extended with new templates and new bug-finding tools. We evaluate its effectiveness and correctness using 3 different datasets by replaying more than 500K transactions on patched contracts. We find that Elysium outperforms existing tools by patching at least 30% more contracts correctly. Finally, we also compare the overhead of Elysium in terms of deployment and transaction cost. In comparison to other tools, we find that generally Elysium minimizes the runtime cost (i.e.,&nbsp;transaction cost) up to a factor of 1.7, for only a marginally higher deployment cost, where deployment cost is a one-time cost as compared to the runtime cost.},
booktitle = {Proceedings of the 25th International Symposium on Research in Attacks, Intrusions and Defenses},
pages = {115–128},
numpages = {14},
keywords = {context-aware patching, bytecode, Ethereum, smart contracts},
location = {Limassol, Cyprus},
series = {RAID '22}
}

@inproceedings{10.1145/3548606.3559342,
author = {Das, Dipanjan and Bose, Priyanka and Ruaro, Nicola and Kruegel, Christopher and Vigna, Giovanni},
title = {Understanding Security Issues in the NFT Ecosystem},
year = {2022},
isbn = {9781450394505},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3548606.3559342},
doi = {10.1145/3548606.3559342},
abstract = {Non-Fungible Tokens (NFTs) have emerged as a way to collect digital art as well as an investment vehicle. Despite having been popularized only recently, NFT markets have witnessed several high-profile (and high-value) asset sales and a tremendous growth in trading volumes over the last year. Unfortunately, these marketplaces have not yet received much security scrutiny. Instead, most academic research has focused on attacks against decentralized finance (DeFi) protocols and automated techniques to detect smart-contract vulnerabilities. To the best of our knowledge, we are the first to study the market dynamics and security issues of the multi-billion dollar NFT ecosystem.In this paper, we first present a systematic overview of how the NFT ecosystem works, and we identify three major actors: marketplaces, external entities, and users. We then perform an in-depth analysis of the top 8 marketplaces (ranked by transaction volume) to discover potential issues, many of which can lead to substantial financial losses. We also collected a large amount of asset and event data pertaining to the NFTs being traded in the examined marketplaces. We automatically analyze this data to understand how the entities external to the blockchain are able to interfere with NFT markets, leading to serious consequences, and quantify the malicious trading behaviors carried out by users under the cloak of anonymity.},
booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
pages = {667–681},
numpages = {15},
keywords = {decentralized finance (defi), non-fungible token (nft), blockchain},
location = {Los Angeles, CA, USA},
series = {CCS '22}
}

@article{10.1145/3563328,
author = {Chaliasos, Stefanos and Gervais, Arthur and Livshits, Benjamin},
title = {A Study of Inline Assembly in Solidity Smart Contracts},
year = {2022},
issue_date = {October 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {OOPSLA2},
url = {https://doi.org/10.1145/3563328},
doi = {10.1145/3563328},
abstract = {The Solidity programming language is the most widely used language for smart contract development. Improving smart contracts’ correctness, security, and performance has been the driving force for research in vulnerability detection, program analysis, and compiler techniques for Solidity. Similar to system-level languages such as C, Solidity enables the embedding of low-level code in programs, in the form of inline assembly code. Developers use inline assembly for low-level optimizations, extending the Solidity language through libraries, and using blockchain-specific opcodes only available through inline assembly. Nevertheless, inline assembly fragments are not well understood by an average developer and can introduce security threats as well as affect the optimizations that can be applied to programs by the compiler; it also significantly limits the effectiveness of source code static analyzers that operate on the Solidity level. A better understanding of how inline assembly is used in practice could in turn increase the performance, security, and support for inline assembly in Solidity. This paper presents a large-scale quantitative study of the use of inline assembly in 6.8M smart contracts deployed on the Ethereum blockchain. We find that 23% of the analyzed smart contracts contain inline assembly code, and that the use of inline assembly has become more widespread over time. We further performed a manual qualitative analysis for identifying usage patterns of inline assembly in Solidity smart contracts. Our findings are intended to help practitioners understand when they should use inline assembly and guide developers of Solidity tools in prioritizing which parts of inline assembly to implement first. Finally, the insights of this study could be used to enhance the Solidity language, improve the Solidity compiler, and to open up new research directions by driving future researchers to build appropriate methods and techniques for replacing inline assembly in Solidity programs when there is no real necessity to use it.},
journal = {Proc. ACM Program. Lang.},
month = {oct},
articleno = {165},
numpages = {27},
keywords = {Empirical Studies, Solidity, Smart Contracts, Inline Assembly}
}

@article{10.1145/3530813,
author = {Fahmideh, Mahdi and Grundy, John and Ahmad, Aakash and Shen, Jun and Yan, Jun and Mougouei, Davoud and Wang, Peng and Ghose, Aditya and Gunawardana, Anuradha and Aickelin, Uwe and Abedin, Babak},
title = {Engineering Blockchain-Based Software Systems: Foundations, Survey, and Future Directions},
year = {2022},
issue_date = {June 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {6},
issn = {0360-0300},
url = {https://doi.org/10.1145/3530813},
doi = {10.1145/3530813},
abstract = {Many scientific and practical areas have shown increasing interest in reaping the benefits of blockchain technology to empower software systems. However, the unique characteristics and requirements associated with Blockchain-based Software (BBS) systems raise new challenges across the development lifecycle that entail an extensive improvement of conventional software engineering. This article presents a systematic literature review of the state-of-the-art in BBS engineering research from the perspective of the software engineering discipline. We characterize BBS engineering based on the key aspects of theoretical foundations, processes, models, and roles. Based on these aspects, we present a rich repertoire of development tasks, design principles, models, roles, challenges, and resolution techniques. The focus and depth of this survey not only give software engineering practitioners and researchers a consolidated body of knowledge about current BBS development but also underpin a starting point for further research in this field.},
journal = {ACM Comput. Surv.},
month = {dec},
articleno = {110},
numpages = {44},
keywords = {Systems development methods, blockchain, Software engineering, blockchain-based software systems}
}

@article{10.1145/3573895,
author = {Silva, Paulo and Matos, Miguel and Barreto, Jo\~{a}o},
title = {NimbleChain: Speeding up Cryptocurrencies in General-Purpose Permissionless Blockchains},
year = {2023},
issue_date = {March 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {1},
issn = {2769-6472},
url = {https://doi.org/10.1145/3573895},
doi = {10.1145/3573895},
abstract = {Nakamoto’s seminal work gave rise to permissionless blockchains, as well as a wide range of proposals to mitigate their performance shortcomings. Despite substantial throughput and energy efficiency achievements, most proposals only bring modest (or marginal) gains in transaction commit latency. Consequently, commit latencies in today’s permissionless blockchain landscape remain prohibitively high.This article proposes NimbleChain, a novel algorithm that extends permissionless blockchains based on Nakamoto consensus with a fast path that delivers causal promises of commitment or simply promises. Since promises only partially order transactions, their latency is only a small fraction of the totally ordered commitment latency of Nakamoto consensus. Still, the weak consistency guarantees of promises are strong enough to correctly implement cryptocurrencies. To the best of our knowledge, NimbleChain is the first system to bring together fast, partially ordered transactions with consensus-based, totally ordered transactions in a permissionless setting. This hybrid consistency model is able to speed up cryptocurrency transactions while still supporting smart contracts, which typically have (strong) sequential consistency needs.We implement NimbleChain as an extension of Ethereum and evaluate it in a 500-node geo-distributed deployment. The results show NimbleChain can promise a cryptocurrency transactions up to an order of magnitude faster than a vanilla Ethereum implementation, with marginal overheads.},
journal = {Distrib. Ledger Technol.},
month = {mar},
articleno = {8},
numpages = {28},
keywords = {smart contracts, permissionless blockchains, cryptocurrencies, hybrid consistency, Distributed systems}
}

@article{10.1145/3558001,
author = {Ahmad, Hussain and Dharmadasa, Isuru and Ullah, Faheem and Babar, Muhammad Ali},
title = {A Review on C3I Systems’ Security: Vulnerabilities, Attacks, and Countermeasures},
year = {2023},
issue_date = {September 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {9},
issn = {0360-0300},
url = {https://doi.org/10.1145/3558001},
doi = {10.1145/3558001},
abstract = {Command, Control, Communication, and Intelligence (C3I) systems are increasingly used in critical civil and military domains for achieving information superiority, operational efficacy, and greater situational awareness. The critical civil and military domains include, but are not limited to, battlefield, healthcare, transportation, and rescue missions. Given the sensitive nature and modernization of tactical domains, the security of C3I systems has recently become a critical concern. This is because cyber-attacks on C3I systems have catastrophic consequences including loss of human lives. Despite the increasing number of cyber-attacks on C3I systems and growing concerns about C3I systems’ security, there is a paucity of a comprehensive review to systematize the body of knowledge on the security of C3I systems. Therefore, in this article, we have gathered, analyzed, and synthesized the body of knowledge on the security of C3I systems. We have identified and reported security vulnerabilities, attack vectors, and countermeasures/defenses for C3I systems. In particular, this article has enabled us to (i) propose a taxonomy for security vulnerabilities, attack vectors, and countermeasures; (ii) interrelate attack vectors with security vulnerabilities and countermeasures; and (iii) propose future research directions for advancing the state-of-the-art on the security of C3I systems. We believe that our findings will serve as a guideline for practitioners and researchers to advance the state-of-the-practice and state-of-the-art on the security of C3I systems.},
journal = {ACM Comput. Surv.},
month = {jan},
articleno = {192},
numpages = {38},
keywords = {surveillance, cybersecurity, Command, Control, C4ISR, defense, countermeasure, contested environments, Computer, C3I, C4I, Intelligence, vulnerability, complex systems, cyber attack, Communication, reconnaissance}
}

@article{10.1145/3596906,
author = {Houy, Sabine and Schmid, Philipp and Bartel, Alexandre},
title = {Security Aspects of Cryptocurrency Wallets - A Systematic Literature Review},
year = {2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {0360-0300},
url = {https://doi.org/10.1145/3596906},
doi = {10.1145/3596906},
abstract = {Cryptocurrencies are gaining prominence among individuals and companies alike, resulting in the growing adoption of so-called cryptocurrency wallet applications, as these simplify transactions. These wallets are available in a myriad of different forms and specifications. All of them are susceptible to various ways the attacker can exploit the vulnerabilities and steal money from victims. Cryptocurrency wallets create a unique field as they combine features of password managers, banking applications, and the need to keep their users and their transactions anonymous. We collect the findings from previous literature to provide an overview of the different attack surfaces, possible countermeasures, and further research. Existing literature focused on one of the features mentioned before, while we considered all of them. Our systematic study shows that there is a considerable variety of attack vectors, which we have divided into six subcategories, (i) Memory and Storage, (ii) Operating Systems, (iii) Software Layer, (iv) Network Layer, (v) Blockchain Protocol, and (vi) Others. We have found a large gap between the possible countermeasures and their actual adoption. Therefore, we provide a list of possible directions for future research to tackle this gap.},
note = {Just Accepted},
journal = {ACM Comput. Surv.},
month = {may},
keywords = {cryptocurrency, blockchain, bitcoin, wallet, vulnerability}
}

@inproceedings{10.1145/3540250.3549105,
author = {Yi, Xiao and Wu, Daoyuan and Jiang, Lingxiao and Fang, Yuzhou and Zhang, Kehuan and Zhang, Wei},
title = {An Empirical Study of Blockchain System Vulnerabilities: Modules, Types, and Patterns},
year = {2022},
isbn = {9781450394130},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3540250.3549105},
doi = {10.1145/3540250.3549105},
abstract = {Blockchain, as a distributed ledger technology, becomes increasingly popular, especially for enabling valuable cryptocurrencies and smart contracts. However, the blockchain software systems inevitably have many bugs. Although bugs in smart contracts have been extensively investigated, security bugs of the underlying blockchain systems are much less explored. In this paper, we conduct an empirical study on blockchain’s system vulnerabilities from four representative blockchains, Bitcoin, Ethereum, Monero, and Stellar. Specifically, we first design a systematic filtering process to effectively identify 1,037 vulnerabilities and their 2,317 patches from 34,245 issues/PRs (pull requests) and 85,164 commits on GitHub. We thus build the first blockchain vulnerability dataset, which is available at https://github.com/VPRLab/BlkVulnDataset. We then perform unique analyses of this dataset at three levels, including (i) file-level vulnerable module categorization by identifying and correlating module paths across projects, (ii) text-level vulnerability type clustering by natural language processing and similarity-based sentence clustering, and (iii) code-level vulnerability pattern analysis by generating and clustering code change signatures that capture both syntactic and semantic information of patch code fragments. Our analyses reveal three key findings: (i) some blockchain modules are more susceptible than the others; notably, each of the modules related to consensus, wallet, and networking has over 200 issues; (ii) about 70% of blockchain vulnerabilities are of traditional types, but we also identify four new types specific to blockchains; and (iii) we obtain 21 blockchain-specific vulnerability patterns that capture unique blockchain attributes and statuses, and demonstrate that they can be used to detect similar vulnerabilities in other popular blockchains, such as Dogecoin, Bitcoin SV, and Zcash.},
booktitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
pages = {709–721},
numpages = {13},
keywords = {Data Mining, System Vulnerability, Blockchain Security},
location = {Singapore, Singapore},
series = {ESEC/FSE 2022}
}

@inproceedings{10.1145/3575879.3576010,
author = {Bampalas, Charalampos and Rantos, Konstantinos},
title = {Blockchain-Based Vaccination Certificates Management},
year = {2023},
isbn = {9781450398541},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3575879.3576010},
doi = {10.1145/3575879.3576010},
abstract = {With the explosion of COVID-19 cases and the government’s needs to control virus spreading, the development of effective and robust systems for managing vaccination certificates to restrict citizens’ activities has been in the centre of many governments. This paper proposes a system that allows for the update of the status of certificates and bases its function on a specific form of logs stored on Blockchains and a set of rules for the interpretation of these logs. Also an outline of a proof of concept implementation of the system in Ethereum together with a cost and security analysis are provided in the paper. The proposed architecture provides several benefits with the most prominent one being the suspension of certificates in case an already vaccinated individual is found positive. In existing certificate management systems a vaccinated individual that is tested positive still holds a valid vaccination certificate during the self-isolation period. This vulnerability allows infected individuals to commute freely and thus facilitates the spread of the pandemic. The proposed solution is not limited to COVID-19 related certificates, but rather it could be deployed in any kind of digital certificate.},
booktitle = {Proceedings of the 26th Pan-Hellenic Conference on Informatics},
pages = {309–316},
numpages = {8},
keywords = {Ethereum, Covid-19, vaccination certificates, Blockchain},
location = {Athens, Greece},
series = {PCI '22}
}

@article{10.1145/3571847,
author = {Zheng, Zibin and Chen, Weili and Zhong, Zhijie and Chen, Zhiguang and Lu, Yutong},
title = {Securing the Ethereum from Smart Ponzi Schemes: Identification Using Static Features},
year = {2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {1049-331X},
url = {https://doi.org/10.1145/3571847},
doi = {10.1145/3571847},
abstract = {Malware detection approaches have been extensively studied for traditional software systems. However, the development of blockchain technology has promoted the birth of a new type of software system–decentralized applications. Composed of smart contracts, a type of application that implements the Ponzi scheme logic (called smart Ponzi schemes) has caused irreversible loss and hindered the development of blockchain technology. These smart contracts generally had a short life but involved a large amount of money. Whereas identification of these Ponzi schemes before causing financial loss has been significantly important, existing methods suffer from three main deficiencies, i.e., the insufficient dataset, the reliance on the transaction records, and the low accuracy. In this study, we first build a larger dataset. Then, a large number of features from multiple views, including bytecode, semantic, and developers, are extracted. These features are independent of the transaction records. Furthermore, we leveraged machine learning methods to build our identification model, i.e., Multi-view Cascade Ensemble model (MulCas). The experiment results show that MulCas can achieve higher performance and robustness in the scope of our dataset. Most importantly, the proposed method can identify smart Ponzi scheme at the creation time.},
note = {Just Accepted},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = {nov},
keywords = {Ethereum, Ponzi Schemes, Blockchain, Malware Detection}
}

@inproceedings{10.1145/3489449.3490006,
author = {Lu, Qinghua and Xu, Xiwei and Bandara, H.M.N. Dilum and Chen, Shiping and Zhu, Liming},
title = {Patterns for Blockchain-Based Payment Applications},
year = {2022},
isbn = {9781450389976},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3489449.3490006},
doi = {10.1145/3489449.3490006},
abstract = {As the killer application of blockchain technology, blockchain-based payments have attracted extensive attention ranging from hobbyists to corporates to regulatory bodies. Blockchain facilitates fast, secure, and cross-border payments without the need for intermediaries such as banks. Because blockchain technology is still emerging, systematically organised knowledge providing a holistic and comprehensive view on designing payment applications that use blockchain is yet to be established. If such knowledge could be established in the form of a set of blockchain-specific patterns, architects could use those patterns in designing a payment application that leverages blockchain. Therefore, in this paper, we first identify a token’s lifecycle and then present 12 patterns that cover critical aspects in enabling the state transitions of a token in blockchain-based payment applications. The lifecycle and the annotated patterns provide a payment-focused systematic view of system interactions and a guide to effective use of the patterns.},
booktitle = {26th European Conference on Pattern Languages of Programs},
articleno = {28},
numpages = {17},
keywords = {Blockchain, Cryptocurrency, Architecture, Pattern, Channel, Token, Escrow, Payment},
location = {Graz, Austria},
series = {EuroPLoP'21}
}

@article{10.1145/3570953,
author = {Zhu, Juncen and Cao, Jiannong and Saxena, Divya and Jiang, Shan and Ferradi, Houda},
title = {Blockchain-Empowered Federated Learning: Challenges, Solutions, and Future Directions},
year = {2023},
issue_date = {November 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {11},
issn = {0360-0300},
url = {https://doi.org/10.1145/3570953},
doi = {10.1145/3570953},
abstract = {Federated learning is a privacy-preserving machine learning technique that trains models across multiple devices holding local data samples without exchanging them. There are many challenging issues in federated learning, such as coordinating participants’ activities, arbitrating their benefits, and aggregating models. Most existing solutions employ a centralized approach, in which a trustworthy central authority is needed for coordination. Such an approach incurs many disadvantages, including vulnerability to attacks, lack of credibility, and difficulty in calculating rewards. Recently, blockchain was identified as a potential solution for addressing the abovementioned issues. Extensive research has been conducted, and many approaches, methods, and techniques have been proposed. There is a need for a systematic survey to examine how blockchain can empower federated learning. Although there are many surveys on federated learning, few of them cover blockchain as an enabling technology. This work comprehensively surveys challenges, solutions, and future directions for blockchain-empowered federated learning (BlockFed). First, we identify the critical issues in federated learning and explain why blockchain provides a potential approach to addressing these issues. Second, we categorize existing system models into three classes: decoupled, coupled, and overlapped, according to how the federated learning and blockchain functions are integrated. Then we compare the advantages and disadvantages of these three system models, regard the disadvantages as challenging issues in BlockFed, and investigate corresponding solutions. Finally, we identify and discuss the future directions, including open problems in BlockFed.},
journal = {ACM Comput. Surv.},
month = {feb},
articleno = {240},
numpages = {31},
keywords = {incentive mechanisms, blockchain-based federated learning, Blockchain, client selection, federated learning}
}

@inproceedings{10.1145/3510454.3516855,
author = {Song, Kunjian and Matulevicius, Nedas and de Lima Filho, Eddie B. and Cordeiro, Lucas C.},
title = {ESBMC-Solidity: An SMT-Based Model Checker for Solidity Smart Contracts},
year = {2022},
isbn = {9781450392235},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510454.3516855},
doi = {10.1145/3510454.3516855},
abstract = {Smart contracts written in Solidity are programs used in blockchain networks, such as Etherium, for performing transactions. However, as with any piece of software, they are prone to errors and may present vulnerabilities, which malicious attackers could then use. This paper proposes a solidity frontend for the efficient SMT-based context-bounded model checker (ESBMC), named ESBMC-Solidity, which provides a way of verifying such contracts with its framework. A benchmark suite with vulnerable smart contracts was also developed for evaluation and comparison with other verification tools. The experiments performed here showed that ESBMC-Solidity detected all vulnerabilities, was the fastest tool and provided a counterexample for each benchmark. A demonstration is available at https://youtu.be/3UH8_1QAVN0.},
booktitle = {Proceedings of the ACM/IEEE 44th International Conference on Software Engineering: Companion Proceedings},
pages = {65–69},
numpages = {5},
keywords = {formal verification, solidity},
location = {Pittsburgh, Pennsylvania},
series = {ICSE '22}
}

@inproceedings{10.1145/3551349.3559539,
author = {Liu, Ye and Li, Yi},
title = {InvCon: A Dynamic Invariant Detector for Ethereum Smart Contracts},
year = {2023},
isbn = {9781450394758},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3551349.3559539},
doi = {10.1145/3551349.3559539},
abstract = {Smart contracts are self-executing computer programs deployed on blockchain to enable trustworthy exchange of value without the need of a central authority. With the absence of documentation and specifications, routine tasks such as program understanding, maintenance, verification, and validation, remain challenging for smart contracts. In this paper, we propose a dynamic invariant detection tool, InvCon, for Ethereum smart contracts to mitigate this issue. The detected invariants can be used to not only support the reverse engineering of contract specifications, but also enable standard-compliance checking for contract implementations. InvCon provides a Web-based interface and a demonstration video of it is available at: https://youtu.be/Y1QBHjDSMYk.},
booktitle = {Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
articleno = {160},
numpages = {4},
location = {Rochester, MI, USA},
series = {ASE '22}
}

@proceedings{10.1145/3528226,
title = {WETSEB '22: Proceedings of the 5th International Workshop on Emerging Trends in Software Engineering for Blockchain},
year = {2022},
isbn = {9781450393317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
abstract = {The 5th Workshop on Emerging Trends in Software Engineering for Blockchain gathers the interests of researchers and practitioneers, from both academia and industry, as well as Ph.D. students working in the field of Blockchain technology, to investigate on and to and tackle the new challenges defined by BOSE. The Workshop's goal is to discuss the progresses made by software engineering on the research and on the practical applications of blockchain technologies and smart contracts, focusing on software engineering principles and practices adopted to deal with such new software technology, and for the technologies relying on it.},
location = {Pittsburgh, Pennsylvania}
}

@inproceedings{10.1145/3538969.3538984,
author = {Putz, Benedikt and Vielberth, Manfred and Pernul, G\"{u}nther},
title = {BISCUIT - Blockchain Security Incident Reporting Based on Human Observations},
year = {2022},
isbn = {9781450396707},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3538969.3538984},
doi = {10.1145/3538969.3538984},
abstract = {Security incidents in blockchain-based systems are frequent nowadays, which calls for more structured efforts in incident reporting and response. To improve the current status quo of reporting incidents on blogs and social media, we propose a decentralized incident reporting and discussion system. Our approach guides users (security novices) towards a classification of their observations using a tiered taxonomy of blockchain incidents. Questions based on previous incidents interactively support the classification. Post submission a security incident response committee then discusses these observations on our decentralized platform to decide on an appropriate response. For evaluation, we implement our model as a decentralized application and demonstrate its practical suitability in a preliminary user study.},
booktitle = {Proceedings of the 17th International Conference on Availability, Reliability and Security},
articleno = {27},
numpages = {6},
keywords = {Blockchain, Distributed Ledger, Human-as-a-Security-Sensor, Incident Detection},
location = {Vienna, Austria},
series = {ARES '22}
}

@inproceedings{10.1145/3528226.3528372,
author = {Verheijke, Darin and Rocha, Henrique},
title = {An Exploratory Study on Solidity Guards and Ether Exchange Constructs},
year = {2023},
isbn = {9781450393317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3528226.3528372},
doi = {10.1145/3528226.3528372},
abstract = {Ethereum is a blockchain platform that enables the use of smart contracts. Smart contracts will execute a set of instructions without an intermediary party when called upon. The possibility to make calls to another contract or exchange cryptocurrency allows for potential exploits to occur, most notable reentrancy. The Solidity language for coding smart contracts has syntactic constructs created to be safer alternatives, and guards to aid in securing code against exploits. In this paper, we collect a total of 26,799 verified Solidity smart contracts from Etherscan, to analyze the language constructs used in calling another contract or exchanging ether. We also analyze the usage of guards to make the code more secure. For instance, even though call is the unsafest function, it is still used by 50% of the contracts in our dataset. The safe method transfer is used by approximately one-third of contracts, and send is rarely used. We noticed that contracts using call have a higher average and median size in Lines of Code than normal. We also found an increased percentage of call contracts using more guards. Moreover, 97% of all contracts are using the require guard, with 23 uses of require on average per contract. This may be an indication that Solidity developers are using more guards to prevent exploits in their contracts},
booktitle = {Proceedings of the 5th International Workshop on Emerging Trends in Software Engineering for Blockchain},
pages = {1–8},
numpages = {8},
keywords = {smart contracts, guards, call, solidity, ethereum},
location = {Pittsburgh, Pennsylvania},
series = {WETSEB '22}
}

@inproceedings{10.1145/3510547.3517921,
author = {Shakarami, Mehrnoosh and Benson, James and Sandhu, Ravi},
title = {Blockchain-Based Administration of Access in Smart Home IoT},
year = {2022},
isbn = {9781450392297},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510547.3517921},
doi = {10.1145/3510547.3517921},
abstract = {There is a rising concern about authorization in IoT environments to be appropriately designed and applied, due to smart things surge to be part of people's daily lives on one hand, and the amount of personal/private information they utilize, on the other hand. Different access control systems have been proposed for different IoT environments, many are remaining only at a conceptual level. In this paper, we propose a decentralized, ledger-based, publish-subscribe based architecture for the administration of access in a smart home IoT environment to preside at the assignments of underlying operational authorizations. Proposed architecture is endorsed by a proof-of-concept implementation, which utilizes smart contracts to ensure the integrity of administration supplemented by intrinsic benefits of blockchain to be distributed and transparent. Despite the rising hype around the blockchain technology that stokes its utilization in different domains, utilizing it for access control purposes is not yet promising. Our implementation results assure using blockchain for administrative access control is propitious, while is not yet appropriate for operational access control, which have been mainly the focus of previously proposed blockchain-based access control works.},
booktitle = {Proceedings of the 2022 ACM Workshop on Secure and Trustworthy Cyber-Physical Systems},
pages = {57–66},
numpages = {10},
keywords = {smart home iot, decentralized access control, blockchain-based access control, access administration},
location = {Baltimore, MD, USA},
series = {Sat-CPS '22}
}

@inproceedings{10.1145/3511430.3511448,
author = {Kumar, Abhay and Gupta, Abhinav and Sanagavarapu, Lalit Mohan and Reddy, Y Raghu},
title = {An Approach to Open-Source Software License Management Using Blockchain-Based Smart-Contracts},
year = {2022},
isbn = {9781450396189},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3511430.3511448},
doi = {10.1145/3511430.3511448},
abstract = {Open source software is increasingly being used by various organizations. Open source licenses such as GPL, MIT, Apache, Mozilla, BSD, etc have varying terms and conditions for usage, modification, and distribution. Given the availability of source code for open source software, it is difficult to scrutinize adherence of licenses and more often than not it is left to the good faith of organizations and individuals. Violation of licensing terms knowingly or unknowingly can lead to copyright, ethical, compliance and security issues. In this paper, we propose a blockchain based approach in managing open source software licenses by enforcing certain practices to improve awareness and increase transparency, thus minimizing the possibility of violations. We present a solution design that relies on the use of 4 modules: InterPlanetary File System (IPFS), Smart contracts, Transaction manager (Meta-Mask) and a Permissioned Blockchain to enforce the conformance of licenses.},
booktitle = {15th Innovations in Software Engineering Conference},
articleno = {20},
numpages = {5},
keywords = {Copyright Violation, Open-Source Software, Blockchain, Software License Management, InterPlanetary File System, Smart Contracts},
location = {Gandhinagar, India},
series = {ISEC 2022}
}

@inproceedings{10.1145/3547276.3548440,
author = {Wu, Jung-Hsien and Yang, Jie-Yu and Chang, Yu-Ching and Sun, Min-Te},
title = {A Fast and Secure AKA Protocol for B5G},
year = {2023},
isbn = {9781450394451},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3547276.3548440},
doi = {10.1145/3547276.3548440},
abstract = {With the popularity of mobile devices, the mobile service requirements are now changing rapidly. This implies that the micro network operator dedicated to a specific sector of users has the potential to improve the 5G architecture in terms of scalability and autonomy. However, the traditional AKA protocol does not allow the micro operator to authenticate mobile users independently. To solve this problem, we propose the Fast AKA protocol, which disseminates a subscriber’s profile among base stations via a Blockchain and mutually authenticates the subscriber and serving base station locally for roaming. The proposed architecture speeds up the authentication process, provides forward/backward secrecy, and resists replay attack as well as man-in-the-middle attack. We believe that Fast AKA can serve as a cornerstone for B5G.},
booktitle = {Workshop Proceedings of the 51st International Conference on Parallel Processing},
articleno = {1},
numpages = {7},
keywords = {AKA, Authentication, Blockchain, B5G},
location = {Bordeaux, France},
series = {ICPP Workshops '22}
}

@inproceedings{10.1145/3545948.3545963,
author = {Wang, Dabao and Feng, Hang and Wu, Siwei and Zhou, Yajin and Wu, Lei and Yuan, Xingliang},
title = {Penny Wise and Pound Foolish: Quantifying the Risk of Unlimited Approval of ERC20 Tokens on Ethereum},
year = {2022},
isbn = {9781450397049},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545948.3545963},
doi = {10.1145/3545948.3545963},
abstract = {The prosperity of decentralized finance motivates many investors to profit via trading their crypto assets on decentralized applications (DApps for short) of the Ethereum ecosystem. Apart from Ether (the native cryptocurrency of Ethereum), many ERC20 (a widely used token standard on Ethereum) tokens obtain vast market value in the ecosystem. Specifically, the approval mechanism is used to delegate the privilege of spending users’ tokens to DApps. By doing so, the DApps can transfer these tokens to arbitrary receivers on behalf of the users. To increase the usability, unlimited approval is commonly adopted by DApps to reduce the required interaction between them and their users. However, as shown in existing security incidents, this mechanism can be abused to steal users’ tokens. In this paper, we present the first systematic study to quantify the risk of unlimited approval of ERC20 tokens on Ethereum. Specifically, by evaluating existing transactions up to 31st July 2021, we find that unlimited approval is prevalent (60%, 15.2M/25.4M) in the ecosystem, and 22% of users have a high risk of their approved tokens for stealing. After that, we investigate the security issues that are involved in interacting with the UIs of 22 representative DApps and 9 famous wallets to prepare the approval transactions. The result reveals the worrisome fact that all DApps request unlimited approval from the front-end users and only 10% (3/31) of UIs provide explanatory information for the approval mechanism. Meanwhile, only 16% (5/31) of UIs allow users to modify their approval amounts. Finally, we take a further step to characterize the user behavior into five modes and formalize the good practice, i.e., on-demand approval and timely spending, towards securely spending approved tokens. However, the evaluation result suggests that only 0.2% of users follow the good practice to mitigate the risk. Our study sheds light on the risk of unlimited approval and provides suggestions to secure the approval mechanism of the ERC20 tokens on Ethereum.},
booktitle = {Proceedings of the 25th International Symposium on Research in Attacks, Intrusions and Defenses},
pages = {99–114},
numpages = {16},
keywords = {ERC20, Decentralized Finance, Unlimited Approval, Ethereum},
location = {Limassol, Cyprus},
series = {RAID '22}
}

@inproceedings{10.1145/3508398.3511504,
author = {Reijsbergen, Dani\"{e}l and Maw, Aung and Dinh, Tien Tuan Anh and Li, Wen-Tai and Yuen, Chau},
title = {Securing Smart Grids Through an Incentive Mechanism for Blockchain-Based Data Sharing},
year = {2022},
isbn = {9781450392204},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3508398.3511504},
doi = {10.1145/3508398.3511504},
abstract = {Smart grids leverage the data collected from smart meters to make important operational decisions. However, they are vulnerable to False Data Injection (FDI) attacks in which an attacker manipulates meter data to disrupt the grid operations. Existing works on FDI are based on a simple threat model in which a single grid operator has access to all the data, and only some meters can be compromised.Our goal is to secure smart grids against FDI under a realistic threat model. To this end, we present a threat model in which there are multiple operators, each with a partial view of the grid, and each can be fully compromised. An effective defense against FDI in this setting is to share data between the operators. However, the main challenge here is to incentivize data sharing. We address this by proposing an incentive mechanism that rewards operators for uploading data, but penalizes them if the data is missing or anomalous. We derive formal conditions under which our incentive mechanism is provably secure against operators who withhold or distort measurement data for profit. We then implement the data sharing solution on a private blockchain, introducing several optimizations that overcome the inherent performance limitations of the blockchain. Finally, we conduct an experimental evaluation that demonstrates that our implementation has practical performance.},
booktitle = {Proceedings of the Twelfth ACM Conference on Data and Application Security and Privacy},
pages = {191–202},
numpages = {12},
keywords = {blockchains, data security, smart grids, false data injection},
location = {Baltimore, MD, USA},
series = {CODASPY '22}
}

@inproceedings{10.1145/3560905.3568181,
author = {Geng, Tieming and Njilla, Laurent and Huang, Chin-Tser},
title = {A Survey of Blockchain-Based Electronic Voting Mechanisms in Sensor Networks},
year = {2023},
isbn = {9781450398862},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3560905.3568181},
doi = {10.1145/3560905.3568181},
abstract = {Electronic voting technology has the ability to accelerate the counting of ballots, reduce the cost of voting, and offer convenience for remote voters. Meanwhile, the efficiency of voting can be improved. Immutability, verifiability, and distribution are the main features blockchain can provide. Building an electronic voting system based on the blockchain can help to mitigate the security issues such as single-point failure and data manipulation. However, some blockchain systems are not feasible in the environment of sensor networks. In this paper, we propose a comparative analysis of blockchain-based electronic voting systems from the perspective of blockchain type, cryptography techniques, counting method, and security requirements. We also identify a possible new direction for the design of blockchain-based electronic voting systems for the reference of future research.},
booktitle = {Proceedings of the 20th ACM Conference on Embedded Networked Sensor Systems},
pages = {1222–1228},
numpages = {7},
keywords = {blockchain, electronic voting, sensor network},
location = {Boston, Massachusetts},
series = {SenSys '22}
}

@inproceedings{10.1145/3510487.3510499,
author = {Bekemeier, Felix},
title = {Deceptive Assurance? A Conceptual View on Systemic Risk in Decentralized Finance (DeFi)},
year = {2022},
isbn = {9781450387460},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510487.3510499},
doi = {10.1145/3510487.3510499},
abstract = {The Decentralized Finance (DeFi) ecosystem has recently been touted as a potential replacement for the existing financial system, with the monetary equivalent in this ecosystem based on various token concepts and infrastructural protocols. However, questions remain regarding the systemic risk of this ecosystem, and closer examination reveals interesting parallels to the concept of systemic risk in established financial systems. There is a need for research to examine important additional dimensions in relation to DeFi. This paper addresses systemic risk in DeFi, presenting the first holistic research framework on the topic, as well as the first empirical indications in order to create foundations for further research.},
booktitle = {Proceedings of the 2021 4th International Conference on Blockchain Technology and Applications},
pages = {76–87},
numpages = {12},
keywords = {Decentralized Finance, Systemic risk, Blockchain technology},
location = {Xi'an, China},
series = {ICBTA '21}
}

@proceedings{10.1145/3581971,
title = {ICBTA '22: Proceedings of the 2022 5th International Conference on Blockchain Technology and Applications},
year = {2022},
isbn = {9781450397575},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Xi'an, China}
}

@inproceedings{10.1145/3533767.3534378,
author = {Ghaleb, Asem and Rubin, Julia and Pattabiraman, Karthik},
title = {ETainter: Detecting Gas-Related Vulnerabilities in Smart Contracts},
year = {2022},
isbn = {9781450393799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3533767.3534378},
doi = {10.1145/3533767.3534378},
abstract = {The execution of smart contracts on the Ethereum blockchain consumes gas paid for by users submitting contracts' invocation requests. A contract execution proceeds as long as the users dedicate enough gas, within the limit set by Ethereum. If insufficient gas is provided, the contract execution halts and changes made during execution get reverted. Unfortunately, contracts may contain code patterns that increase execution cost, causing the contracts to run out of gas. These patterns can be manipulated by malicious attackers to induce unwanted behavior in the targeted victim contracts, e.g., Denial-of-Service (DoS) attacks. We call these gas-related vulnerabilities. We propose eTainter, a static analyzer for detecting gas-related vulnerabilities based on taint tracking in the bytecode of smart contracts. We evaluate eTainter by comparing it with the prior work, MadMax, on a dataset of annotated contracts. The results show that eTainter outperforms MadMax in both precision and recall, and that eTainter has a precision of 90% based on manual inspection. We also use eTainter to perform large-scale analysis of 60,612 real-world contracts on the Ethereum blockchain. We find that gas-related vulnerabilities exist in 2,763 of these contracts, and that eTainter analyzes a contract in eight seconds, on average.},
booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {728–739},
numpages = {12},
keywords = {security, Ethereum, taint analysis, Solidity},
location = {Virtual, South Korea},
series = {ISSTA 2022}
}

@article{10.1145/3539604,
author = {Han, Rong and Yan, Zheng and Liang, Xueqin and Yang, Laurence T.},
title = {How Can Incentive Mechanisms and Blockchain Benefit with Each Other? A Survey},
year = {2022},
issue_date = {July 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {7},
issn = {0360-0300},
url = {https://doi.org/10.1145/3539604},
doi = {10.1145/3539604},
abstract = {In a blockchain-based system, the lack of centralized control requires active participation and cooperative behaviors of system entities to ensure system security and sustainability. However, dynamic environments and unpredictable entity behaviors challenge the performances of such systems in practice. Therefore, designing a feasible incentive mechanism to regulate entity behaviors becomes essential to improve blockchain system performance. The prosperous characteristics of blockchain can also contribute to an effective incentive mechanism. Unfortunately, current literature still lacks a thorough survey on incentive mechanisms related to the blockchain to understand how incentive mechanisms and blockchain make each other better. To this end, we propose evaluation requirements in terms of the properties and costs of incentive mechanisms. On the one hand, we provide a taxonomy of the incentive mechanisms of blockchain systems according to blockchain versions, incentive forms, and incentive goals. On the other hand, we categorize blockchain-based incentive mechanisms according to application scenarios and incentive goals. During the review, we discuss the advantages and disadvantages of state-of-the-art incentive mechanisms based on the proposed evaluation requirements. Through careful review, we present how incentive mechanisms and blockchain benefit with each other, discover a number of unresolved issues, and point out corresponding potential directions for future research.},
journal = {ACM Comput. Surv.},
month = {dec},
articleno = {136},
numpages = {38},
keywords = {monetary incentive, non-monetary incentive, incentive mechanism, Blockchain}
}

@inproceedings{10.1145/3552326.3567482,
author = {Gramoli, Vincent and Guerraoui, Rachid and Lebedev, Andrei and Natoli, Chris and Voron, Gauthier},
title = {Diablo: A Benchmark Suite for Blockchains},
year = {2023},
isbn = {9781450394871},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3552326.3567482},
doi = {10.1145/3552326.3567482},
abstract = {With the recent advent of blockchains, we have witnessed a plethora of blockchain proposals. These proposals range from using work to using time, storage or stake in order to select blocks to be appended to the chain. As a drawback it makes it difficult for the application developer to choose the right blockchain to support their applications. In particular, the scalability and performance one can obtain from a specific blockchain is typically unknown. The claimed results are often obtained in isolation by the developers of the blockchain themselves. The experimental conditions corresponding to these results are generally missing and the lack of details make these results irreproducible.In this paper, we propose the most extensive evaluation of blockchain to date. First, we show how the experimental settings impact the performance of 6 state-of-the-art blockchains and argue for more detailed experiments. Second, and to cope with this limitation, we propose a unifying framework to evaluate blockchains on the same ground. The framework includes a suite of 5 realistic Decentralized Applications (DApps), helps deploy the blockchain nodes at different scales and evaluate their performance. Finally, we show that selecting a particular virtual machine or weakening guarantees can help handle computationally demanding workloads but that none of the tested blockchains can yet support the load of these realistic DApps.},
booktitle = {Proceedings of the Eighteenth European Conference on Computer Systems},
pages = {540–556},
numpages = {17},
keywords = {byzantine, throughput, latency, decentralization, performance, scalability, security},
location = {Rome, Italy},
series = {EuroSys '23}
}

@inproceedings{10.1145/3559795.3559806,
author = {Zhang, Jiazheng and Bai, Fenhua and Shen, Tao and Gong, Bei and Luo, Jianzhao},
title = {Trusted Blockchain-Based Data Fingerprinting Differential-Traceability and SkipList Indexing Methods in Privacy Protection},
year = {2022},
isbn = {9781450396622},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3559795.3559806},
doi = {10.1145/3559795.3559806},
abstract = {The process of data interaction is often criticized by the public for data privacy leakage, attribution disputes, as well as being maliciously tampered with and difficult to trace the source of data. This paper proposes a data privacy protection and fingerprint tracing method based on the features of decentralization, traceability and non-tampering in blockchain technology. And we combined with the protection of data by secure network platform in trusted computing and differential-traceability algorithm (DTA). We propose a data privacy protection and fingerprint traceability method, and use the SkipList table index structure to improve interaction efficiency. We discuss the proposed data fingerprint-based traceability framework model in a trusted environment using the features of blockchain and trusted computing platforms. In this paper, the data can be processed safely and efficiently to solve the privacy problem, the transaction data is encrypted and recorded on the chain by DTA, and the interaction process uses the SkipList table index to enhance retrieval efficiency. Finally, through multiple experiments and comparison of the results obtained from security testing, it is verified that the blockchain-trusted computing data privacy protection and data fingerprint traceability SkipList table indexing method can achieve traceability for data privacy protection, transaction security management and peer-to-peer verification of encryption and decryption algorithms. We not only provide a secure, trustworthy and efficient data privacy protection model, but also bring a time efficiency optimization of 6ms per 10,000 queries.},
booktitle = {Proceedings of the 2022 4th Blockchain and Internet of Things Conference},
pages = {73–83},
numpages = {11},
keywords = {Trusted Computing, Secure Traceability, SkipList Table, Blockchain, Data Fingerprinting},
location = {Tokyo, China},
series = {BIOTC '22}
}

@article{10.1145/3558779,
author = {Fotia, Lidia and Delicato, Fl\'{a}via and Fortino, Giancarlo},
title = {Trust in Edge-Based Internet of Things Architectures: State of the Art and Research Challenges},
year = {2023},
issue_date = {September 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {9},
issn = {0360-0300},
url = {https://doi.org/10.1145/3558779},
doi = {10.1145/3558779},
abstract = {The Internet of Things (IoT) aims to enable a scenario where smart objects, inserted into information networks, supply smart services for human beings. The introduction of edge computing in IoT can reduce the decision-making latency, save bandwidth resources, and expand the cloud services to be allocated at the network’s edge. However, edge-based IoT systems currently face challenges in their decentralized trust management. Trust management is essential to obtain reliable mining and data fusion, improved user privacy and data security, and provisioning of services with context-awareness. In this survey, we first examine the edge-based IoT architectures currently reported in the literature. Then a complete review of trust requirements in edge-based IoT systems is produced. Also, we discuss about blockchain as a solution to solve several trust problems in IoT and analyze in detail the correlation between blockchain and edge computing. Finally, we provide a detailed analysis of performance aspects of trusted edge-based IoT systems and recommend promising research directions.},
journal = {ACM Comput. Surv.},
month = {jan},
articleno = {182},
numpages = {34},
keywords = {trust, edge computing, blockchain, reputation, Internet of things}
}

@proceedings{10.1145/3578527,
title = {ISEC '23: Proceedings of the 16th Innovations in Software Engineering Conference},
year = {2023},
isbn = {9798400700644},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Allahabad, India}
}

@inproceedings{10.1145/3563768.3565551,
author = {Lahiri, Sumit},
title = {Verification of Programs with Concealed Components},
year = {2022},
isbn = {9781450399012},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3563768.3565551},
doi = {10.1145/3563768.3565551},
abstract = {Real-world programs contain a multitude of concealed components whose formal semantics not available to verification engines, like third-party API calls, inline assembly and SIMD instructions, system calls, sampling assignments from probability distributions and library calls. Albiet the success of program verification, proving correctness of such "open" programs has remained a challenge. Currently, this problem is handled by manually "closing" the program---by providing hand-written mocks that attempt to capture the behavior of these concealed components. Most often, writing such mock code (stubs) is not only ardious, but are often erroneous, thus raising serious questions on the whole endeavor. In light of this challenge, we came up with a novel technique, almost verification as an attempt to prove correctness for such "open" programs.},
booktitle = {Companion Proceedings of the 2022 ACM SIGPLAN International Conference on Systems, Programming, Languages, and Applications: Software for Humanity},
pages = {43–46},
numpages = {4},
keywords = {program testing, concealed components, opaque components, program verification, fuzzing},
location = {Auckland, New Zealand},
series = {SPLASH Companion 2022}
}

@inproceedings{10.1145/3559795.3559809,
author = {Wang, Qin and Du, Xinke},
title = {Design of Logistics Cloud Platform Based on Blockchain},
year = {2022},
isbn = {9781450396622},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3559795.3559809},
doi = {10.1145/3559795.3559809},
abstract = {The emergence of Internet technologies such as big data, artificial intelligence, and blockchain has helped the logistics industry enter the fast lane of development. In recent years, the logistics cloud platform, as a new model of Internet + logistics development, can integrate all the information of service supply chain providers and realize the digitization and networking of logistics resources. However, limited by the existing technology and management mechanism, the development of my country's logistics cloud platform is still in its infancy, and the phenomenon of uneven distribution of power and information asymmetry is expected, which limits the willingness of enterprises to share information to a certain extent. It is also not conducive to the long-term development of the logistics cloud platform. Because of this, this paper builds a logistics cloud platform based on blockchain technology, and explores and solves the problem of information sharing among nodes on the logistics cloud platform. Firstly, analyze the goals and participants of the logistics cloud platform, and then combine the factors that affect information sharing, use blockchain technology to build a logistics cloud platform and outline its functions, and finally compare it with the traditional supply chain, highlighting the blockchain logistics cloud platform The advantages. It is hoped that by building this platform to encourage relevant logistics enterprises to share information, so as to promote the development of the entire logistics industry.},
booktitle = {Proceedings of the 2022 4th Blockchain and Internet of Things Conference},
pages = {100–106},
numpages = {7},
keywords = {logistics cloud platform, the logistics industry, blockchain, information sharing},
location = {Tokyo, China},
series = {BIOTC '22}
}

@inproceedings{10.1145/3560829.3563563,
author = {Azouvi, Sarah and Vukoli\'{c}, Marko},
title = {Pikachu: Securing PoS Blockchains from Long-Range Attacks by Checkpointing into Bitcoin PoW Using Taproot},
year = {2022},
isbn = {9781450398794},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3560829.3563563},
doi = {10.1145/3560829.3563563},
abstract = {Blockchain systems based on a reusable resource, such as proof-of-stake (PoS), provide weaker security guarantees than those based on proof-of-work. Specifically, they are vulnerable to long-range attacks, where an adversary can corrupt prior participants in order to rewrite the full history of the chain. To prevent this attack on a PoS chain, we propose a protocol that checkpoints the state of the PoS chain to a proof-of-work blockchain such as Bitcoin. Our checkpointing protocol hence does not rely on any central authority. Our work uses Schnorr signatures and leverages Bitcoin recent Taproot upgrade, allowing us to create a checkpointing transaction of constant size. We argue for the security of our protocol and present an open-source implementation that was tested on the Bitcoin testnet.},
booktitle = {Proceedings of the 2022 ACM Workshop on Developments in Consensus},
pages = {53–65},
numpages = {13},
keywords = {blockchain, long-range attack, proof-of-stake, threshold signature},
location = {Los Angeles, CA, USA},
series = {ConsensusDay '22}
}

@article{10.1145/3570639,
author = {Xu, Jiahua and Paruch, Krzysztof and Cousaert, Simon and Feng, Yebo},
title = {SoK: Decentralized Exchanges (DEX) with Automated Market Maker (AMM) Protocols},
year = {2023},
issue_date = {November 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {11},
issn = {0360-0300},
url = {https://doi.org/10.1145/3570639},
doi = {10.1145/3570639},
abstract = {As an integral part of the decentralized finance (DeFi) ecosystem, decentralized exchanges (DEXs) with automated market maker (AMM) protocols have gained massive traction with the recently revived interest in blockchain and distributed ledger technology (DLT) in general. Instead of matching the buy and sell sides, automated market makers (AMMs) employ a peer-to-pool method and determine asset price algorithmically through a so-called conservation function. To facilitate the improvement and development of AMM-based decentralized exchanges (DEXs), we create the first systematization of knowledge in this area. We first establish a general AMM framework describing the economics and formalizing the system’s state-space representation. We then employ our framework to systematically compare the top AMM protocols’ mechanics, illustrating their conservation functions, as well as slippage and divergence loss functions. We further discuss security and privacy concerns, how they are enabled by AMM-based DEXs’ inherent properties, and explore mitigating solutions. Finally, we conduct a comprehensive literature review on related work covering both DeFi and conventional market microstructure.},
journal = {ACM Comput. Surv.},
month = {feb},
articleno = {238},
numpages = {50},
keywords = {Ethereum, blockchain, automated market maker, decentralized exchange, Decentralized finance}
}

@inproceedings{10.1145/3564625.3567995,
author = {Ren, Qian and Wu, Yingjun and Liu, Han and Li, Yue and Victor, Anne and Lei, Hong and Wang, Lei and Chen, Bangdao},
title = {Cloak: Transitioning States on Legacy Blockchains Using Secure and Publicly Verifiable Off-Chain Multi-Party Computation},
year = {2022},
isbn = {9781450397599},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3564625.3567995},
doi = {10.1145/3564625.3567995},
abstract = {In recent years, the confidentiality of smart contracts has become a fundamental requirement for practical applications. While many efforts have been made to develop architectural capabilities for enforcing confidential smart contracts, a few works arise to extend confidential smart contracts to Multi-Party Computation (MPC), i.e., multiple parties jointly evaluate a transaction off-chain and commit the outputs on-chain without revealing their secret inputs/outputs to each other. However, existing solutions lack public verifiability and require O(n) transactions to enable negotiation or resist adversaries, thus suffering from inefficiency and compromised security. In this paper, we propose Cloak, a framework for enabling Multi-Party Transaction (MPT) on existing blockchains. An MPT refers to transitioning blockchain states by an publicly verifiable off-chain MPC. We identify and handle the challenges of securing MPT by harmonizing TEE and blockchain. Consequently, Cloak secures the off-chain nondeterministic negotiation process (a party joins an MPT without knowing identities or the total number of parties until the MPT proposal settles), achieves public verifiability (the public can validate that the MPT correctly handles the secret inputs/outputs from multiple parties and reads/writes states on-chain), and resists Byzantine adversaries. According to our proof, Cloak achieves better security with only 2 transactions, superior to previous works that achieve compromised security at O(n) transactions cost. By evaluating examples and real-world MPTs, the gas cost of Cloak reduces by 32.4% on average.},
booktitle = {Proceedings of the 38th Annual Computer Security Applications Conference},
pages = {117–131},
numpages = {15},
location = {Austin, TX, USA},
series = {ACSAC '22}
}

@inproceedings{10.1145/3549206.3549301,
author = {Saxena, Arpna and Mittal, Sangeeta},
title = {Internet of Medical Things (IoMT) Security and Privacy: A Survey of Recent Advances and Enabling Technologies},
year = {2022},
isbn = {9781450396752},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3549206.3549301},
doi = {10.1145/3549206.3549301},
abstract = {Healthcare has undergone a rapid shift from traditional to smart health care system in recent times. The new paradigm takes a patient-centered approach and offers a variety of benefits to patients. Rapid technological developments have allowed for such a quick shift. The Internet of medical things (IoMT) is a key component of the development of smart health care systems. The current pandemic situation has demonstrated that IoMT systems can provide a quick patient diagnosis by continually monitoring their health and perhaps saving lives in the event of an emergency. But most IoMT devices were not built with security in mind, making them vulnerable to cyber-attacks. Furthermore, many gadgets such as smart sensors, wearable devices, handheld devices, and a variety of other heterogeneous devices being connected in a network for the smooth running of communication in healthcare make this system more vulnerable to security and privacy attacks. Security of IoMT devices and data is of paramount importance and critical to protecting the lives of patients. This survey attempts to explore applications of various recent technologies, particularly blockchain, PUFs, and AI/ML, in terms of security, privacy, protection, integrity, and authentication in IoMT ecosystem. In addition, insights into the benefits and limitations of existing security and privacy solutions have been provided.},
booktitle = {Proceedings of the 2022 Fourteenth International Conference on Contemporary Computing},
pages = {550–559},
numpages = {10},
location = {Noida, India},
series = {IC3-2022}
}

@inproceedings{10.1145/3578997.3579001,
author = {Handoko, Bambang Leo and Arfianti, Firda and Marlinda, Sherly},
title = {The Utilization of Blockchain Technology on Remote Audit to Ensure Audit Data Integrity in Detecting Potential Fraudulent Financial Reporting},
year = {2023},
isbn = {9798400700095},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3578997.3579001},
doi = {10.1145/3578997.3579001},
abstract = {The rapid evolution of technology has massively changed and shaped audit work culture. At the same time, the COVID-19 pandemic outbreak significantly changed audit and control activities, encouraging auditors to audit clients remotely and forcing auditors to adopt advanced digital technology, especially blockchain-based technology. Blockchain is one decentralized, transparent, and immutable technology that plays an essential role and has an aggressive impact in the audit field. The implementation and adoption of cognitive technologies such as blockchain in the remote audit process allow auditors to access various client data and information in real-time, ensure audit data integrity, review and process data documentation quickly, obtaining data directly without third parties that make it easier for auditors to obtain audit evidence instantly and accurately in detecting any anomalies. This research aims to identify and navigate how blockchain assists auditors in performing remote audits, ensuring data integrity, detecting fraudulent financial reporting, elaborating on factors that influence the auditor's success in using blockchain, and identifying challenges auditors face during blockchain utilization in their remote audits. This research used a descriptive qualitative approach by obtaining primary data from profound interview results with several auditors experienced in using blockchain. We also used secondary data from journals, papers, articles, books, and relevant websites. The research findings showed that blockchain's unique characteristics greatly assist auditors in conducting remote audits, ensuring audit data integrity, and detecting fraudulent financial reporting in various ways. Furthermore, various factors influence blockchain utilization, such as human resources aspects, the effectiveness of the IT control environment, and the CPA size firm. Lastly, auditors should face several challenges in the present and future.},
booktitle = {Proceedings of the 2022 6th International Conference on Software and E-Business},
pages = {104–112},
numpages = {9},
keywords = {Auditing, Data Integrity, Technology, Remote Audit, Financial Reporting, Fraud, Blockchain, Adoption},
location = {Shenzhen, China},
series = {ICSEB '22}
}

@inproceedings{10.1145/3494193.3494200,
author = {More, Ajay and Sah, Abhishek and Singh, Shilpa},
title = {Ushering&nbsp;a Trust-Based Benefit Delivery Ecosystem in Rural India Powered by Blockchain},
year = {2022},
isbn = {9781450390118},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3494193.3494200},
doi = {10.1145/3494193.3494200},
abstract = {In developing countries across the globe, the resources are scarce with governments, but the demand from citizens are enormous, resources are often so thinly spread by the government that they rarely manage to have the socio-economic impact they are intended to bring. To elucidate this point, we took the case of India, where multiple beneficiary-oriented programmes are implemented in rural areas of the country targeting about a billion people. Billions of dollars are spent by both Federal Governments and State Governments in undertaking similar exercises for outreach, identification, and enrolment of beneficiaries under various welfare programmes that provide cash transfers, subsidies and other social services to the disadvantaged youth, women and aged in society. Some countries have also undertaken household surveys to identify gaps in demand and the supply of government services. However, limited success has been achieved in adopting such static database as the single source of truth for the identification of deprived households across all government programmes, due to its inherent potential for creating errors of inclusion and exclusion. Another major deterrent in the adoption of such a singular identity associated with socio-economic attribute is the concentration of information and associated risks. Through this paper, an attempt is being made to bridge this ‘trust deficit’ in governance through the application of distributed ledger technology for social inclusion. We further discuss how government is better placed than the private sector to tap the full potential of Blockchain technology as several public organizations working in the same sector are often controlled by the same parent government department. A mandate from government can give the necessary thrust to reap the benefits of this ecosystem-centric technology. At the last, feasibility, approaches and challenges are analyzed. The results from the adoption of this approach to governance can transform the entire service delivery ecosystem.},
booktitle = {Proceedings of the 14th International Conference on Theory and Practice of Electronic Governance},
pages = {51–56},
numpages = {6},
location = {Athens, Greece},
series = {ICEGOV '21}
}

@article{10.1145/3498665,
author = {Tan, Bryan and Mariano, Benjamin and Lahiri, Shuvendu K. and Dillig, Isil and Feng, Yu},
title = {SolType: Refinement Types for Arithmetic Overflow in Solidity},
year = {2022},
issue_date = {January 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {POPL},
url = {https://doi.org/10.1145/3498665},
doi = {10.1145/3498665},
abstract = {As smart contracts gain adoption in financial transactions, it becomes increasingly important to ensure that they are free of bugs and security vulnerabilities. Of particular relevance in this context are arithmetic overflow bugs, as integers are often used to represent financial assets like account balances. Motivated by this observation, this paper presents SolType, a refinement type system for Solidity that can be used to prevent arithmetic over- and under-flows in smart contracts. SolType allows developers to add refinement type annotations and uses them to prove that arithmetic operations do not lead to over- and under-flows. SolType incorporates a rich vocabulary of refinement terms that allow expressing relationships between integer values and aggregate properties of complex data structures. Furthermore, our implementation, called Solid, incorporates a type inference engine and can automatically infer useful type annotations, including non-trivial contract invariants. To evaluate the usefulness of our type system, we use Solid to prove arithmetic safety of a total of 120 smart contracts. When used in its fully automated mode (i.e., using Solid's type inference capabilities), Solid is able to eliminate 86.3% of redundant runtime checks used to guard against overflows. We also compare Solid against a state-of-the-art arithmetic safety verifier called VeriSmart and show that Solid has a significantly lower false positive rate, while being significantly faster in terms of verification time.},
journal = {Proc. ACM Program. Lang.},
month = {jan},
articleno = {4},
numpages = {29},
keywords = {smart contracts, refinement type inference, integer overflow}
}

@article{10.1145/3502740,
author = {Ahmadjee, Sabreen and Mera-G\'{o}mez, Carlos and Bahsoon, Rami and Kazman, Rick},
title = {A Study on Blockchain Architecture Design Decisions and Their Security Attacks and Threats},
year = {2022},
issue_date = {April 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {31},
number = {2},
issn = {1049-331X},
url = {https://doi.org/10.1145/3502740},
doi = {10.1145/3502740},
abstract = {Blockchain is a disruptive technology intended to implement secure decentralised distributed systems, in which transactional data can be shared, stored, and verified by participants of the system without needing a central authentication/verification authority. Blockchain-based systems have several architectural components and variants, which architects can leverage to build secure software systems. However, there is a lack of studies to assist architects in making architecture design and configuration decisions for blockchain-based systems. This knowledge gap may increase the chance of making unsuitable design decisions and producing configurations prone to potential security risks. To address this limitation, we report our comprehensive systematic literature review to derive a taxonomy of commonly used architecture design decisions in blockchain-based systems. We map each of these decisions to potential security attacks and their posed threats. MITRE’s attack tactic categories and Microsoft STRIDE threat modeling are used to systematically classify threats and their associated attacks to identify potential attacks and threats in blockchain-based systems. Our mapping approach aims to guide architects to make justifiable design decisions that will result in more secure implementations.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = {apr},
articleno = {36e},
numpages = {45},
keywords = {design decisions, architecture decision, security threat classification, Blockchain}
}

@proceedings{10.1145/3559795,
title = {BIOTC '22: Proceedings of the 2022 4th Blockchain and Internet of Things Conference},
year = {2022},
isbn = {9781450396622},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Tokyo, China}
}

@inproceedings{10.1145/3549206.3549289,
author = {Deshmukh, Atharva and Patil, Disha and Tyagi, Amit Kumar and S S, Arumugam and Arumugam},
title = {Recent Trends on Blockchain for Internet of Things Based Applications: Open Issues and Future Trends},
year = {2022},
isbn = {9781450396752},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3549206.3549289},
doi = {10.1145/3549206.3549289},
abstract = {Today Blockchain, a decentralized, and distributed ledger technology have started taking over almost all the applications from banking, agriculture, finance, transportation, etc. Such enhancements are possible when this technology is enabled with some other technology like the Internet of Things, cloud computing, machine learning, etc. This paper does a thorough evaluation of the literature concerning blockchain enabling IoT-based applications in diverse sectors. The goal is to look at the current state of blockchain based IoT systems and applications and to demonstrate how special qualities of this technology can transform the working methods in the industry. We analysed high-quality papers published in high-ranking scientific journals over the last years to write this paper. This work presents a comprehensive classification of IoT and Blockchain enabled applications across many sectors such as Agriculture, Business, Supply Chain, Data Management, Finance, Healthcare, IoT, and&nbsp;Privacy, and in the end, we have added recent trends, emerging areas, and open challenges, for future research across various sectors and industries, based on a structured, systematic review and thematic content analysis of the discovered literature. We feel that our work will be of tremendous use to both academics and practitioners because we have discovered such critical components for this technology.},
booktitle = {Proceedings of the 2022 Fourteenth International Conference on Contemporary Computing},
pages = {484–492},
numpages = {9},
keywords = {Research Analysis, Internet of Things, Research statements, Recent Trends, Blockchain Technology},
location = {Noida, India},
series = {IC3-2022}
}

@inproceedings{10.1145/3544548.3581173,
author = {Fan, Sizheng and Min, Tian and Wu, Xiao and Cai, Wei},
title = {Altruistic and Profit-Oriented: Making Sense of Roles in Web3 Community from Airdrop Perspective},
year = {2023},
isbn = {9781450394215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544548.3581173},
doi = {10.1145/3544548.3581173},
abstract = {Regardless of which community, incentivizing users is a necessity for well-sustainable operations. In the blockchain-backed Web3 communities, known for their transparency and security, airdrop serves as a widespread incentive mechanism for allocating capital and power. However, it remains a controversy on how to justify airdrop to incentive and empower the decentralized governance. In this paper, we use ParaSwap as an example to propose a role taxonomy methodology through a data-driven study to understand the characteristic of community members and the effectiveness of airdrop. We find that users receive more rewards tend to take positive actions towards the community. We summarize several arbitrage patterns and confirm the current detection is not sufficient in screening out airdrop hunters. In conjunction with the results, we discuss from the aspects of interaction, financialization, and system design to conclude the challenges and possible research directions for decentralized communities.},
booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {551},
numpages = {16},
keywords = {Airdrop, Unsupervised learning, Network analysis, Decentralized community},
location = {Hamburg, Germany},
series = {CHI '23}
}

@article{10.1145/3539814.3539821,
author = {Soldani, Jacopo},
title = {An Interview with Xin Xia - 2022 SIGSOFT Awardee},
year = {2022},
issue_date = {July 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {47},
number = {3},
issn = {0163-5948},
url = {https://doi.org/10.1145/3539814.3539821},
doi = {10.1145/3539814.3539821},
abstract = {Xin Xia received the 2022 SIGSOFT Early Career Researcher Award for his contributions to AI and SE, mining software repositories, and empirical software engineering. He is the Director of the Software Engineering Application Technology Lab at Huawei, China. He received the Ph.D. degree in Computer Science in 2014 from the College of Computer Science and Technology (Zhejiang University, China), and - prior to joining Huawei - he was an ARC DECRA Fellow and a lecturer at the Faculty of Information Technology, Monash University, Australia.},
journal = {SIGSOFT Softw. Eng. Notes},
month = {jul},
pages = {22–23},
numpages = {2}
}

@inproceedings{10.1145/3512676.3512685,
author = {Zhao, Liang and Chen, Leilei and Safi, Adnan},
title = {Blockchain Technology in Post-Covid Agriculture},
year = {2022},
isbn = {9781450387422},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3512676.3512685},
doi = {10.1145/3512676.3512685},
abstract = {The Covid-19 pandemic poses great challenges to the resilience of global agriculture in response to disasters or crises. The pandemic mitigation measures prevent the spread of coronavirus but bring disruptions to the agriculture sector. Smallholder farmers and small agricultural producer particularly showed their vulnerability to these disruptions amid the pandemic. Technology innovations can be adopted to develop resilient, flexible and inclusive agriculture. Blockchain enables autonomous and decentralized coordination of trust in a distributed network without any trusted third-party intermediaries that can vastly reduce the transaction costs of exchange and trade. This paper examines the viable applications of blockchain technology in enhancing the resilience of agriculture and the food supply chain, facilitating trades and financing, and driving value allocation from a perspective of institutional economics.},
booktitle = {2022 5th International Conference on Computers in Management and Business (ICCMB)},
pages = {50–55},
numpages = {6},
keywords = {Decentralized governance, Agricultural resilience, Covid-19, Blockchain},
location = {Singapore, Singapore},
series = {ICCMB 2022}
}

@inproceedings{10.1145/3537693.3537718,
author = {Handoko, Bambang Leo and Gunawan, Bryan Aurelio and Djati, Muhammad Fikri Permana},
title = {Importance Of Blockchain Within The Big 4 CPA Firms: Cryptocurrency'S Existence},
year = {2022},
isbn = {9781450396523},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3537693.3537718},
doi = {10.1145/3537693.3537718},
abstract = {The development of technology has been growing rapidly in the current state of time. With that being said, blockchain is one of the important pillars that is currently revolutionizing the traditional way of life. It is a new system that brings not only more efficiency, but also more challenges to be faced as well to many fields, including accounting and audit as one of them. Our research is going to discuss how blockchain is going to create multiple breakthroughs in accounting and audit field, bringing not only potential benefits and efficiencies, but also new challenges that must be addressed, including how cryptocurrency is handled in terms of accounting and audit, as it is recognized as one of the most popular uses of blockchain technology worldwide. The selection of Big 4 CPA firms is based on the evidence shown by those leading accounting firms in terms of adopting blockchain technology in their way of work and how they approach the technology innovation. This is shown by their interest on the matter which is published on their own respective websites. Our research used a descriptive qualitative approach, obtaining secondary data from papers, journals, books, and relevant websites.},
booktitle = {Proceedings of the 6th International Conference on E-Commerce, E-Business and E-Government},
pages = {190–196},
numpages = {7},
keywords = {Cryptocurrency, Big Four CPA Firms, Blockchain},
location = {Plymouth, United Kingdom},
series = {ICEEG '22}
}

@inproceedings{10.1145/3530019.3531345,
author = {Haugum, Terje and Hoff, Bj\o{}rnar and Alsadi, Mohammed and Li, Jingyue},
title = {Security and Privacy Challenges in Blockchain Interoperability - A Multivocal Literature Review},
year = {2022},
isbn = {9781450396134},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3530019.3531345},
doi = {10.1145/3530019.3531345},
abstract = {Transferring data and value across different blockchains is one of the biggest obstacles to further expansion. Blockchain interoperability allows different networks to communicate and transfer data between them and are increasingly crucial for blockchain applications. However, the concern about security and privacy in blockchain interoperability arises naturally. This work aims to provide the state-of-the-art related to security and privacy challenges in blockchain interoperability. We conducted a multivocal literature review (MLR) and analyzed 16 scientific and 30 grey literature, respectively. We examined different security and privacy challenges related to both blockchain in general and blockchain interoperability approaches such as Notary Schemes, Sidechains and Hashed Time-Lock Contracts. Possible mitigations are analysed, and open challenges that arose from the mitigations are highlighted.},
booktitle = {Proceedings of the International Conference on Evaluation and Assessment in Software Engineering 2022},
pages = {347–356},
numpages = {10},
keywords = {privacy, Blockchain, security, interoperability},
location = {Gothenburg, Sweden},
series = {EASE '22}
}

@inproceedings{10.1145/3478431.3499300,
author = {Wang, Yongzhi and Hsin, Wen-Jung and Lamsal, Manish},
title = {EdGENI: Making GENI User-Friendly for General Computer Education},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499300},
doi = {10.1145/3478431.3499300},
abstract = {GENI (Global Environment for Network Innovations) has been used in network research and education for more than a decade. However, because GENI lacks Graphic User Interface (GUI) and customized VM images, very few institutions utilize virtual machines (VM) deployed on GENI for generalized computer education. Additionally, connecting VMs on GENI requires complex configuration, which is time-consuming and error-prone. In this paper, we introduce EdGENI, an educational experiment solution built on top of GENI. EdGENI introduces a desktop environment to the GENI VM and allows users to save, duplicate, and share VM environments with other users. Furthermore, EdGENI also introduces a client application, PuTTY Connect, to simplify the process of making VM connections. These features improve the user experience and extend the user base of GENI, thus delivering a generalized experiment platform for computer education. We also developed a series of labs in EdGENI, covering topics of cybersecurity and blockchain. These labs are suitable for a wide range of students, from entry-level students who are unfamiliar with command-line interface to advanced students who are interested in sophisticated network attacks and preventions. The paper also provides an empirical support on the potential of EdGENI in helping students learning and developing skills in the cybersecurity field.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
pages = {801–807},
numpages = {7},
keywords = {cybersecurity, geni, graphical user interface, blockchain},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3524860.3539805,
author = {Kolyvas, Evangelos and Voulgaris, Spyros},
title = {CougaR: Fast and Eclipse-Resilient Dissemination for Blockchain Networks},
year = {2022},
isbn = {9781450393089},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3524860.3539805},
doi = {10.1145/3524860.3539805},
abstract = {Despite their development for over a decade, a key problem block-chains are still facing is scalability in terms of throughput, typically limited to a few transactions per second. A fundamental factor limiting this metric is the propagation latency of blocks through the underlying peer-to-peer network, which is typically constructed by means of random connectivity. Disseminating blocks fast improves not only the transaction throughput, but also the security of the system as it reduces the probability of forks. In this paper we present CougaR: a simple yet efficient, eclipse-resistant, decentralized protocol that substantially reduces the block dissemination time in blockchain networks. CougaR's key advantages stem from its link selection policy, which combines a network latency criterion with randomness to offer fast and reliable block dissemination to the entire network. Moreover, CougaR is eclipse-resistant by design, as nodes are protected from having all their links directly or indirectly imposed on them by others, which is the typical vulnerability exploited to deploy eclipse attacks. We rigorously evaluate CougaR by an extensive set of experiments, both against a wide spectrum of parameter settings, and in comparison to the current state of the art.},
booktitle = {Proceedings of the 16th ACM International Conference on Distributed and Event-Based Systems},
pages = {7–18},
numpages = {12},
location = {Copenhagen, Denmark},
series = {DEBS '22}
}

@inproceedings{10.1145/3505253.3505259,
author = {Rabimba, Karanjai and Xu, Lei and Chen, Lin and Zhang, Fengwei and Gao, Zhimin and Shi, Weidong},
title = {Lessons Learned from Blockchain Applications of Trusted Execution Environments and Implications for Future Research},
year = {2022},
isbn = {9781450396141},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3505253.3505259},
doi = {10.1145/3505253.3505259},
abstract = {Modern computer systems tend to rely on large trusted computing bases (TCBs) for operations. To address the TCB bloating problem, hardware vendors have developed mechanisms to enable or facilitate the creation of a trusted execution environment (TEE) in which critical software applications can execute securely in an isolated environment. Even under the circumstance that a host OS is compromised by an adversary, key security properties such as confidentiality and integrity of the software inside the TEEs can be guaranteed. The promise of integrity and security has driven developers to adopt it for use cases involving access control, PKS, IoT among other things. Among these applications include blockchain-related use cases. The usage of the TEEs doesn’t come without its own implementation challenges and potential pitfalls. In this paper, we examine the assumptions, security models, and operational environments of the proposed TEE use cases of blockchain-based applications. The exercise and analysis help the hardware TEE research community to identify some open challenges and opportunities for research and rethink the design of hardware TEEs in general.},
booktitle = {Workshop on Hardware and Architectural Support for Security and Privacy},
articleno = {5},
numpages = {8},
keywords = {Blockchain Trusted Execution Environment Survey Crypto-currency.},
location = {Virtual, CT, USA},
series = {HASP '21}
}

@proceedings{10.1145/3565383,
title = {DICG '22: Proceedings of the 3rd International Workshop on Distributed Infrastructure for the Common Good},
year = {2022},
isbn = {9781450399289},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Quebec, Quebec City, Canada}
}

@proceedings{10.1145/3563768,
title = {SPLASH Companion 2022: Companion Proceedings of the 2022 ACM SIGPLAN International Conference on Systems, Programming, Languages, and Applications: Software for Humanity},
year = {2022},
isbn = {9781450399012},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
abstract = {Welcome to the SPLASH 2022! After two years of virtual only (SPLASH 2020), closed borders USA only (SPLASH 2021), we finally feel the reopening and going back to the pre-Covid in person vibe of the 37th OOPSLA/SPLASH. I am especially proud of having SPLASH outside of the USA/Canada region for the 3rd time in its history and the first time it is held in the Asia Pacific. We invited the Asian Symposium on Programming Languages and Systems (APLAS) to co-locate with us for the 3rd year in a row to celebrate this occasion.},
location = {Auckland, New Zealand}
}

@inproceedings{10.1145/3542954.3542974,
author = {Subah, Zarin and Rozario, Sharlene and Islam, Nafiul and Amir, Syed Athar Bin},
title = {Blockchain Technology Integrated Electronic Vote Casting System},
year = {2022},
isbn = {9781450397346},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3542954.3542974},
doi = {10.1145/3542954.3542974},
abstract = {Existing voting systems are unable to assure security of an individual’s vote, and keep elections free from biased results due to temperament by malicious people. Traditional electoral process is vulnerable in regards to security aspects and is usually very time consuming. These cause threats to the important characteristics of election such as- transparency, privacy of voters &amp; democracy. Our team proposes to remove these inconveniences by implementing blockchain technology into the voting scheme. This technology will make the voting process decentralized, keeps each vote secured and counted whilst providing privacy to voters, and will also save time and resources. Using Node JS, cryptography algorithms our proposed system was built. Additionally, challenges of the system are addressed and still being improved using potential solutions.},
booktitle = {Proceedings of the 2nd International Conference on Computing Advancements},
pages = {133–137},
numpages = {5},
keywords = {Electronic voting, Blockchain, Decentralization, Mining},
location = {Dhaka, Bangladesh},
series = {ICCA '22}
}

@proceedings{10.1145/3545948,
title = {RAID '22: Proceedings of the 25th International Symposium on Research in Attacks, Intrusions and Defenses},
year = {2022},
isbn = {9781450397049},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Limassol, Cyprus}
}

@proceedings{10.1145/3551349,
title = {ASE '22: Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
year = {2022},
isbn = {9781450394758},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Rochester, MI, USA}
}

@proceedings{10.1145/3524458,
title = {GoodIT '22: Proceedings of the 2022 ACM Conference on Information Technology for Social Good},
year = {2022},
isbn = {9781450392846},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Limassol, Cyprus}
}

@article{10.1145/3576899,
author = {Wang, Qin and Yu, Jiangshan and Chen, Shiping and Xiang, Yang},
title = {SoK: DAG-Based Blockchain Systems},
year = {2023},
issue_date = {December 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {12},
issn = {0360-0300},
url = {https://doi.org/10.1145/3576899},
doi = {10.1145/3576899},
abstract = {Limitations on high latency and low scalability of classical blockchain systems retard their adoptions and applications. Reconstructed blockchain systems have been proposed to avoid the consumption of competitive transactions caused by linear sequenced blocks. These systems, instead, structure transactions/blocks in the form of Directed Acyclic Graph (DAG) and consequently rebuild upper layer components. The promise of DAG-based blockchain systems is to enable fast confirmation (complete transactions within million seconds) and high scalability (attach transactions in parallel) without significantly compromising security. However, this field still lacks systematic work that summarises DAG techniques. To bridge the gap, this Systematization of Knowledge (SoK) provides a comprehensive analysis of ever-existing and ongoing DAG-based blockchain systems. We abstract a general model to capture the main features and identify six types of design patterns. Then, we evaluate these systems from the perspectives of structure, consensus, property, security, and performance. We further discuss the trade-off between different factors, open challenges, and the potentiality of DAG-based solutions, indicating their promising directions for future research.},
journal = {ACM Comput. Surv.},
month = {mar},
articleno = {261},
numpages = {38},
keywords = {performance, SoK, DAG-based blockchain}
}

@inproceedings{10.1145/3510249.3510258,
author = {Gao, Wei and Chen, Ping-Kuo},
title = {Analysis of Barriers to Implement Blockchain in Supply Chain Finance},
year = {2022},
isbn = {9781450387392},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510249.3510258},
doi = {10.1145/3510249.3510258},
abstract = {With the innovation of financial technology and the development of supply chain finance, the supply chain finance system has become increasingly complex and risks from various aspects have started to emerge. And blockchain, as an emerging technology, can optimize the existing system. Therefore, implementing the blockchain technology into traditional supply chain finance has become important issue However, various barriers from grey transaction behaviours may affect the implementation and further affect the improvement of supply chain finance. Although currently studies have provided more suggestions, however, they lack to explore the implementation barriers based on the grey transaction behaviours under supply chain finance. The main purpose of this research is to explore grey transaction behaviours in supply chain finance and how these behaviours hinder the implementation of blockchain technology in supply chain finance. To obtain relevant indicators, this study used the Delphi method to interview senior supply chain finance professionals. This study is an initially exploration, we provide a different research direction.},
booktitle = {2021 3rd International Conference on E-Business and E-Commerce Engineering},
pages = {46–52},
numpages = {7},
keywords = {Grey transaction behaviour, Import barriers, Delphi method, Supply chain finance, Blockchain},
location = {Sanya, China},
series = {EBEE 2021}
}

@inproceedings{10.1145/3527049.3527140,
author = {Berawi, Mohammed Ali and Zagloel, Teuku Yuri and Ariq, Muhammad Naufal and Sari, Mustika},
title = {A Blockchain-Based BIM Model for the Smart Building Planning Process},
year = {2022},
isbn = {9781450386944},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3527049.3527140},
doi = {10.1145/3527049.3527140},
abstract = {Players in the building and construction industry have progressively adopted building Information Modelling (BIM) to improve the efficiency of building information management through its rich digital building models used at all building life cycle stages. However, there are still several constraints in the BIM collaboration process and data management regarding data security, accountability, and transparency. On the other hand, blockchain, a distributed ledger technology, is considered a solution to address those constraints. Therefore, this paper aims to integrate blockchain technology into the BIM workflow, focusing on the smart building planning process that holds most data generation of the activities in the whole construction project. To obtain the objectives of this study, literature review, benchmarking study, and expert interviews were conducted in two stages, firstly to identify the characteristics and components of a smart building and then to develop further the blockchain-based framework for smart building planning in the BIM model. By developing the framework that utilizes Ethereum blockchain and InterPlanetary File System (IPFS) peer-to-peer storage in Revit BIM client, the results of this study showed that the integration of blockchain in BIM workflow provides an improved platform in terms of data security, accountability, transparency, in which digital signature can be created, and authorization for the models is provided for the planning process of a smart building.},
booktitle = {Proceedings of the 3rd International Scientific Conference on Innovations in Digital Economy},
pages = {253–261},
numpages = {9},
keywords = {Blockchain, Smart Building, Planning, BIM},
location = {Saint - Petersburg, Russian Federation},
series = {SPBPU IDE '21}
}

@inproceedings{10.1145/3548606.3560620,
author = {Niu, Jianyu and Peng, Wei and Zhang, Xiaokuan and Zhang, Yinqian},
title = {NARRATOR: Secure and Practical State Continuity for Trusted Execution in the Cloud},
year = {2022},
isbn = {9781450394505},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3548606.3560620},
doi = {10.1145/3548606.3560620},
abstract = {Public cloud platforms have leveraged Trusted Execution Environment (TEE) technology to provide confidential computing services. However, TEE-protected applications still suffer from rollback or forking attacks, in which their states could be rolled back to a stale version or be forked into multiple versions, resulting in state continuity violations. Existing solutions against these attacks either rely on weak threat models based on centralized trust (e.g., trusted server) or suffer from large performance overheads (e.g., tens of state updates per second). In this paper, we propose Narrator, a secure and practical system, (1) that relies on a blockchain (i.e., decentralized trust) and TEEs, and (2) that provides high-performance state continuity protection like unlimited and fast state updates for applications in cloud TEEs. The intuition behind our design is simple. Our design uses the blockchain to initialize a distributed system of TEEs, laying down the decentralized trust base with a small interaction overhead, while the distributed system provides performant state continuity protection. Our distributed system adopts a customized version of the consistent broadcast protocol and leverages advanced techniques to make state updates processed with one round trip delay on average. We build a proof-of-concept of Narrator on Intel SGX (i.e., a representative design of TEEs) and do extensive experiments to evaluate its performance. Our evaluation results show that in a LAN environment with 5 nodes, Narrator can support about 6k state updates per second, meanwhile keeping the latency as low as 3-8 ms. The throughput is 30x larger than that in ROTE and 70x larger than using a TPM counter.},
booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
pages = {2385–2399},
numpages = {15},
keywords = {trusted execution environment, blockchain, rollback attack, cloud, state continuity, forking attack},
location = {Los Angeles, CA, USA},
series = {CCS '22}
}

@proceedings{10.1145/3579895,
title = {ICNCC '22: Proceedings of the 2022 11th International Conference on Networks, Communication and Computing},
year = {2022},
isbn = {9781450398039},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Beijing, China}
}

@article{10.1145/3578581,
author = {Ihle, Cornelius and Trautwein, Dennis and Schubotz, Moritz and Meuschke, Norman and Gipp, Bela},
title = {Incentive Mechanisms in Peer-to-Peer Networks — A Systematic Literature Review},
year = {2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {0360-0300},
url = {https://doi.org/10.1145/3578581},
doi = {10.1145/3578581},
abstract = {Centralized networks inevitably exhibit single points of failure that malicious actors regularly target. Decentralized networks are more resilient if numerous participants contribute to the network’s functionality. Most decentralized networks employ incentive mechanisms to coordinate the participation and cooperation of peers and thereby ensure the functionality and security of the network. This article systematically reviews incentive mechanisms for decentralized networks and networked systems by covering 165 prior literature reviews and 178 primary research papers published between 1993 and October 2022. Of the considered sources, we analyze eleven literature reviews and 105 primary research papers in detail by categorizing and comparing the distinctive properties of the presented incentive mechanisms. The reviewed incentive mechanisms establish fairness and reward participation and cooperative behavior. We review work that substitutes central authority through independent and subjective mechanisms run in isolation at each participating peer and work that applies multiparty computation. We use monetary, reputation, and service rewards as categories to differentiate the implementations and evaluate each incentive mechanism’s data management, attack resistance, and contribution model. Further, we highlight research gaps and deficiencies in reproducibility and comparability. Finally, we summarize our assessments and provide recommendations to apply incentive mechanisms to decentralized networks that share computational resources.},
note = {Just Accepted},
journal = {ACM Comput. Surv.},
month = {jan},
keywords = {incentive mechanism, credit, tit-for-tat, Peer-to-peer, reputation, service incentives, p2p, monetary incentives}
}

@article{10.1109/TNET.2022.3141582,
author = {An, Jian and Wang, Zhenxing and He, Xin and Gui, Xiaolin and Cheng, Jindong and Gui, Ruowei},
title = {PPQC: A Blockchain-Based Privacy-Preserving Quality Control Mechanism in Crowdsensing Applications},
year = {2022},
issue_date = {June 2022},
publisher = {IEEE Press},
volume = {30},
number = {3},
issn = {1063-6692},
url = {https://doi.org/10.1109/TNET.2022.3141582},
doi = {10.1109/TNET.2022.3141582},
abstract = {With the rapid development of embedded smart devices, a new data collection paradigm, mobile crowd-sensing (MCS), has been proposed. MCS allows individuals from the crowd to act as sensors and contribute their observation data. However, existing MCS systems are mostly based on third-party platforms, and there is no guarantee that a center is completely credible. In addition, security and privacy issues should not be ignored. During MCS’ execution, the participants’ various information and truth value are usually exposed, and the computation related to data privacy cannot be verified. In this paper, we integrate the blockchain into the MCS scenario to design a blockchain based privacy-preserving quality control mechanism, which prevents data from being tampered with, and denied, ensuring that the reward is distributed fairly. In the new system, we propose a privacy preserving participant selection scheme and the result can be verified (i.e., security against malicious node) without any third-party arbiter. Finally, considering the issues with sensing data privacy and efficiency in the truth discovery process, we propose a new privacy-aware crowdsensing design with iterative truth discovery based on rational secure multi-party computation. The experimental results show that compared to the prior result, the proposed solutions are highly practical and facilitate quality control without violating the participant’s privacy.},
journal = {IEEE/ACM Trans. Netw.},
month = {jan},
pages = {1352–1367},
numpages = {16}
}

@article{10.1145/3512345,
author = {Zhu, Xiaogang and Wen, Sheng and Camtepe, Seyit and Xiang, Yang},
title = {Fuzzing: A Survey for Roadmap},
year = {2022},
issue_date = {January 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {54},
number = {11s},
issn = {0360-0300},
url = {https://doi.org/10.1145/3512345},
doi = {10.1145/3512345},
abstract = {Fuzz testing (fuzzing) has witnessed its prosperity in detecting security flaws recently. It generates a large number of test cases and monitors the executions for defects. Fuzzing has detected thousands of bugs and vulnerabilities in various applications. Although effective, there lacks systematic analysis of gaps faced by fuzzing. As a technique of defect detection, fuzzing is required to narrow down the gaps between the entire input space and the defect space. Without limitation on the generated inputs, the input space is infinite. However, defects are sparse in an application, which indicates that the defect space is much smaller than the entire input space. Besides, because fuzzing generates numerous test cases to repeatedly examine targets, it requires fuzzing to perform in an automatic manner. Due to the complexity of applications and defects, it is challenging to automatize the execution of diverse applications. In this article, we systematically review and analyze the gaps as well as their solutions, considering both breadth and depth. This survey can be a roadmap for both beginners and advanced developers to better understand fuzzing.},
journal = {ACM Comput. Surv.},
month = {sep},
articleno = {230},
numpages = {36},
keywords = {automation, Fuzz testing, fuzzing theory, input space, security}
}

@article{10.1145/3588999,
author = {Hammi, Badis and Zeadally, Sherali and Nebhen, Jamel},
title = {Security Threats, Countermeasures, and Challenges of Digital Supply Chains},
year = {2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {0360-0300},
url = {https://doi.org/10.1145/3588999},
doi = {10.1145/3588999},
abstract = {The rapid growth of Information Communication Technologies (ICT) has impacted many fields. In this context, the supply chain has also quickly evolved toward the digital supply chain where digital and electronic technologies have been integrated into every aspect of its end-to-end process. This evolution provides numerous benefits such as profit maximization, loss reduction, and the optimization of supply chain lead times. However, the use of such technologies has also considerably opened up various security threats and risks which have widened the attack surface on the entire end-to-end supply chain. We present a holistic survey on supply chain security. We discuss the different security issues and attacks that target the different supply chain technologies. Then, we discuss various countermeasures and security solutions proposed by academic and industry researchers to mitigate the identified threats. Finally, we provide some recommendations and best practices that can be adopted to achieve a secure supply chain.},
note = {Just Accepted},
journal = {ACM Comput. Surv.},
month = {mar},
keywords = {Supply chain cybersecurity, issues, IIoT, Cyberattacks, Countermeasures, CPS, Blockchain}
}

@proceedings{10.1145/3528535,
title = {Middleware '22: Proceedings of the 23rd ACM/IFIP International Middleware Conference},
year = {2022},
isbn = {9781450393409},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Quebec, QC, Canada}
}

@article{10.1145/3491258,
author = {Oakley, Jonathan and Worley, Carl and Yu, Lu and Brooks, Richard R. and \"{O}z\c{c}elik, undefinedlker and Skjellum, Anthony and Obeid, Jihad S.},
title = {Scrybe: A Secure Audit Trail for Clinical Trial Data Fusion},
year = {2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
issn = {2692-1626},
url = {https://doi.org/10.1145/3491258},
doi = {10.1145/3491258},
abstract = {Clinical trials are a multi-billion dollar industry. One of the biggest challenges facing the clinical trial research community is satisfying Part 11 of Title 21 of the Code of Federal Regulations [7] and ISO 27789 [40]. These controls provide audit requirements that guarantee the reliability of the data contained in the electronic records. Context-aware smart devices and wearable IoT devices have become increasingly common in clinical trials. Electronic Data Capture (EDC) and Clinical Data Management Systems (CDMS) do not currently address the new challenges introduced using these devices. The healthcare digital threat landscape is continually evolving, and the prevalence of sensor fusion and wearable devices compounds the growing attack surface. We propose Scrybe, a permissioned blockchain, to store proof of clinical trial data provenance. We illustrate how Scrybe addresses each control and the limitations of the Ethereum-based blockchains. Finally, we provide a proof-of-concept integration with REDCap to show tamper resistance.},
note = {Just Accepted},
journal = {Digital Threats},
month = {mar},
keywords = {ISO 27789, Title 21 CFR Part 11, Blockchain, Clinical Trials, REDCap, Secure Audit}
}

@article{10.1145/3549527,
author = {Agarwal, Rachit and Thapliyal, Tanmay and Shukla, Sandeep},
title = {Analyzing Malicious Activities and Detecting Adversarial Behavior in Cryptocurrency Based Permissionless Blockchains: An Ethereum Usecase},
year = {2022},
issue_date = {December 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {2},
issn = {2769-6472},
url = {https://doi.org/10.1145/3549527},
doi = {10.1145/3549527},
abstract = {Different malicious activities occur in cryptocurrency-based permissionless blockchains such as Ethereum and Bitcoin. Some activities are due to the exploitation of vulnerabilities which are present in the blockchain infrastructure, some activities target its users through social engineering techniques, while some activities use it to facilitate different malicious activities. Since cryptocurrency-based permissionless blockchains provide pseudonymity to its users, bad actors prefer to carry out transactions related to malicious activities on them. Towards this, we aim at automatically flagging blockchain accounts as suspects that indulge in malicious activities, thus reducing the unintended support that cryptocurrency-based permissionless blockchains provide to malicious actors. We first use the cosine similarity (CS) metrics to study the similarities between the feature vector of accounts associated with different malicious activities and find that most of the malicious activities associated with the Ethereum blockchain behave similarly. We then use the K-Means clustering algorithm to check if accounts associated with similar malicious activities cluster together. We also study the effect of bias on the performance of a machine learning (ML) algorithm, due to the number of accounts associated with malicious activity. We then compare the different state-of-the-art models and identify that Neural Networks (NNs) are resistant to bias associated with a malicious activity and are also robust against adversarial attacks. The previously used ML algorithms for identifying malicious accounts also show bias towards an over-represented malicious activity.},
journal = {Distrib. Ledger Technol.},
month = {dec},
articleno = {8},
numpages = {21},
keywords = {Blockchain, suspect identification, ML}
}

@proceedings{10.1145/3573105,
title = {CPP 2023: Proceedings of the 12th ACM SIGPLAN International Conference on Certified Programs and Proofs},
year = {2023},
isbn = {9798400700262},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
abstract = {Welcome to the 12th ACM SIGPLAN International Conference on Certified Programs and Proofs (CPP 2023)! CPP covers the practical and theoretical topics in all areas that consider formal verification and certification as essential paradigms for their work. CPP spans topics in computer science, mathematics, logic, and education. CPP 2023 will be held on 16-17 January 2023 in Boston, Massachusetts, United States. The conference is co-located with POPL 2023, and is sponsored by ACM SIGPLAN in cooperation with ACM SIGLOG},
location = {Boston, MA, USA}
}

@proceedings{10.1145/3567445,
title = {IoT '22: Proceedings of the 12th International Conference on the Internet of Things},
year = {2022},
isbn = {9781450396653},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Delft, Netherlands}
}

@proceedings{10.1145/3540250,
title = {ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
year = {2022},
isbn = {9781450394130},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
abstract = {On behalf of all members of the organizing committee, we are delighted to welcome everyone to the ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE) 2022. The event continues the long, distinguished ESEC/FSE tradition of presenting the most innovative research, and facilitating interactions between scientists and engineers who are passionate about advancing the theory and practice of software engineering.},
location = {Singapore, Singapore}
}

@inproceedings{10.1145/3488932.3517394,
author = {Wang, Qin and Li, Rujia and Wang, Qi and Chen, Shiping and Xiang, Yang},
title = {Exploring Unfairness on Proof of Authority: Order Manipulation Attacks and Remedies},
year = {2022},
isbn = {9781450391405},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488932.3517394},
doi = {10.1145/3488932.3517394},
abstract = {Proof of Authority (PoA) is a type of permissioned consensus algorithm with a fixed committee. PoA has been widely adopted by communities and industries due to its better performance and faster finality. In this paper, we explore the unfairness issue existing in the current PoA implementations. We have investigated 2,500+ in the wild projects and selected 10+ as our main focus (covering Ethereum, Binance smart chain, etc.). We have identified two types of order manipulation attacks to separately break the transaction-level (a.k.a. transaction ordering) and the block-level (sealer position ordering) fairness. Both of them merely rely on honest-but-profitable sealer assumption without modifying original settings. We launch these attacks on the forked branches under an isolated environment and carefully evaluate the attacking scope towards different implementations. To date (as of Nov 2021), the potentially affected PoA market cap can reach up to 681,087 million USD. Besides, we further dive into the source code of selected projects, and accordingly, propose our recommendation for the fix. To the best of knowledge, this work provides the first exploration of the unfairness issue in PoA algorithms.},
booktitle = {Proceedings of the 2022 ACM on Asia Conference on Computer and Communications Security},
pages = {123–137},
numpages = {15},
keywords = {proof of authority, fairness, order manipulation},
location = {Nagasaki, Japan},
series = {ASIA CCS '22}
}

@inproceedings{10.1145/3548606.3559341,
author = {Liu, Yulin and Lu, Yuxuan and Nayak, Kartik and Zhang, Fan and Zhang, Luyao and Zhao, Yinhong},
title = {Empirical Analysis of EIP-1559: Transaction Fees, Waiting Times, and Consensus Security},
year = {2022},
isbn = {9781450394505},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3548606.3559341},
doi = {10.1145/3548606.3559341},
abstract = {A transaction fee mechanism (TFM) is an essential component of a blockchain protocol. However, a systematic evaluation of the real-world impact of TFMs is still absent. Using rich data from the Ethereum blockchain, the mempool, and exchanges, we study the effect of EIP-1559, one of the earliest-deployed TFMs that depart from the traditional first-price auction paradigm. We conduct a rigorous and comprehensive empirical study to examine its causal effect on blockchain transaction fee dynamics, transaction waiting times, and consensus security. Our results show that EIP-1559 improves the user experience by mitigating intrablock differences in the gas price paid and reducing users' waiting times. However, EIP-1559 has only a small effect on gas fee levels and consensus security. In addition, we find that when Ether's price is more volatile, the waiting time is significantly higher. We also verify that a larger block size increases the presence of siblings. These findings suggest new directions for improving TFMs.},
booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
pages = {2099–2113},
numpages = {15},
keywords = {eip-1559, bounded rationality, event studies, mechanism design, natural experiments, transaction fees, waiting time, causal inference, consensus security, empirical analysis},
location = {Los Angeles, CA, USA},
series = {CCS '22}
}

@proceedings{10.1145/3579654,
title = {ACAI '22: Proceedings of the 2022 5th International Conference on Algorithms, Computing and Artificial Intelligence},
year = {2022},
isbn = {9781450398336},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Sanya, China}
}

@proceedings{10.1145/3575879,
title = {PCI '22: Proceedings of the 26th Pan-Hellenic Conference on Informatics},
year = {2022},
isbn = {9781450398541},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Athens, Greece}
}

@proceedings{10.1145/3572549,
title = {ICETC '22: Proceedings of the 14th International Conference on Education Technology and Computers},
year = {2022},
isbn = {9781450397766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Barcelona, Spain}
}

@proceedings{10.1145/3538969,
title = {ARES '22: Proceedings of the 17th International Conference on Availability, Reliability and Security},
year = {2022},
isbn = {9781450396707},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Vienna, Austria}
}

@proceedings{10.1145/3547276,
title = {ICPP Workshops '22: Workshop Proceedings of the 51st International Conference on Parallel Processing},
year = {2022},
isbn = {9781450394451},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Bordeaux, France}
}

@proceedings{10.1145/3579375,
title = {ACSW '23: Proceedings of the 2023 Australasian Computer Science Week},
year = {2023},
isbn = {9798400700057},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Melbourne, VIC, Australia}
}

@proceedings{10.1145/3578997,
title = {ICSEB '22: Proceedings of the 2022 6th International Conference on Software and E-Business},
year = {2022},
isbn = {9798400700095},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Shenzhen, China}
}

@proceedings{10.5555/3581644,
title = {CNSM '22: Proceedings of the 18th International Conference on Network and Service Management},
year = {2022},
isbn = {9783903176515},
publisher = {International Federation for Information Processing},
address = {Laxenburg, AUT},
abstract = {CNSM 2022 focuses on the theme "Intelligent Management of Disruptive Network Technologies and Services", that aims at capturing emerging approaches and intelligent solutions for dealing with disruptive network technologies, as well as associated services and applications.},
location = {Thessaloniki, Greece}
}

@proceedings{10.1145/3487553,
title = {WWW '22: Companion Proceedings of the Web Conference 2022},
year = {2022},
isbn = {9781450391306},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Virtual Event, Lyon, France}
}

@proceedings{10.1145/3571306,
title = {ICDCN '23: Proceedings of the 24th International Conference on Distributed Computing and Networking},
year = {2023},
isbn = {9781450397964},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Kharagpur, India}
}

@proceedings{10.1145/3577117,
title = {ICAIP '22: Proceedings of the 6th International Conference on Advances in Image Processing},
year = {2022},
isbn = {9781450397155},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Zhanjiang, China}
}

@proceedings{10.1145/3573834,
title = {AISS '22: Proceedings of the 4th International Conference on Advanced Information Science and System},
year = {2022},
isbn = {9781450397933},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Sanya, China}
}

@proceedings{10.1145/3548608,
title = {ICCIR '22: Proceedings of the 2022 2nd International Conference on Control and Intelligent Robotics},
year = {2022},
isbn = {9781450397179},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Nanjing, China}
}

@proceedings{10.1145/3564858,
title = {IMMS '22: Proceedings of the 5th International Conference on Information Management and Management Science},
year = {2022},
isbn = {9781450396721},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Chengdu, China}
}

@proceedings{10.1145/3564625,
title = {ACSAC '22: Proceedings of the 38th Annual Computer Security Applications Conference},
year = {2022},
isbn = {9781450397599},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Austin, TX, USA}
}

@proceedings{10.1145/3571662,
title = {ICCIP '22: Proceedings of the 8th International Conference on Communication and Information Processing},
year = {2022},
isbn = {9781450397100},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Beijing, China}
}

@proceedings{10.1145/3552326,
title = {EuroSys '23: Proceedings of the Eighteenth European Conference on Computer Systems},
year = {2023},
isbn = {9781450394871},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Rome, Italy}
}

@proceedings{10.1145/3582935,
title = {ICITEE '22: Proceedings of the 5th International Conference on Information Technologies and Electrical Engineering},
year = {2022},
isbn = {9781450396806},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Changsha, China}
}

@proceedings{10.1145/3551690,
title = {ICICM '22: Proceedings of the 12th International Conference on Information Communication and Management},
year = {2022},
isbn = {9781450396493},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {London, United Kingdom}
}

@proceedings{10.1145/3573428,
title = {EITCE '22: Proceedings of the 2022 6th International Conference on Electronic Information Technology and Computer Engineering},
year = {2022},
isbn = {9781450397148},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Xiamen, China}
}

@proceedings{10.1145/3544549,
title = {CHI EA '23: Extended Abstracts of the 2023 CHI Conference on Human Factors in Computing Systems},
year = {2023},
isbn = {9781450394222},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Hamburg, Germany}
}

@proceedings{10.1145/3547522,
title = {NordiCHI '22: Adjunct Proceedings of the 2022 Nordic Human-Computer Interaction Conference},
year = {2022},
isbn = {9781450394482},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Aarhus, Denmark}
}

@proceedings{10.1145/3543434,
title = {dg.o 2022: DG.O 2022: The 23rd Annual International Conference on Digital Government Research},
year = {2022},
isbn = {9781450397490},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Virtual Event, Republic of Korea}
}

@proceedings{10.1145/3568739,
title = {ICDTE '22: Proceedings of the 6th International Conference on Digital Technology in Education},
year = {2022},
isbn = {9781450398091},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Hangzhou, China}
}

@proceedings{10.1145/3527049,
title = {SPBPU IDE '21: Proceedings of the 3rd International Scientific Conference on Innovations in Digital Economy},
year = {2021},
isbn = {9781450386944},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Saint - Petersburg, Russian Federation}
}

@proceedings{10.1145/3576842,
title = {IoTDI '23: Proceedings of the 8th ACM/IEEE Conference on Internet of Things Design and Implementation},
year = {2023},
isbn = {9798400700378},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {San Antonio, TX, USA}
}

@proceedings{10.1145/3548785,
title = {IDEAS '22: Proceedings of the 26th International Database Engineered Applications Symposium},
year = {2022},
isbn = {9781450397094},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Budapest, Hungary}
}

@proceedings{10.1145/3575693,
title = {ASPLOS 2023: Proceedings of the 28th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 2},
year = {2023},
isbn = {9781450399166},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
abstract = {It is our pleasure to introduce Volume II of ASPLOS ’23. For the first time, ASPLOS has embarked on a new multi-deadline review model. ASPLOS ’23 features 3 deadlines spaced throughout the year and papers will be published in three volumes. Multiple deadlines are meant to encourage authors to submit their papers when ready and to facilitate the selection of some papers for revision. For this volume of ASPLOS ’23, we discontinued the use of the 2-page extended abstract submissions that were used in ASPLOS ’21 and ASPLOS ’22. We found the extended abstract offered limited filtering and moved to a more traditional two phase review process. Each paper received 3 reviews in phase 1 and papers with positive scores advanced to the second round and received up to 2 more reviews. In our preface to Volume III, we will give a more detailed rundown of how the process worked.},
location = {Vancouver, BC, Canada}
}

@proceedings{10.1145/3584202,
title = {ICFNDS '22: Proceedings of the 6th International Conference on Future Networks &amp; Distributed Systems},
year = {2022},
isbn = {9781450399050},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Tashkent, TAS, Uzbekistan}
}

@proceedings{10.1145/3569966,
title = {CSSE '22: Proceedings of the 5th International Conference on Computer Science and Software Engineering},
year = {2022},
isbn = {9781450397780},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Guilin, China}
}

@proceedings{10.1145/3572647,
title = {ICEBI '22: Proceedings of the 2022 6th International Conference on E-Business and Internet},
year = {2022},
isbn = {9781450398640},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Singapore, Singapore}
}

@proceedings{10.1145/3582197,
title = {ICIT '22: Proceedings of the 2022 10th International Conference on Information Technology: IoT and Smart City},
year = {2022},
isbn = {9781450397438},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Shanghai, China}
}

@proceedings{10.1145/3573942,
title = {AIPR '22: Proceedings of the 2022 5th International Conference on Artificial Intelligence and Pattern Recognition},
year = {2022},
isbn = {9781450396899},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Xiamen, China}
}

@proceedings{10.1145/3545008,
title = {ICPP '22: Proceedings of the 51st International Conference on Parallel Processing},
year = {2022},
isbn = {9781450397339},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
location = {Bordeaux, France}
}

